/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateWithdraw type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateWithdraw{}

// CreateWithdraw 创建提现单-响应
type CreateWithdraw struct {
	// 提现单id
	WithdrawId *string `json:"withdrawId,omitempty"`
}

// NewCreateWithdraw instantiates a new CreateWithdraw object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateWithdraw() *CreateWithdraw {
	this := CreateWithdraw{}
	return &this
}

// NewCreateWithdrawWithDefaults instantiates a new CreateWithdraw object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateWithdrawWithDefaults() *CreateWithdraw {
	this := CreateWithdraw{}
	return &this
}

// GetWithdrawId returns the WithdrawId field value if set, zero value otherwise.
func (o *CreateWithdraw) GetWithdrawId() string {
	if o == nil || IsNil(o.WithdrawId) {
		var ret string
		return ret
	}
	return *o.WithdrawId
}

// GetWithdrawIdOk returns a tuple with the WithdrawId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWithdraw) GetWithdrawIdOk() (*string, bool) {
	if o == nil || IsNil(o.WithdrawId) {
		return nil, false
	}
	return o.WithdrawId, true
}

// HasWithdrawId returns a boolean if a field has been set.
func (o *CreateWithdraw) HasWithdrawId() bool {
	if o != nil && !IsNil(o.WithdrawId) {
		return true
	}

	return false
}

// SetWithdrawId gets a reference to the given string and assigns it to the WithdrawId field.
func (o *CreateWithdraw) SetWithdrawId(v string) {
	o.WithdrawId = &v
}

func (o CreateWithdraw) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateWithdraw) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WithdrawId) {
		toSerialize["withdrawId"] = o.WithdrawId
	}
	return toSerialize, nil
}

type NullableCreateWithdraw struct {
	value *CreateWithdraw
	isSet bool
}

func (v NullableCreateWithdraw) Get() *CreateWithdraw {
	return v.value
}

func (v *NullableCreateWithdraw) Set(val *CreateWithdraw) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateWithdraw) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateWithdraw) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateWithdraw(val *CreateWithdraw) *NullableCreateWithdraw {
	return &NullableCreateWithdraw{value: val, isSet: true}
}

func (v NullableCreateWithdraw) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateWithdraw) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


