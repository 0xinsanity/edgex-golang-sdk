/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Chain type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Chain{}

// Chain 用于解析数据的包装类
type Chain struct {
	// 主链名
	Chain *string `json:"chain,omitempty"`
	// chainId
	ChainId *string `json:"chainId,omitempty"`
	// 主链图标url
	ChainIconUrl *string `json:"chainIconUrl,omitempty"`
	// 合约地址
	ContractAddress *string `json:"contractAddress,omitempty"`
	// 是否收充值手续费
	DepositGasFeeLess *bool `json:"depositGasFeeLess,omitempty"`
	// 是否免手续费
	FeeLess *bool `json:"feeLess,omitempty"`
	// 手续费率
	FeeRate *string `json:"feeRate,omitempty"`
	//  是否收手续费
	GasLess *bool `json:"gasLess,omitempty"`
	// 主链代币名
	GasToken *string `json:"gasToken,omitempty"`
	// 提币最小手续费 如果gas+value*fee_rate 小于 min_fee, 就按照min_fee收取
	MinFee *string `json:"minFee,omitempty"`
	// 链的线上节点服务
	RpcUrl *string `json:"rpcUrl,omitempty"`
	// 交易tx链接
	WebTxUrl *string `json:"webTxUrl,omitempty"`
	// 是否收提币手续费
	WithdrawGasFeeLess *bool `json:"withdrawGasFeeLess,omitempty"`
	// 跨链相关币种类集合信息
	TokenList []MultiChainToken `json:"tokenList,omitempty"`
	// 链上充值确认数
	TxConfirm *string `json:"txConfirm,omitempty"`
	// 区块时间
	BlockTime *string `json:"blockTime,omitempty"`
	// 允许 aa 钱包充值
	AllowAaDeposit *bool `json:"allowAaDeposit,omitempty"`
	// 允许 aa 钱包提现
	AllowAaWithdraw *bool `json:"allowAaWithdraw,omitempty"`
	// 允许充值
	AllowDeposit *bool `json:"allowDeposit,omitempty"`
	// 允许提现
	AllowWithdraw *bool `json:"allowWithdraw,omitempty"`
	AppRpcUrl *string `json:"appRpcUrl,omitempty"`
}

// NewChain instantiates a new Chain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChain() *Chain {
	this := Chain{}
	return &this
}

// NewChainWithDefaults instantiates a new Chain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChainWithDefaults() *Chain {
	this := Chain{}
	return &this
}

// GetChain returns the Chain field value if set, zero value otherwise.
func (o *Chain) GetChain() string {
	if o == nil || IsNil(o.Chain) {
		var ret string
		return ret
	}
	return *o.Chain
}

// GetChainOk returns a tuple with the Chain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetChainOk() (*string, bool) {
	if o == nil || IsNil(o.Chain) {
		return nil, false
	}
	return o.Chain, true
}

// HasChain returns a boolean if a field has been set.
func (o *Chain) HasChain() bool {
	if o != nil && !IsNil(o.Chain) {
		return true
	}

	return false
}

// SetChain gets a reference to the given string and assigns it to the Chain field.
func (o *Chain) SetChain(v string) {
	o.Chain = &v
}

// GetChainId returns the ChainId field value if set, zero value otherwise.
func (o *Chain) GetChainId() string {
	if o == nil || IsNil(o.ChainId) {
		var ret string
		return ret
	}
	return *o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetChainIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChainId) {
		return nil, false
	}
	return o.ChainId, true
}

// HasChainId returns a boolean if a field has been set.
func (o *Chain) HasChainId() bool {
	if o != nil && !IsNil(o.ChainId) {
		return true
	}

	return false
}

// SetChainId gets a reference to the given string and assigns it to the ChainId field.
func (o *Chain) SetChainId(v string) {
	o.ChainId = &v
}

// GetChainIconUrl returns the ChainIconUrl field value if set, zero value otherwise.
func (o *Chain) GetChainIconUrl() string {
	if o == nil || IsNil(o.ChainIconUrl) {
		var ret string
		return ret
	}
	return *o.ChainIconUrl
}

// GetChainIconUrlOk returns a tuple with the ChainIconUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetChainIconUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ChainIconUrl) {
		return nil, false
	}
	return o.ChainIconUrl, true
}

// HasChainIconUrl returns a boolean if a field has been set.
func (o *Chain) HasChainIconUrl() bool {
	if o != nil && !IsNil(o.ChainIconUrl) {
		return true
	}

	return false
}

// SetChainIconUrl gets a reference to the given string and assigns it to the ChainIconUrl field.
func (o *Chain) SetChainIconUrl(v string) {
	o.ChainIconUrl = &v
}

// GetContractAddress returns the ContractAddress field value if set, zero value otherwise.
func (o *Chain) GetContractAddress() string {
	if o == nil || IsNil(o.ContractAddress) {
		var ret string
		return ret
	}
	return *o.ContractAddress
}

// GetContractAddressOk returns a tuple with the ContractAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetContractAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ContractAddress) {
		return nil, false
	}
	return o.ContractAddress, true
}

// HasContractAddress returns a boolean if a field has been set.
func (o *Chain) HasContractAddress() bool {
	if o != nil && !IsNil(o.ContractAddress) {
		return true
	}

	return false
}

// SetContractAddress gets a reference to the given string and assigns it to the ContractAddress field.
func (o *Chain) SetContractAddress(v string) {
	o.ContractAddress = &v
}

// GetDepositGasFeeLess returns the DepositGasFeeLess field value if set, zero value otherwise.
func (o *Chain) GetDepositGasFeeLess() bool {
	if o == nil || IsNil(o.DepositGasFeeLess) {
		var ret bool
		return ret
	}
	return *o.DepositGasFeeLess
}

// GetDepositGasFeeLessOk returns a tuple with the DepositGasFeeLess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetDepositGasFeeLessOk() (*bool, bool) {
	if o == nil || IsNil(o.DepositGasFeeLess) {
		return nil, false
	}
	return o.DepositGasFeeLess, true
}

// HasDepositGasFeeLess returns a boolean if a field has been set.
func (o *Chain) HasDepositGasFeeLess() bool {
	if o != nil && !IsNil(o.DepositGasFeeLess) {
		return true
	}

	return false
}

// SetDepositGasFeeLess gets a reference to the given bool and assigns it to the DepositGasFeeLess field.
func (o *Chain) SetDepositGasFeeLess(v bool) {
	o.DepositGasFeeLess = &v
}

// GetFeeLess returns the FeeLess field value if set, zero value otherwise.
func (o *Chain) GetFeeLess() bool {
	if o == nil || IsNil(o.FeeLess) {
		var ret bool
		return ret
	}
	return *o.FeeLess
}

// GetFeeLessOk returns a tuple with the FeeLess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetFeeLessOk() (*bool, bool) {
	if o == nil || IsNil(o.FeeLess) {
		return nil, false
	}
	return o.FeeLess, true
}

// HasFeeLess returns a boolean if a field has been set.
func (o *Chain) HasFeeLess() bool {
	if o != nil && !IsNil(o.FeeLess) {
		return true
	}

	return false
}

// SetFeeLess gets a reference to the given bool and assigns it to the FeeLess field.
func (o *Chain) SetFeeLess(v bool) {
	o.FeeLess = &v
}

// GetFeeRate returns the FeeRate field value if set, zero value otherwise.
func (o *Chain) GetFeeRate() string {
	if o == nil || IsNil(o.FeeRate) {
		var ret string
		return ret
	}
	return *o.FeeRate
}

// GetFeeRateOk returns a tuple with the FeeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetFeeRateOk() (*string, bool) {
	if o == nil || IsNil(o.FeeRate) {
		return nil, false
	}
	return o.FeeRate, true
}

// HasFeeRate returns a boolean if a field has been set.
func (o *Chain) HasFeeRate() bool {
	if o != nil && !IsNil(o.FeeRate) {
		return true
	}

	return false
}

// SetFeeRate gets a reference to the given string and assigns it to the FeeRate field.
func (o *Chain) SetFeeRate(v string) {
	o.FeeRate = &v
}

// GetGasLess returns the GasLess field value if set, zero value otherwise.
func (o *Chain) GetGasLess() bool {
	if o == nil || IsNil(o.GasLess) {
		var ret bool
		return ret
	}
	return *o.GasLess
}

// GetGasLessOk returns a tuple with the GasLess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetGasLessOk() (*bool, bool) {
	if o == nil || IsNil(o.GasLess) {
		return nil, false
	}
	return o.GasLess, true
}

// HasGasLess returns a boolean if a field has been set.
func (o *Chain) HasGasLess() bool {
	if o != nil && !IsNil(o.GasLess) {
		return true
	}

	return false
}

// SetGasLess gets a reference to the given bool and assigns it to the GasLess field.
func (o *Chain) SetGasLess(v bool) {
	o.GasLess = &v
}

// GetGasToken returns the GasToken field value if set, zero value otherwise.
func (o *Chain) GetGasToken() string {
	if o == nil || IsNil(o.GasToken) {
		var ret string
		return ret
	}
	return *o.GasToken
}

// GetGasTokenOk returns a tuple with the GasToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetGasTokenOk() (*string, bool) {
	if o == nil || IsNil(o.GasToken) {
		return nil, false
	}
	return o.GasToken, true
}

// HasGasToken returns a boolean if a field has been set.
func (o *Chain) HasGasToken() bool {
	if o != nil && !IsNil(o.GasToken) {
		return true
	}

	return false
}

// SetGasToken gets a reference to the given string and assigns it to the GasToken field.
func (o *Chain) SetGasToken(v string) {
	o.GasToken = &v
}

// GetMinFee returns the MinFee field value if set, zero value otherwise.
func (o *Chain) GetMinFee() string {
	if o == nil || IsNil(o.MinFee) {
		var ret string
		return ret
	}
	return *o.MinFee
}

// GetMinFeeOk returns a tuple with the MinFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetMinFeeOk() (*string, bool) {
	if o == nil || IsNil(o.MinFee) {
		return nil, false
	}
	return o.MinFee, true
}

// HasMinFee returns a boolean if a field has been set.
func (o *Chain) HasMinFee() bool {
	if o != nil && !IsNil(o.MinFee) {
		return true
	}

	return false
}

// SetMinFee gets a reference to the given string and assigns it to the MinFee field.
func (o *Chain) SetMinFee(v string) {
	o.MinFee = &v
}

// GetRpcUrl returns the RpcUrl field value if set, zero value otherwise.
func (o *Chain) GetRpcUrl() string {
	if o == nil || IsNil(o.RpcUrl) {
		var ret string
		return ret
	}
	return *o.RpcUrl
}

// GetRpcUrlOk returns a tuple with the RpcUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetRpcUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RpcUrl) {
		return nil, false
	}
	return o.RpcUrl, true
}

// HasRpcUrl returns a boolean if a field has been set.
func (o *Chain) HasRpcUrl() bool {
	if o != nil && !IsNil(o.RpcUrl) {
		return true
	}

	return false
}

// SetRpcUrl gets a reference to the given string and assigns it to the RpcUrl field.
func (o *Chain) SetRpcUrl(v string) {
	o.RpcUrl = &v
}

// GetWebTxUrl returns the WebTxUrl field value if set, zero value otherwise.
func (o *Chain) GetWebTxUrl() string {
	if o == nil || IsNil(o.WebTxUrl) {
		var ret string
		return ret
	}
	return *o.WebTxUrl
}

// GetWebTxUrlOk returns a tuple with the WebTxUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetWebTxUrlOk() (*string, bool) {
	if o == nil || IsNil(o.WebTxUrl) {
		return nil, false
	}
	return o.WebTxUrl, true
}

// HasWebTxUrl returns a boolean if a field has been set.
func (o *Chain) HasWebTxUrl() bool {
	if o != nil && !IsNil(o.WebTxUrl) {
		return true
	}

	return false
}

// SetWebTxUrl gets a reference to the given string and assigns it to the WebTxUrl field.
func (o *Chain) SetWebTxUrl(v string) {
	o.WebTxUrl = &v
}

// GetWithdrawGasFeeLess returns the WithdrawGasFeeLess field value if set, zero value otherwise.
func (o *Chain) GetWithdrawGasFeeLess() bool {
	if o == nil || IsNil(o.WithdrawGasFeeLess) {
		var ret bool
		return ret
	}
	return *o.WithdrawGasFeeLess
}

// GetWithdrawGasFeeLessOk returns a tuple with the WithdrawGasFeeLess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetWithdrawGasFeeLessOk() (*bool, bool) {
	if o == nil || IsNil(o.WithdrawGasFeeLess) {
		return nil, false
	}
	return o.WithdrawGasFeeLess, true
}

// HasWithdrawGasFeeLess returns a boolean if a field has been set.
func (o *Chain) HasWithdrawGasFeeLess() bool {
	if o != nil && !IsNil(o.WithdrawGasFeeLess) {
		return true
	}

	return false
}

// SetWithdrawGasFeeLess gets a reference to the given bool and assigns it to the WithdrawGasFeeLess field.
func (o *Chain) SetWithdrawGasFeeLess(v bool) {
	o.WithdrawGasFeeLess = &v
}

// GetTokenList returns the TokenList field value if set, zero value otherwise.
func (o *Chain) GetTokenList() []MultiChainToken {
	if o == nil || IsNil(o.TokenList) {
		var ret []MultiChainToken
		return ret
	}
	return o.TokenList
}

// GetTokenListOk returns a tuple with the TokenList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetTokenListOk() ([]MultiChainToken, bool) {
	if o == nil || IsNil(o.TokenList) {
		return nil, false
	}
	return o.TokenList, true
}

// HasTokenList returns a boolean if a field has been set.
func (o *Chain) HasTokenList() bool {
	if o != nil && !IsNil(o.TokenList) {
		return true
	}

	return false
}

// SetTokenList gets a reference to the given []MultiChainToken and assigns it to the TokenList field.
func (o *Chain) SetTokenList(v []MultiChainToken) {
	o.TokenList = v
}

// GetTxConfirm returns the TxConfirm field value if set, zero value otherwise.
func (o *Chain) GetTxConfirm() string {
	if o == nil || IsNil(o.TxConfirm) {
		var ret string
		return ret
	}
	return *o.TxConfirm
}

// GetTxConfirmOk returns a tuple with the TxConfirm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetTxConfirmOk() (*string, bool) {
	if o == nil || IsNil(o.TxConfirm) {
		return nil, false
	}
	return o.TxConfirm, true
}

// HasTxConfirm returns a boolean if a field has been set.
func (o *Chain) HasTxConfirm() bool {
	if o != nil && !IsNil(o.TxConfirm) {
		return true
	}

	return false
}

// SetTxConfirm gets a reference to the given string and assigns it to the TxConfirm field.
func (o *Chain) SetTxConfirm(v string) {
	o.TxConfirm = &v
}

// GetBlockTime returns the BlockTime field value if set, zero value otherwise.
func (o *Chain) GetBlockTime() string {
	if o == nil || IsNil(o.BlockTime) {
		var ret string
		return ret
	}
	return *o.BlockTime
}

// GetBlockTimeOk returns a tuple with the BlockTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetBlockTimeOk() (*string, bool) {
	if o == nil || IsNil(o.BlockTime) {
		return nil, false
	}
	return o.BlockTime, true
}

// HasBlockTime returns a boolean if a field has been set.
func (o *Chain) HasBlockTime() bool {
	if o != nil && !IsNil(o.BlockTime) {
		return true
	}

	return false
}

// SetBlockTime gets a reference to the given string and assigns it to the BlockTime field.
func (o *Chain) SetBlockTime(v string) {
	o.BlockTime = &v
}

// GetAllowAaDeposit returns the AllowAaDeposit field value if set, zero value otherwise.
func (o *Chain) GetAllowAaDeposit() bool {
	if o == nil || IsNil(o.AllowAaDeposit) {
		var ret bool
		return ret
	}
	return *o.AllowAaDeposit
}

// GetAllowAaDepositOk returns a tuple with the AllowAaDeposit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetAllowAaDepositOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowAaDeposit) {
		return nil, false
	}
	return o.AllowAaDeposit, true
}

// HasAllowAaDeposit returns a boolean if a field has been set.
func (o *Chain) HasAllowAaDeposit() bool {
	if o != nil && !IsNil(o.AllowAaDeposit) {
		return true
	}

	return false
}

// SetAllowAaDeposit gets a reference to the given bool and assigns it to the AllowAaDeposit field.
func (o *Chain) SetAllowAaDeposit(v bool) {
	o.AllowAaDeposit = &v
}

// GetAllowAaWithdraw returns the AllowAaWithdraw field value if set, zero value otherwise.
func (o *Chain) GetAllowAaWithdraw() bool {
	if o == nil || IsNil(o.AllowAaWithdraw) {
		var ret bool
		return ret
	}
	return *o.AllowAaWithdraw
}

// GetAllowAaWithdrawOk returns a tuple with the AllowAaWithdraw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetAllowAaWithdrawOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowAaWithdraw) {
		return nil, false
	}
	return o.AllowAaWithdraw, true
}

// HasAllowAaWithdraw returns a boolean if a field has been set.
func (o *Chain) HasAllowAaWithdraw() bool {
	if o != nil && !IsNil(o.AllowAaWithdraw) {
		return true
	}

	return false
}

// SetAllowAaWithdraw gets a reference to the given bool and assigns it to the AllowAaWithdraw field.
func (o *Chain) SetAllowAaWithdraw(v bool) {
	o.AllowAaWithdraw = &v
}

// GetAllowDeposit returns the AllowDeposit field value if set, zero value otherwise.
func (o *Chain) GetAllowDeposit() bool {
	if o == nil || IsNil(o.AllowDeposit) {
		var ret bool
		return ret
	}
	return *o.AllowDeposit
}

// GetAllowDepositOk returns a tuple with the AllowDeposit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetAllowDepositOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowDeposit) {
		return nil, false
	}
	return o.AllowDeposit, true
}

// HasAllowDeposit returns a boolean if a field has been set.
func (o *Chain) HasAllowDeposit() bool {
	if o != nil && !IsNil(o.AllowDeposit) {
		return true
	}

	return false
}

// SetAllowDeposit gets a reference to the given bool and assigns it to the AllowDeposit field.
func (o *Chain) SetAllowDeposit(v bool) {
	o.AllowDeposit = &v
}

// GetAllowWithdraw returns the AllowWithdraw field value if set, zero value otherwise.
func (o *Chain) GetAllowWithdraw() bool {
	if o == nil || IsNil(o.AllowWithdraw) {
		var ret bool
		return ret
	}
	return *o.AllowWithdraw
}

// GetAllowWithdrawOk returns a tuple with the AllowWithdraw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetAllowWithdrawOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowWithdraw) {
		return nil, false
	}
	return o.AllowWithdraw, true
}

// HasAllowWithdraw returns a boolean if a field has been set.
func (o *Chain) HasAllowWithdraw() bool {
	if o != nil && !IsNil(o.AllowWithdraw) {
		return true
	}

	return false
}

// SetAllowWithdraw gets a reference to the given bool and assigns it to the AllowWithdraw field.
func (o *Chain) SetAllowWithdraw(v bool) {
	o.AllowWithdraw = &v
}

// GetAppRpcUrl returns the AppRpcUrl field value if set, zero value otherwise.
func (o *Chain) GetAppRpcUrl() string {
	if o == nil || IsNil(o.AppRpcUrl) {
		var ret string
		return ret
	}
	return *o.AppRpcUrl
}

// GetAppRpcUrlOk returns a tuple with the AppRpcUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Chain) GetAppRpcUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AppRpcUrl) {
		return nil, false
	}
	return o.AppRpcUrl, true
}

// HasAppRpcUrl returns a boolean if a field has been set.
func (o *Chain) HasAppRpcUrl() bool {
	if o != nil && !IsNil(o.AppRpcUrl) {
		return true
	}

	return false
}

// SetAppRpcUrl gets a reference to the given string and assigns it to the AppRpcUrl field.
func (o *Chain) SetAppRpcUrl(v string) {
	o.AppRpcUrl = &v
}

func (o Chain) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Chain) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Chain) {
		toSerialize["chain"] = o.Chain
	}
	if !IsNil(o.ChainId) {
		toSerialize["chainId"] = o.ChainId
	}
	if !IsNil(o.ChainIconUrl) {
		toSerialize["chainIconUrl"] = o.ChainIconUrl
	}
	if !IsNil(o.ContractAddress) {
		toSerialize["contractAddress"] = o.ContractAddress
	}
	if !IsNil(o.DepositGasFeeLess) {
		toSerialize["depositGasFeeLess"] = o.DepositGasFeeLess
	}
	if !IsNil(o.FeeLess) {
		toSerialize["feeLess"] = o.FeeLess
	}
	if !IsNil(o.FeeRate) {
		toSerialize["feeRate"] = o.FeeRate
	}
	if !IsNil(o.GasLess) {
		toSerialize["gasLess"] = o.GasLess
	}
	if !IsNil(o.GasToken) {
		toSerialize["gasToken"] = o.GasToken
	}
	if !IsNil(o.MinFee) {
		toSerialize["minFee"] = o.MinFee
	}
	if !IsNil(o.RpcUrl) {
		toSerialize["rpcUrl"] = o.RpcUrl
	}
	if !IsNil(o.WebTxUrl) {
		toSerialize["webTxUrl"] = o.WebTxUrl
	}
	if !IsNil(o.WithdrawGasFeeLess) {
		toSerialize["withdrawGasFeeLess"] = o.WithdrawGasFeeLess
	}
	if !IsNil(o.TokenList) {
		toSerialize["tokenList"] = o.TokenList
	}
	if !IsNil(o.TxConfirm) {
		toSerialize["txConfirm"] = o.TxConfirm
	}
	if !IsNil(o.BlockTime) {
		toSerialize["blockTime"] = o.BlockTime
	}
	if !IsNil(o.AllowAaDeposit) {
		toSerialize["allowAaDeposit"] = o.AllowAaDeposit
	}
	if !IsNil(o.AllowAaWithdraw) {
		toSerialize["allowAaWithdraw"] = o.AllowAaWithdraw
	}
	if !IsNil(o.AllowDeposit) {
		toSerialize["allowDeposit"] = o.AllowDeposit
	}
	if !IsNil(o.AllowWithdraw) {
		toSerialize["allowWithdraw"] = o.AllowWithdraw
	}
	if !IsNil(o.AppRpcUrl) {
		toSerialize["appRpcUrl"] = o.AppRpcUrl
	}
	return toSerialize, nil
}

type NullableChain struct {
	value *Chain
	isSet bool
}

func (v NullableChain) Get() *Chain {
	return v.value
}

func (v *NullableChain) Set(val *Chain) {
	v.value = val
	v.isSet = true
}

func (v NullableChain) IsSet() bool {
	return v.isSet
}

func (v *NullableChain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChain(val *Chain) *NullableChain {
	return &NullableChain{value: val, isSet: true}
}

func (v NullableChain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


