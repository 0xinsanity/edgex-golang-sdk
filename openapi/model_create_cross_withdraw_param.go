/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateCrossWithdrawParam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCrossWithdrawParam{}

// CreateCrossWithdrawParam 创建跨链提现单-请求
type CreateCrossWithdrawParam struct {
	// 账户id
	AccountId *string `json:"accountId,omitempty"`
	// 币id
	CoinId *string `json:"coinId,omitempty"`
	// 提现数量
	Amount *string `json:"amount,omitempty"`
	// 提现到的地址。如果为空，则提到本账号对应的地址。
	EthAddress *string `json:"ethAddress,omitempty"`
	// 提现资产在L1上ERC20合约地址。
	Erc20Address *string `json:"erc20Address,omitempty"`
	// l2接收用户转账的lp账户id
	LpAccountId *string `json:"lpAccountId,omitempty"`
	// 客户自定义id，用于签名&幂等校验。必须填写。
	ClientCrossWithdrawId *string `json:"clientCrossWithdrawId,omitempty"`
	// 过期时间
	ExpireTime *string `json:"expireTime,omitempty"`
	// 提交l2的签名
	L2Signature *string `json:"l2Signature,omitempty"`
	// 前端获取到的gas+手续费费
	Fee *string `json:"fee,omitempty"`
	// 提现到哪条链
	ChainId *string `json:"chainId,omitempty"`
	// 哪个mpc地址发起的提现
	MpcAddress *string `json:"mpcAddress,omitempty"`
	// mpc地址对提现字段的签名
	MpcSignature *string `json:"mpcSignature,omitempty"`
	// mpc签名时间戳,unix timestamp 单位为秒
	MpcSignTime *string `json:"mpcSignTime,omitempty"`
}

// NewCreateCrossWithdrawParam instantiates a new CreateCrossWithdrawParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCrossWithdrawParam() *CreateCrossWithdrawParam {
	this := CreateCrossWithdrawParam{}
	return &this
}

// NewCreateCrossWithdrawParamWithDefaults instantiates a new CreateCrossWithdrawParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCrossWithdrawParamWithDefaults() *CreateCrossWithdrawParam {
	this := CreateCrossWithdrawParam{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *CreateCrossWithdrawParam) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCrossWithdrawParam) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *CreateCrossWithdrawParam) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *CreateCrossWithdrawParam) SetAccountId(v string) {
	o.AccountId = &v
}

// GetCoinId returns the CoinId field value if set, zero value otherwise.
func (o *CreateCrossWithdrawParam) GetCoinId() string {
	if o == nil || IsNil(o.CoinId) {
		var ret string
		return ret
	}
	return *o.CoinId
}

// GetCoinIdOk returns a tuple with the CoinId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCrossWithdrawParam) GetCoinIdOk() (*string, bool) {
	if o == nil || IsNil(o.CoinId) {
		return nil, false
	}
	return o.CoinId, true
}

// HasCoinId returns a boolean if a field has been set.
func (o *CreateCrossWithdrawParam) HasCoinId() bool {
	if o != nil && !IsNil(o.CoinId) {
		return true
	}

	return false
}

// SetCoinId gets a reference to the given string and assigns it to the CoinId field.
func (o *CreateCrossWithdrawParam) SetCoinId(v string) {
	o.CoinId = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *CreateCrossWithdrawParam) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCrossWithdrawParam) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *CreateCrossWithdrawParam) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *CreateCrossWithdrawParam) SetAmount(v string) {
	o.Amount = &v
}

// GetEthAddress returns the EthAddress field value if set, zero value otherwise.
func (o *CreateCrossWithdrawParam) GetEthAddress() string {
	if o == nil || IsNil(o.EthAddress) {
		var ret string
		return ret
	}
	return *o.EthAddress
}

// GetEthAddressOk returns a tuple with the EthAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCrossWithdrawParam) GetEthAddressOk() (*string, bool) {
	if o == nil || IsNil(o.EthAddress) {
		return nil, false
	}
	return o.EthAddress, true
}

// HasEthAddress returns a boolean if a field has been set.
func (o *CreateCrossWithdrawParam) HasEthAddress() bool {
	if o != nil && !IsNil(o.EthAddress) {
		return true
	}

	return false
}

// SetEthAddress gets a reference to the given string and assigns it to the EthAddress field.
func (o *CreateCrossWithdrawParam) SetEthAddress(v string) {
	o.EthAddress = &v
}

// GetErc20Address returns the Erc20Address field value if set, zero value otherwise.
func (o *CreateCrossWithdrawParam) GetErc20Address() string {
	if o == nil || IsNil(o.Erc20Address) {
		var ret string
		return ret
	}
	return *o.Erc20Address
}

// GetErc20AddressOk returns a tuple with the Erc20Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCrossWithdrawParam) GetErc20AddressOk() (*string, bool) {
	if o == nil || IsNil(o.Erc20Address) {
		return nil, false
	}
	return o.Erc20Address, true
}

// HasErc20Address returns a boolean if a field has been set.
func (o *CreateCrossWithdrawParam) HasErc20Address() bool {
	if o != nil && !IsNil(o.Erc20Address) {
		return true
	}

	return false
}

// SetErc20Address gets a reference to the given string and assigns it to the Erc20Address field.
func (o *CreateCrossWithdrawParam) SetErc20Address(v string) {
	o.Erc20Address = &v
}

// GetLpAccountId returns the LpAccountId field value if set, zero value otherwise.
func (o *CreateCrossWithdrawParam) GetLpAccountId() string {
	if o == nil || IsNil(o.LpAccountId) {
		var ret string
		return ret
	}
	return *o.LpAccountId
}

// GetLpAccountIdOk returns a tuple with the LpAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCrossWithdrawParam) GetLpAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.LpAccountId) {
		return nil, false
	}
	return o.LpAccountId, true
}

// HasLpAccountId returns a boolean if a field has been set.
func (o *CreateCrossWithdrawParam) HasLpAccountId() bool {
	if o != nil && !IsNil(o.LpAccountId) {
		return true
	}

	return false
}

// SetLpAccountId gets a reference to the given string and assigns it to the LpAccountId field.
func (o *CreateCrossWithdrawParam) SetLpAccountId(v string) {
	o.LpAccountId = &v
}

// GetClientCrossWithdrawId returns the ClientCrossWithdrawId field value if set, zero value otherwise.
func (o *CreateCrossWithdrawParam) GetClientCrossWithdrawId() string {
	if o == nil || IsNil(o.ClientCrossWithdrawId) {
		var ret string
		return ret
	}
	return *o.ClientCrossWithdrawId
}

// GetClientCrossWithdrawIdOk returns a tuple with the ClientCrossWithdrawId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCrossWithdrawParam) GetClientCrossWithdrawIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientCrossWithdrawId) {
		return nil, false
	}
	return o.ClientCrossWithdrawId, true
}

// HasClientCrossWithdrawId returns a boolean if a field has been set.
func (o *CreateCrossWithdrawParam) HasClientCrossWithdrawId() bool {
	if o != nil && !IsNil(o.ClientCrossWithdrawId) {
		return true
	}

	return false
}

// SetClientCrossWithdrawId gets a reference to the given string and assigns it to the ClientCrossWithdrawId field.
func (o *CreateCrossWithdrawParam) SetClientCrossWithdrawId(v string) {
	o.ClientCrossWithdrawId = &v
}

// GetExpireTime returns the ExpireTime field value if set, zero value otherwise.
func (o *CreateCrossWithdrawParam) GetExpireTime() string {
	if o == nil || IsNil(o.ExpireTime) {
		var ret string
		return ret
	}
	return *o.ExpireTime
}

// GetExpireTimeOk returns a tuple with the ExpireTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCrossWithdrawParam) GetExpireTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpireTime) {
		return nil, false
	}
	return o.ExpireTime, true
}

// HasExpireTime returns a boolean if a field has been set.
func (o *CreateCrossWithdrawParam) HasExpireTime() bool {
	if o != nil && !IsNil(o.ExpireTime) {
		return true
	}

	return false
}

// SetExpireTime gets a reference to the given string and assigns it to the ExpireTime field.
func (o *CreateCrossWithdrawParam) SetExpireTime(v string) {
	o.ExpireTime = &v
}

// GetL2Signature returns the L2Signature field value if set, zero value otherwise.
func (o *CreateCrossWithdrawParam) GetL2Signature() string {
	if o == nil || IsNil(o.L2Signature) {
		var ret string
		return ret
	}
	return *o.L2Signature
}

// GetL2SignatureOk returns a tuple with the L2Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCrossWithdrawParam) GetL2SignatureOk() (*string, bool) {
	if o == nil || IsNil(o.L2Signature) {
		return nil, false
	}
	return o.L2Signature, true
}

// HasL2Signature returns a boolean if a field has been set.
func (o *CreateCrossWithdrawParam) HasL2Signature() bool {
	if o != nil && !IsNil(o.L2Signature) {
		return true
	}

	return false
}

// SetL2Signature gets a reference to the given string and assigns it to the L2Signature field.
func (o *CreateCrossWithdrawParam) SetL2Signature(v string) {
	o.L2Signature = &v
}

// GetFee returns the Fee field value if set, zero value otherwise.
func (o *CreateCrossWithdrawParam) GetFee() string {
	if o == nil || IsNil(o.Fee) {
		var ret string
		return ret
	}
	return *o.Fee
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCrossWithdrawParam) GetFeeOk() (*string, bool) {
	if o == nil || IsNil(o.Fee) {
		return nil, false
	}
	return o.Fee, true
}

// HasFee returns a boolean if a field has been set.
func (o *CreateCrossWithdrawParam) HasFee() bool {
	if o != nil && !IsNil(o.Fee) {
		return true
	}

	return false
}

// SetFee gets a reference to the given string and assigns it to the Fee field.
func (o *CreateCrossWithdrawParam) SetFee(v string) {
	o.Fee = &v
}

// GetChainId returns the ChainId field value if set, zero value otherwise.
func (o *CreateCrossWithdrawParam) GetChainId() string {
	if o == nil || IsNil(o.ChainId) {
		var ret string
		return ret
	}
	return *o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCrossWithdrawParam) GetChainIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChainId) {
		return nil, false
	}
	return o.ChainId, true
}

// HasChainId returns a boolean if a field has been set.
func (o *CreateCrossWithdrawParam) HasChainId() bool {
	if o != nil && !IsNil(o.ChainId) {
		return true
	}

	return false
}

// SetChainId gets a reference to the given string and assigns it to the ChainId field.
func (o *CreateCrossWithdrawParam) SetChainId(v string) {
	o.ChainId = &v
}

// GetMpcAddress returns the MpcAddress field value if set, zero value otherwise.
func (o *CreateCrossWithdrawParam) GetMpcAddress() string {
	if o == nil || IsNil(o.MpcAddress) {
		var ret string
		return ret
	}
	return *o.MpcAddress
}

// GetMpcAddressOk returns a tuple with the MpcAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCrossWithdrawParam) GetMpcAddressOk() (*string, bool) {
	if o == nil || IsNil(o.MpcAddress) {
		return nil, false
	}
	return o.MpcAddress, true
}

// HasMpcAddress returns a boolean if a field has been set.
func (o *CreateCrossWithdrawParam) HasMpcAddress() bool {
	if o != nil && !IsNil(o.MpcAddress) {
		return true
	}

	return false
}

// SetMpcAddress gets a reference to the given string and assigns it to the MpcAddress field.
func (o *CreateCrossWithdrawParam) SetMpcAddress(v string) {
	o.MpcAddress = &v
}

// GetMpcSignature returns the MpcSignature field value if set, zero value otherwise.
func (o *CreateCrossWithdrawParam) GetMpcSignature() string {
	if o == nil || IsNil(o.MpcSignature) {
		var ret string
		return ret
	}
	return *o.MpcSignature
}

// GetMpcSignatureOk returns a tuple with the MpcSignature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCrossWithdrawParam) GetMpcSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.MpcSignature) {
		return nil, false
	}
	return o.MpcSignature, true
}

// HasMpcSignature returns a boolean if a field has been set.
func (o *CreateCrossWithdrawParam) HasMpcSignature() bool {
	if o != nil && !IsNil(o.MpcSignature) {
		return true
	}

	return false
}

// SetMpcSignature gets a reference to the given string and assigns it to the MpcSignature field.
func (o *CreateCrossWithdrawParam) SetMpcSignature(v string) {
	o.MpcSignature = &v
}

// GetMpcSignTime returns the MpcSignTime field value if set, zero value otherwise.
func (o *CreateCrossWithdrawParam) GetMpcSignTime() string {
	if o == nil || IsNil(o.MpcSignTime) {
		var ret string
		return ret
	}
	return *o.MpcSignTime
}

// GetMpcSignTimeOk returns a tuple with the MpcSignTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCrossWithdrawParam) GetMpcSignTimeOk() (*string, bool) {
	if o == nil || IsNil(o.MpcSignTime) {
		return nil, false
	}
	return o.MpcSignTime, true
}

// HasMpcSignTime returns a boolean if a field has been set.
func (o *CreateCrossWithdrawParam) HasMpcSignTime() bool {
	if o != nil && !IsNil(o.MpcSignTime) {
		return true
	}

	return false
}

// SetMpcSignTime gets a reference to the given string and assigns it to the MpcSignTime field.
func (o *CreateCrossWithdrawParam) SetMpcSignTime(v string) {
	o.MpcSignTime = &v
}

func (o CreateCrossWithdrawParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCrossWithdrawParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.CoinId) {
		toSerialize["coinId"] = o.CoinId
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.EthAddress) {
		toSerialize["ethAddress"] = o.EthAddress
	}
	if !IsNil(o.Erc20Address) {
		toSerialize["erc20Address"] = o.Erc20Address
	}
	if !IsNil(o.LpAccountId) {
		toSerialize["lpAccountId"] = o.LpAccountId
	}
	if !IsNil(o.ClientCrossWithdrawId) {
		toSerialize["clientCrossWithdrawId"] = o.ClientCrossWithdrawId
	}
	if !IsNil(o.ExpireTime) {
		toSerialize["expireTime"] = o.ExpireTime
	}
	if !IsNil(o.L2Signature) {
		toSerialize["l2Signature"] = o.L2Signature
	}
	if !IsNil(o.Fee) {
		toSerialize["fee"] = o.Fee
	}
	if !IsNil(o.ChainId) {
		toSerialize["chainId"] = o.ChainId
	}
	if !IsNil(o.MpcAddress) {
		toSerialize["mpcAddress"] = o.MpcAddress
	}
	if !IsNil(o.MpcSignature) {
		toSerialize["mpcSignature"] = o.MpcSignature
	}
	if !IsNil(o.MpcSignTime) {
		toSerialize["mpcSignTime"] = o.MpcSignTime
	}
	return toSerialize, nil
}

type NullableCreateCrossWithdrawParam struct {
	value *CreateCrossWithdrawParam
	isSet bool
}

func (v NullableCreateCrossWithdrawParam) Get() *CreateCrossWithdrawParam {
	return v.value
}

func (v *NullableCreateCrossWithdrawParam) Set(val *CreateCrossWithdrawParam) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCrossWithdrawParam) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCrossWithdrawParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCrossWithdrawParam(val *CreateCrossWithdrawParam) *NullableCreateCrossWithdrawParam {
	return &NullableCreateCrossWithdrawParam{value: val, isSet: true}
}

func (v NullableCreateCrossWithdrawParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCrossWithdrawParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


