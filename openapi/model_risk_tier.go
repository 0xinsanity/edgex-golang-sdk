/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RiskTier type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RiskTier{}

// RiskTier 风险限额档位信息
type RiskTier struct {
	// 档位，从1开始
	Tier *int32 `json:"tier,omitempty"`
	// 档位仓位价值上限 (包含)
	PositionValueUpperBound *string `json:"positionValueUpperBound,omitempty"`
	// 档位最高可用杠杆
	MaxLeverage *string `json:"maxLeverage,omitempty"`
	// 档位维持保证金率 (仅用于展示，实际使用 stark_ex_risk / 2^32 做为精确维持保证金率)，decimal
	MaintenanceMarginRate *string `json:"maintenanceMarginRate,omitempty"`
	// 1 ≤ risk < 2^32
	StarkExRisk *string `json:"starkExRisk,omitempty"`
	// bigint. 0 ≤ upper_bound ≤ 2^128-1
	StarkExUpperBound *string `json:"starkExUpperBound,omitempty"`
}

// NewRiskTier instantiates a new RiskTier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskTier() *RiskTier {
	this := RiskTier{}
	return &this
}

// NewRiskTierWithDefaults instantiates a new RiskTier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskTierWithDefaults() *RiskTier {
	this := RiskTier{}
	return &this
}

// GetTier returns the Tier field value if set, zero value otherwise.
func (o *RiskTier) GetTier() int32 {
	if o == nil || IsNil(o.Tier) {
		var ret int32
		return ret
	}
	return *o.Tier
}

// GetTierOk returns a tuple with the Tier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskTier) GetTierOk() (*int32, bool) {
	if o == nil || IsNil(o.Tier) {
		return nil, false
	}
	return o.Tier, true
}

// HasTier returns a boolean if a field has been set.
func (o *RiskTier) HasTier() bool {
	if o != nil && !IsNil(o.Tier) {
		return true
	}

	return false
}

// SetTier gets a reference to the given int32 and assigns it to the Tier field.
func (o *RiskTier) SetTier(v int32) {
	o.Tier = &v
}

// GetPositionValueUpperBound returns the PositionValueUpperBound field value if set, zero value otherwise.
func (o *RiskTier) GetPositionValueUpperBound() string {
	if o == nil || IsNil(o.PositionValueUpperBound) {
		var ret string
		return ret
	}
	return *o.PositionValueUpperBound
}

// GetPositionValueUpperBoundOk returns a tuple with the PositionValueUpperBound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskTier) GetPositionValueUpperBoundOk() (*string, bool) {
	if o == nil || IsNil(o.PositionValueUpperBound) {
		return nil, false
	}
	return o.PositionValueUpperBound, true
}

// HasPositionValueUpperBound returns a boolean if a field has been set.
func (o *RiskTier) HasPositionValueUpperBound() bool {
	if o != nil && !IsNil(o.PositionValueUpperBound) {
		return true
	}

	return false
}

// SetPositionValueUpperBound gets a reference to the given string and assigns it to the PositionValueUpperBound field.
func (o *RiskTier) SetPositionValueUpperBound(v string) {
	o.PositionValueUpperBound = &v
}

// GetMaxLeverage returns the MaxLeverage field value if set, zero value otherwise.
func (o *RiskTier) GetMaxLeverage() string {
	if o == nil || IsNil(o.MaxLeverage) {
		var ret string
		return ret
	}
	return *o.MaxLeverage
}

// GetMaxLeverageOk returns a tuple with the MaxLeverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskTier) GetMaxLeverageOk() (*string, bool) {
	if o == nil || IsNil(o.MaxLeverage) {
		return nil, false
	}
	return o.MaxLeverage, true
}

// HasMaxLeverage returns a boolean if a field has been set.
func (o *RiskTier) HasMaxLeverage() bool {
	if o != nil && !IsNil(o.MaxLeverage) {
		return true
	}

	return false
}

// SetMaxLeverage gets a reference to the given string and assigns it to the MaxLeverage field.
func (o *RiskTier) SetMaxLeverage(v string) {
	o.MaxLeverage = &v
}

// GetMaintenanceMarginRate returns the MaintenanceMarginRate field value if set, zero value otherwise.
func (o *RiskTier) GetMaintenanceMarginRate() string {
	if o == nil || IsNil(o.MaintenanceMarginRate) {
		var ret string
		return ret
	}
	return *o.MaintenanceMarginRate
}

// GetMaintenanceMarginRateOk returns a tuple with the MaintenanceMarginRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskTier) GetMaintenanceMarginRateOk() (*string, bool) {
	if o == nil || IsNil(o.MaintenanceMarginRate) {
		return nil, false
	}
	return o.MaintenanceMarginRate, true
}

// HasMaintenanceMarginRate returns a boolean if a field has been set.
func (o *RiskTier) HasMaintenanceMarginRate() bool {
	if o != nil && !IsNil(o.MaintenanceMarginRate) {
		return true
	}

	return false
}

// SetMaintenanceMarginRate gets a reference to the given string and assigns it to the MaintenanceMarginRate field.
func (o *RiskTier) SetMaintenanceMarginRate(v string) {
	o.MaintenanceMarginRate = &v
}

// GetStarkExRisk returns the StarkExRisk field value if set, zero value otherwise.
func (o *RiskTier) GetStarkExRisk() string {
	if o == nil || IsNil(o.StarkExRisk) {
		var ret string
		return ret
	}
	return *o.StarkExRisk
}

// GetStarkExRiskOk returns a tuple with the StarkExRisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskTier) GetStarkExRiskOk() (*string, bool) {
	if o == nil || IsNil(o.StarkExRisk) {
		return nil, false
	}
	return o.StarkExRisk, true
}

// HasStarkExRisk returns a boolean if a field has been set.
func (o *RiskTier) HasStarkExRisk() bool {
	if o != nil && !IsNil(o.StarkExRisk) {
		return true
	}

	return false
}

// SetStarkExRisk gets a reference to the given string and assigns it to the StarkExRisk field.
func (o *RiskTier) SetStarkExRisk(v string) {
	o.StarkExRisk = &v
}

// GetStarkExUpperBound returns the StarkExUpperBound field value if set, zero value otherwise.
func (o *RiskTier) GetStarkExUpperBound() string {
	if o == nil || IsNil(o.StarkExUpperBound) {
		var ret string
		return ret
	}
	return *o.StarkExUpperBound
}

// GetStarkExUpperBoundOk returns a tuple with the StarkExUpperBound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskTier) GetStarkExUpperBoundOk() (*string, bool) {
	if o == nil || IsNil(o.StarkExUpperBound) {
		return nil, false
	}
	return o.StarkExUpperBound, true
}

// HasStarkExUpperBound returns a boolean if a field has been set.
func (o *RiskTier) HasStarkExUpperBound() bool {
	if o != nil && !IsNil(o.StarkExUpperBound) {
		return true
	}

	return false
}

// SetStarkExUpperBound gets a reference to the given string and assigns it to the StarkExUpperBound field.
func (o *RiskTier) SetStarkExUpperBound(v string) {
	o.StarkExUpperBound = &v
}

func (o RiskTier) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RiskTier) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tier) {
		toSerialize["tier"] = o.Tier
	}
	if !IsNil(o.PositionValueUpperBound) {
		toSerialize["positionValueUpperBound"] = o.PositionValueUpperBound
	}
	if !IsNil(o.MaxLeverage) {
		toSerialize["maxLeverage"] = o.MaxLeverage
	}
	if !IsNil(o.MaintenanceMarginRate) {
		toSerialize["maintenanceMarginRate"] = o.MaintenanceMarginRate
	}
	if !IsNil(o.StarkExRisk) {
		toSerialize["starkExRisk"] = o.StarkExRisk
	}
	if !IsNil(o.StarkExUpperBound) {
		toSerialize["starkExUpperBound"] = o.StarkExUpperBound
	}
	return toSerialize, nil
}

type NullableRiskTier struct {
	value *RiskTier
	isSet bool
}

func (v NullableRiskTier) Get() *RiskTier {
	return v.value
}

func (v *NullableRiskTier) Set(val *RiskTier) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskTier) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskTier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskTier(val *RiskTier) *NullableRiskTier {
	return &NullableRiskTier{value: val, isSet: true}
}

func (v NullableRiskTier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskTier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


