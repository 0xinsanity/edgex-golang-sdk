/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateOrderParam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrderParam{}

// CreateOrderParam 创建委托单-请求
type CreateOrderParam struct {
	// 账户id
	AccountId *string `json:"accountId,omitempty"`
	// 所属合约id
	ContractId *string `json:"contractId,omitempty"`
	// 买卖方向。此字段必填
	Side *string `json:"side,omitempty"`
	// 委托数量, 实际为decimal类型。此字段必填
	Size *string `json:"size,omitempty"`
	// 委托价格(最差可接受的价格), 实际为decimal类型。此字段必填，市价单填0即可。
	Price *string `json:"price,omitempty"`
	// 客户自定义id，用于幂等校验。此字段必填
	ClientOrderId *string `json:"clientOrderId,omitempty"`
	// 委托单类型。此字段必填
	Type *string `json:"type,omitempty"`
	// 委托单执行策略。type为 LIMIT/STOP_LIMIT/TAKE_PROFIT_LIMIT 时有意义。此字段必填，市价单必为IMMEDIATE_OR_CANCEL。
	TimeInForce *string `json:"timeInForce,omitempty"`
	// 是否是只减仓委托。此字段必填
	ReduceOnly *bool `json:"reduceOnly,omitempty"`
	// 触发价格。type为 STOP_LIMIT/STOP_MARKET/TAKE_PROFIT_LIMIT/TAKE_PROFIT_MARKET 时有意义。如果为0代表字段为空。实际为decimal类型。当为条件单时必填。
	TriggerPrice *string `json:"triggerPrice,omitempty"`
	// 价格类型。最新市价[默认],标记价格。type为条件单时有意义。当为条件单时必填。
	TriggerPriceType *string `json:"triggerPriceType,omitempty"`
	// 过期时间。
	ExpireTime *string `json:"expireTime,omitempty"`
	// 来源key，uuid
	SourceKey *string `json:"sourceKey,omitempty"`
	// 是否为仓位止盈止损单。此字段必填，默认为false
	IsPositionTpsl *bool `json:"isPositionTpsl,omitempty"`
	// 开仓止盈单，止损单的开仓单orderId
	OpenTpslParentOrderId *string `json:"openTpslParentOrderId,omitempty"`
	// 是否设置开仓止盈。此字段必填
	IsSetOpenTp *bool `json:"isSetOpenTp,omitempty"`
	OpenTp *OpenTpSlParam `json:"openTp,omitempty"`
	// 是否设置开仓止损。此字段必填
	IsSetOpenSl *bool `json:"isSetOpenSl,omitempty"`
	OpenSl *OpenTpSlParam `json:"openSl,omitempty"`
	// l2签名nonce。取sha256(client_order_id) 前32个bit
	L2Nonce *string `json:"l2Nonce,omitempty"`
	// l2签名委托价值(实际成交价必须等于或优于 l2_value / l2_price), 与 price x size 的值可能不一样。实际为decimal类型
	L2Value *string `json:"l2Value,omitempty"`
	// l2签名委托数量, 与size字段可能不一样。实际为decimal类型
	L2Size *string `json:"l2Size,omitempty"`
	// l2签名最高可以接受的下单费用
	L2LimitFee *string `json:"l2LimitFee,omitempty"`
	// l2签名过期时间，单位毫秒。参与签名生成/校验时要取小时数，即 l2_expire_time / 3600000。注意此字段必须要大于等于 expire_time + 8 * 24 * 60 * 60 * 1000(8天)
	L2ExpireTime *string `json:"l2ExpireTime,omitempty"`
	// l2签名
	L2Signature *string `json:"l2Signature,omitempty"`
	// 附加类型，供上层业务使用
	ExtraType *string `json:"extraType,omitempty"`
	// 额外数据，json格式，默认为空串
	ExtraDataJson *string `json:"extraDataJson,omitempty"`
}

// NewCreateOrderParam instantiates a new CreateOrderParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrderParam() *CreateOrderParam {
	this := CreateOrderParam{}
	return &this
}

// NewCreateOrderParamWithDefaults instantiates a new CreateOrderParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrderParamWithDefaults() *CreateOrderParam {
	this := CreateOrderParam{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *CreateOrderParam) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *CreateOrderParam) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *CreateOrderParam) SetAccountId(v string) {
	o.AccountId = &v
}

// GetContractId returns the ContractId field value if set, zero value otherwise.
func (o *CreateOrderParam) GetContractId() string {
	if o == nil || IsNil(o.ContractId) {
		var ret string
		return ret
	}
	return *o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetContractIdOk() (*string, bool) {
	if o == nil || IsNil(o.ContractId) {
		return nil, false
	}
	return o.ContractId, true
}

// HasContractId returns a boolean if a field has been set.
func (o *CreateOrderParam) HasContractId() bool {
	if o != nil && !IsNil(o.ContractId) {
		return true
	}

	return false
}

// SetContractId gets a reference to the given string and assigns it to the ContractId field.
func (o *CreateOrderParam) SetContractId(v string) {
	o.ContractId = &v
}

// GetSide returns the Side field value if set, zero value otherwise.
func (o *CreateOrderParam) GetSide() string {
	if o == nil || IsNil(o.Side) {
		var ret string
		return ret
	}
	return *o.Side
}

// GetSideOk returns a tuple with the Side field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetSideOk() (*string, bool) {
	if o == nil || IsNil(o.Side) {
		return nil, false
	}
	return o.Side, true
}

// HasSide returns a boolean if a field has been set.
func (o *CreateOrderParam) HasSide() bool {
	if o != nil && !IsNil(o.Side) {
		return true
	}

	return false
}

// SetSide gets a reference to the given string and assigns it to the Side field.
func (o *CreateOrderParam) SetSide(v string) {
	o.Side = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *CreateOrderParam) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *CreateOrderParam) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *CreateOrderParam) SetSize(v string) {
	o.Size = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *CreateOrderParam) GetPrice() string {
	if o == nil || IsNil(o.Price) {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetPriceOk() (*string, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *CreateOrderParam) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *CreateOrderParam) SetPrice(v string) {
	o.Price = &v
}

// GetClientOrderId returns the ClientOrderId field value if set, zero value otherwise.
func (o *CreateOrderParam) GetClientOrderId() string {
	if o == nil || IsNil(o.ClientOrderId) {
		var ret string
		return ret
	}
	return *o.ClientOrderId
}

// GetClientOrderIdOk returns a tuple with the ClientOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetClientOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientOrderId) {
		return nil, false
	}
	return o.ClientOrderId, true
}

// HasClientOrderId returns a boolean if a field has been set.
func (o *CreateOrderParam) HasClientOrderId() bool {
	if o != nil && !IsNil(o.ClientOrderId) {
		return true
	}

	return false
}

// SetClientOrderId gets a reference to the given string and assigns it to the ClientOrderId field.
func (o *CreateOrderParam) SetClientOrderId(v string) {
	o.ClientOrderId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CreateOrderParam) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CreateOrderParam) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CreateOrderParam) SetType(v string) {
	o.Type = &v
}

// GetTimeInForce returns the TimeInForce field value if set, zero value otherwise.
func (o *CreateOrderParam) GetTimeInForce() string {
	if o == nil || IsNil(o.TimeInForce) {
		var ret string
		return ret
	}
	return *o.TimeInForce
}

// GetTimeInForceOk returns a tuple with the TimeInForce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetTimeInForceOk() (*string, bool) {
	if o == nil || IsNil(o.TimeInForce) {
		return nil, false
	}
	return o.TimeInForce, true
}

// HasTimeInForce returns a boolean if a field has been set.
func (o *CreateOrderParam) HasTimeInForce() bool {
	if o != nil && !IsNil(o.TimeInForce) {
		return true
	}

	return false
}

// SetTimeInForce gets a reference to the given string and assigns it to the TimeInForce field.
func (o *CreateOrderParam) SetTimeInForce(v string) {
	o.TimeInForce = &v
}

// GetReduceOnly returns the ReduceOnly field value if set, zero value otherwise.
func (o *CreateOrderParam) GetReduceOnly() bool {
	if o == nil || IsNil(o.ReduceOnly) {
		var ret bool
		return ret
	}
	return *o.ReduceOnly
}

// GetReduceOnlyOk returns a tuple with the ReduceOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetReduceOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.ReduceOnly) {
		return nil, false
	}
	return o.ReduceOnly, true
}

// HasReduceOnly returns a boolean if a field has been set.
func (o *CreateOrderParam) HasReduceOnly() bool {
	if o != nil && !IsNil(o.ReduceOnly) {
		return true
	}

	return false
}

// SetReduceOnly gets a reference to the given bool and assigns it to the ReduceOnly field.
func (o *CreateOrderParam) SetReduceOnly(v bool) {
	o.ReduceOnly = &v
}

// GetTriggerPrice returns the TriggerPrice field value if set, zero value otherwise.
func (o *CreateOrderParam) GetTriggerPrice() string {
	if o == nil || IsNil(o.TriggerPrice) {
		var ret string
		return ret
	}
	return *o.TriggerPrice
}

// GetTriggerPriceOk returns a tuple with the TriggerPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetTriggerPriceOk() (*string, bool) {
	if o == nil || IsNil(o.TriggerPrice) {
		return nil, false
	}
	return o.TriggerPrice, true
}

// HasTriggerPrice returns a boolean if a field has been set.
func (o *CreateOrderParam) HasTriggerPrice() bool {
	if o != nil && !IsNil(o.TriggerPrice) {
		return true
	}

	return false
}

// SetTriggerPrice gets a reference to the given string and assigns it to the TriggerPrice field.
func (o *CreateOrderParam) SetTriggerPrice(v string) {
	o.TriggerPrice = &v
}

// GetTriggerPriceType returns the TriggerPriceType field value if set, zero value otherwise.
func (o *CreateOrderParam) GetTriggerPriceType() string {
	if o == nil || IsNil(o.TriggerPriceType) {
		var ret string
		return ret
	}
	return *o.TriggerPriceType
}

// GetTriggerPriceTypeOk returns a tuple with the TriggerPriceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetTriggerPriceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TriggerPriceType) {
		return nil, false
	}
	return o.TriggerPriceType, true
}

// HasTriggerPriceType returns a boolean if a field has been set.
func (o *CreateOrderParam) HasTriggerPriceType() bool {
	if o != nil && !IsNil(o.TriggerPriceType) {
		return true
	}

	return false
}

// SetTriggerPriceType gets a reference to the given string and assigns it to the TriggerPriceType field.
func (o *CreateOrderParam) SetTriggerPriceType(v string) {
	o.TriggerPriceType = &v
}

// GetExpireTime returns the ExpireTime field value if set, zero value otherwise.
func (o *CreateOrderParam) GetExpireTime() string {
	if o == nil || IsNil(o.ExpireTime) {
		var ret string
		return ret
	}
	return *o.ExpireTime
}

// GetExpireTimeOk returns a tuple with the ExpireTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetExpireTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpireTime) {
		return nil, false
	}
	return o.ExpireTime, true
}

// HasExpireTime returns a boolean if a field has been set.
func (o *CreateOrderParam) HasExpireTime() bool {
	if o != nil && !IsNil(o.ExpireTime) {
		return true
	}

	return false
}

// SetExpireTime gets a reference to the given string and assigns it to the ExpireTime field.
func (o *CreateOrderParam) SetExpireTime(v string) {
	o.ExpireTime = &v
}

// GetSourceKey returns the SourceKey field value if set, zero value otherwise.
func (o *CreateOrderParam) GetSourceKey() string {
	if o == nil || IsNil(o.SourceKey) {
		var ret string
		return ret
	}
	return *o.SourceKey
}

// GetSourceKeyOk returns a tuple with the SourceKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetSourceKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SourceKey) {
		return nil, false
	}
	return o.SourceKey, true
}

// HasSourceKey returns a boolean if a field has been set.
func (o *CreateOrderParam) HasSourceKey() bool {
	if o != nil && !IsNil(o.SourceKey) {
		return true
	}

	return false
}

// SetSourceKey gets a reference to the given string and assigns it to the SourceKey field.
func (o *CreateOrderParam) SetSourceKey(v string) {
	o.SourceKey = &v
}

// GetIsPositionTpsl returns the IsPositionTpsl field value if set, zero value otherwise.
func (o *CreateOrderParam) GetIsPositionTpsl() bool {
	if o == nil || IsNil(o.IsPositionTpsl) {
		var ret bool
		return ret
	}
	return *o.IsPositionTpsl
}

// GetIsPositionTpslOk returns a tuple with the IsPositionTpsl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetIsPositionTpslOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPositionTpsl) {
		return nil, false
	}
	return o.IsPositionTpsl, true
}

// HasIsPositionTpsl returns a boolean if a field has been set.
func (o *CreateOrderParam) HasIsPositionTpsl() bool {
	if o != nil && !IsNil(o.IsPositionTpsl) {
		return true
	}

	return false
}

// SetIsPositionTpsl gets a reference to the given bool and assigns it to the IsPositionTpsl field.
func (o *CreateOrderParam) SetIsPositionTpsl(v bool) {
	o.IsPositionTpsl = &v
}

// GetOpenTpslParentOrderId returns the OpenTpslParentOrderId field value if set, zero value otherwise.
func (o *CreateOrderParam) GetOpenTpslParentOrderId() string {
	if o == nil || IsNil(o.OpenTpslParentOrderId) {
		var ret string
		return ret
	}
	return *o.OpenTpslParentOrderId
}

// GetOpenTpslParentOrderIdOk returns a tuple with the OpenTpslParentOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetOpenTpslParentOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenTpslParentOrderId) {
		return nil, false
	}
	return o.OpenTpslParentOrderId, true
}

// HasOpenTpslParentOrderId returns a boolean if a field has been set.
func (o *CreateOrderParam) HasOpenTpslParentOrderId() bool {
	if o != nil && !IsNil(o.OpenTpslParentOrderId) {
		return true
	}

	return false
}

// SetOpenTpslParentOrderId gets a reference to the given string and assigns it to the OpenTpslParentOrderId field.
func (o *CreateOrderParam) SetOpenTpslParentOrderId(v string) {
	o.OpenTpslParentOrderId = &v
}

// GetIsSetOpenTp returns the IsSetOpenTp field value if set, zero value otherwise.
func (o *CreateOrderParam) GetIsSetOpenTp() bool {
	if o == nil || IsNil(o.IsSetOpenTp) {
		var ret bool
		return ret
	}
	return *o.IsSetOpenTp
}

// GetIsSetOpenTpOk returns a tuple with the IsSetOpenTp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetIsSetOpenTpOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSetOpenTp) {
		return nil, false
	}
	return o.IsSetOpenTp, true
}

// HasIsSetOpenTp returns a boolean if a field has been set.
func (o *CreateOrderParam) HasIsSetOpenTp() bool {
	if o != nil && !IsNil(o.IsSetOpenTp) {
		return true
	}

	return false
}

// SetIsSetOpenTp gets a reference to the given bool and assigns it to the IsSetOpenTp field.
func (o *CreateOrderParam) SetIsSetOpenTp(v bool) {
	o.IsSetOpenTp = &v
}

// GetOpenTp returns the OpenTp field value if set, zero value otherwise.
func (o *CreateOrderParam) GetOpenTp() OpenTpSlParam {
	if o == nil || IsNil(o.OpenTp) {
		var ret OpenTpSlParam
		return ret
	}
	return *o.OpenTp
}

// GetOpenTpOk returns a tuple with the OpenTp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetOpenTpOk() (*OpenTpSlParam, bool) {
	if o == nil || IsNil(o.OpenTp) {
		return nil, false
	}
	return o.OpenTp, true
}

// HasOpenTp returns a boolean if a field has been set.
func (o *CreateOrderParam) HasOpenTp() bool {
	if o != nil && !IsNil(o.OpenTp) {
		return true
	}

	return false
}

// SetOpenTp gets a reference to the given OpenTpSlParam and assigns it to the OpenTp field.
func (o *CreateOrderParam) SetOpenTp(v OpenTpSlParam) {
	o.OpenTp = &v
}

// GetIsSetOpenSl returns the IsSetOpenSl field value if set, zero value otherwise.
func (o *CreateOrderParam) GetIsSetOpenSl() bool {
	if o == nil || IsNil(o.IsSetOpenSl) {
		var ret bool
		return ret
	}
	return *o.IsSetOpenSl
}

// GetIsSetOpenSlOk returns a tuple with the IsSetOpenSl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetIsSetOpenSlOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSetOpenSl) {
		return nil, false
	}
	return o.IsSetOpenSl, true
}

// HasIsSetOpenSl returns a boolean if a field has been set.
func (o *CreateOrderParam) HasIsSetOpenSl() bool {
	if o != nil && !IsNil(o.IsSetOpenSl) {
		return true
	}

	return false
}

// SetIsSetOpenSl gets a reference to the given bool and assigns it to the IsSetOpenSl field.
func (o *CreateOrderParam) SetIsSetOpenSl(v bool) {
	o.IsSetOpenSl = &v
}

// GetOpenSl returns the OpenSl field value if set, zero value otherwise.
func (o *CreateOrderParam) GetOpenSl() OpenTpSlParam {
	if o == nil || IsNil(o.OpenSl) {
		var ret OpenTpSlParam
		return ret
	}
	return *o.OpenSl
}

// GetOpenSlOk returns a tuple with the OpenSl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetOpenSlOk() (*OpenTpSlParam, bool) {
	if o == nil || IsNil(o.OpenSl) {
		return nil, false
	}
	return o.OpenSl, true
}

// HasOpenSl returns a boolean if a field has been set.
func (o *CreateOrderParam) HasOpenSl() bool {
	if o != nil && !IsNil(o.OpenSl) {
		return true
	}

	return false
}

// SetOpenSl gets a reference to the given OpenTpSlParam and assigns it to the OpenSl field.
func (o *CreateOrderParam) SetOpenSl(v OpenTpSlParam) {
	o.OpenSl = &v
}

// GetL2Nonce returns the L2Nonce field value if set, zero value otherwise.
func (o *CreateOrderParam) GetL2Nonce() string {
	if o == nil || IsNil(o.L2Nonce) {
		var ret string
		return ret
	}
	return *o.L2Nonce
}

// GetL2NonceOk returns a tuple with the L2Nonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetL2NonceOk() (*string, bool) {
	if o == nil || IsNil(o.L2Nonce) {
		return nil, false
	}
	return o.L2Nonce, true
}

// HasL2Nonce returns a boolean if a field has been set.
func (o *CreateOrderParam) HasL2Nonce() bool {
	if o != nil && !IsNil(o.L2Nonce) {
		return true
	}

	return false
}

// SetL2Nonce gets a reference to the given string and assigns it to the L2Nonce field.
func (o *CreateOrderParam) SetL2Nonce(v string) {
	o.L2Nonce = &v
}

// GetL2Value returns the L2Value field value if set, zero value otherwise.
func (o *CreateOrderParam) GetL2Value() string {
	if o == nil || IsNil(o.L2Value) {
		var ret string
		return ret
	}
	return *o.L2Value
}

// GetL2ValueOk returns a tuple with the L2Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetL2ValueOk() (*string, bool) {
	if o == nil || IsNil(o.L2Value) {
		return nil, false
	}
	return o.L2Value, true
}

// HasL2Value returns a boolean if a field has been set.
func (o *CreateOrderParam) HasL2Value() bool {
	if o != nil && !IsNil(o.L2Value) {
		return true
	}

	return false
}

// SetL2Value gets a reference to the given string and assigns it to the L2Value field.
func (o *CreateOrderParam) SetL2Value(v string) {
	o.L2Value = &v
}

// GetL2Size returns the L2Size field value if set, zero value otherwise.
func (o *CreateOrderParam) GetL2Size() string {
	if o == nil || IsNil(o.L2Size) {
		var ret string
		return ret
	}
	return *o.L2Size
}

// GetL2SizeOk returns a tuple with the L2Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetL2SizeOk() (*string, bool) {
	if o == nil || IsNil(o.L2Size) {
		return nil, false
	}
	return o.L2Size, true
}

// HasL2Size returns a boolean if a field has been set.
func (o *CreateOrderParam) HasL2Size() bool {
	if o != nil && !IsNil(o.L2Size) {
		return true
	}

	return false
}

// SetL2Size gets a reference to the given string and assigns it to the L2Size field.
func (o *CreateOrderParam) SetL2Size(v string) {
	o.L2Size = &v
}

// GetL2LimitFee returns the L2LimitFee field value if set, zero value otherwise.
func (o *CreateOrderParam) GetL2LimitFee() string {
	if o == nil || IsNil(o.L2LimitFee) {
		var ret string
		return ret
	}
	return *o.L2LimitFee
}

// GetL2LimitFeeOk returns a tuple with the L2LimitFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetL2LimitFeeOk() (*string, bool) {
	if o == nil || IsNil(o.L2LimitFee) {
		return nil, false
	}
	return o.L2LimitFee, true
}

// HasL2LimitFee returns a boolean if a field has been set.
func (o *CreateOrderParam) HasL2LimitFee() bool {
	if o != nil && !IsNil(o.L2LimitFee) {
		return true
	}

	return false
}

// SetL2LimitFee gets a reference to the given string and assigns it to the L2LimitFee field.
func (o *CreateOrderParam) SetL2LimitFee(v string) {
	o.L2LimitFee = &v
}

// GetL2ExpireTime returns the L2ExpireTime field value if set, zero value otherwise.
func (o *CreateOrderParam) GetL2ExpireTime() string {
	if o == nil || IsNil(o.L2ExpireTime) {
		var ret string
		return ret
	}
	return *o.L2ExpireTime
}

// GetL2ExpireTimeOk returns a tuple with the L2ExpireTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetL2ExpireTimeOk() (*string, bool) {
	if o == nil || IsNil(o.L2ExpireTime) {
		return nil, false
	}
	return o.L2ExpireTime, true
}

// HasL2ExpireTime returns a boolean if a field has been set.
func (o *CreateOrderParam) HasL2ExpireTime() bool {
	if o != nil && !IsNil(o.L2ExpireTime) {
		return true
	}

	return false
}

// SetL2ExpireTime gets a reference to the given string and assigns it to the L2ExpireTime field.
func (o *CreateOrderParam) SetL2ExpireTime(v string) {
	o.L2ExpireTime = &v
}

// GetL2Signature returns the L2Signature field value if set, zero value otherwise.
func (o *CreateOrderParam) GetL2Signature() string {
	if o == nil || IsNil(o.L2Signature) {
		var ret string
		return ret
	}
	return *o.L2Signature
}

// GetL2SignatureOk returns a tuple with the L2Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetL2SignatureOk() (*string, bool) {
	if o == nil || IsNil(o.L2Signature) {
		return nil, false
	}
	return o.L2Signature, true
}

// HasL2Signature returns a boolean if a field has been set.
func (o *CreateOrderParam) HasL2Signature() bool {
	if o != nil && !IsNil(o.L2Signature) {
		return true
	}

	return false
}

// SetL2Signature gets a reference to the given string and assigns it to the L2Signature field.
func (o *CreateOrderParam) SetL2Signature(v string) {
	o.L2Signature = &v
}

// GetExtraType returns the ExtraType field value if set, zero value otherwise.
func (o *CreateOrderParam) GetExtraType() string {
	if o == nil || IsNil(o.ExtraType) {
		var ret string
		return ret
	}
	return *o.ExtraType
}

// GetExtraTypeOk returns a tuple with the ExtraType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetExtraTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraType) {
		return nil, false
	}
	return o.ExtraType, true
}

// HasExtraType returns a boolean if a field has been set.
func (o *CreateOrderParam) HasExtraType() bool {
	if o != nil && !IsNil(o.ExtraType) {
		return true
	}

	return false
}

// SetExtraType gets a reference to the given string and assigns it to the ExtraType field.
func (o *CreateOrderParam) SetExtraType(v string) {
	o.ExtraType = &v
}

// GetExtraDataJson returns the ExtraDataJson field value if set, zero value otherwise.
func (o *CreateOrderParam) GetExtraDataJson() string {
	if o == nil || IsNil(o.ExtraDataJson) {
		var ret string
		return ret
	}
	return *o.ExtraDataJson
}

// GetExtraDataJsonOk returns a tuple with the ExtraDataJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderParam) GetExtraDataJsonOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraDataJson) {
		return nil, false
	}
	return o.ExtraDataJson, true
}

// HasExtraDataJson returns a boolean if a field has been set.
func (o *CreateOrderParam) HasExtraDataJson() bool {
	if o != nil && !IsNil(o.ExtraDataJson) {
		return true
	}

	return false
}

// SetExtraDataJson gets a reference to the given string and assigns it to the ExtraDataJson field.
func (o *CreateOrderParam) SetExtraDataJson(v string) {
	o.ExtraDataJson = &v
}

func (o CreateOrderParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrderParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.ContractId) {
		toSerialize["contractId"] = o.ContractId
	}
	if !IsNil(o.Side) {
		toSerialize["side"] = o.Side
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.ClientOrderId) {
		toSerialize["clientOrderId"] = o.ClientOrderId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.TimeInForce) {
		toSerialize["timeInForce"] = o.TimeInForce
	}
	if !IsNil(o.ReduceOnly) {
		toSerialize["reduceOnly"] = o.ReduceOnly
	}
	if !IsNil(o.TriggerPrice) {
		toSerialize["triggerPrice"] = o.TriggerPrice
	}
	if !IsNil(o.TriggerPriceType) {
		toSerialize["triggerPriceType"] = o.TriggerPriceType
	}
	if !IsNil(o.ExpireTime) {
		toSerialize["expireTime"] = o.ExpireTime
	}
	if !IsNil(o.SourceKey) {
		toSerialize["sourceKey"] = o.SourceKey
	}
	if !IsNil(o.IsPositionTpsl) {
		toSerialize["isPositionTpsl"] = o.IsPositionTpsl
	}
	if !IsNil(o.OpenTpslParentOrderId) {
		toSerialize["openTpslParentOrderId"] = o.OpenTpslParentOrderId
	}
	if !IsNil(o.IsSetOpenTp) {
		toSerialize["isSetOpenTp"] = o.IsSetOpenTp
	}
	if !IsNil(o.OpenTp) {
		toSerialize["openTp"] = o.OpenTp
	}
	if !IsNil(o.IsSetOpenSl) {
		toSerialize["isSetOpenSl"] = o.IsSetOpenSl
	}
	if !IsNil(o.OpenSl) {
		toSerialize["openSl"] = o.OpenSl
	}
	if !IsNil(o.L2Nonce) {
		toSerialize["l2Nonce"] = o.L2Nonce
	}
	if !IsNil(o.L2Value) {
		toSerialize["l2Value"] = o.L2Value
	}
	if !IsNil(o.L2Size) {
		toSerialize["l2Size"] = o.L2Size
	}
	if !IsNil(o.L2LimitFee) {
		toSerialize["l2LimitFee"] = o.L2LimitFee
	}
	if !IsNil(o.L2ExpireTime) {
		toSerialize["l2ExpireTime"] = o.L2ExpireTime
	}
	if !IsNil(o.L2Signature) {
		toSerialize["l2Signature"] = o.L2Signature
	}
	if !IsNil(o.ExtraType) {
		toSerialize["extraType"] = o.ExtraType
	}
	if !IsNil(o.ExtraDataJson) {
		toSerialize["extraDataJson"] = o.ExtraDataJson
	}
	return toSerialize, nil
}

type NullableCreateOrderParam struct {
	value *CreateOrderParam
	isSet bool
}

func (v NullableCreateOrderParam) Get() *CreateOrderParam {
	return v.value
}

func (v *NullableCreateOrderParam) Set(val *CreateOrderParam) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrderParam) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrderParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrderParam(val *CreateOrderParam) *NullableCreateOrderParam {
	return &NullableCreateOrderParam{value: val, isSet: true}
}

func (v NullableCreateOrderParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrderParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


