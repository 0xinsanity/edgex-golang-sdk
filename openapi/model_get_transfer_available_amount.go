/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetTransferAvailableAmount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTransferAvailableAmount{}

// GetTransferAvailableAmount 获取转账可用数量-响应
type GetTransferAvailableAmount struct {
	// 可用数量
	AvailableAmount *string `json:"availableAmount,omitempty"`
}

// NewGetTransferAvailableAmount instantiates a new GetTransferAvailableAmount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTransferAvailableAmount() *GetTransferAvailableAmount {
	this := GetTransferAvailableAmount{}
	return &this
}

// NewGetTransferAvailableAmountWithDefaults instantiates a new GetTransferAvailableAmount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTransferAvailableAmountWithDefaults() *GetTransferAvailableAmount {
	this := GetTransferAvailableAmount{}
	return &this
}

// GetAvailableAmount returns the AvailableAmount field value if set, zero value otherwise.
func (o *GetTransferAvailableAmount) GetAvailableAmount() string {
	if o == nil || IsNil(o.AvailableAmount) {
		var ret string
		return ret
	}
	return *o.AvailableAmount
}

// GetAvailableAmountOk returns a tuple with the AvailableAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTransferAvailableAmount) GetAvailableAmountOk() (*string, bool) {
	if o == nil || IsNil(o.AvailableAmount) {
		return nil, false
	}
	return o.AvailableAmount, true
}

// HasAvailableAmount returns a boolean if a field has been set.
func (o *GetTransferAvailableAmount) HasAvailableAmount() bool {
	if o != nil && !IsNil(o.AvailableAmount) {
		return true
	}

	return false
}

// SetAvailableAmount gets a reference to the given string and assigns it to the AvailableAmount field.
func (o *GetTransferAvailableAmount) SetAvailableAmount(v string) {
	o.AvailableAmount = &v
}

func (o GetTransferAvailableAmount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTransferAvailableAmount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvailableAmount) {
		toSerialize["availableAmount"] = o.AvailableAmount
	}
	return toSerialize, nil
}

type NullableGetTransferAvailableAmount struct {
	value *GetTransferAvailableAmount
	isSet bool
}

func (v NullableGetTransferAvailableAmount) Get() *GetTransferAvailableAmount {
	return v.value
}

func (v *NullableGetTransferAvailableAmount) Set(val *GetTransferAvailableAmount) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTransferAvailableAmount) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTransferAvailableAmount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTransferAvailableAmount(val *GetTransferAvailableAmount) *NullableGetTransferAvailableAmount {
	return &NullableGetTransferAvailableAmount{value: val, isSet: true}
}

func (v NullableGetTransferAvailableAmount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTransferAvailableAmount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


