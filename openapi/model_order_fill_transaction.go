/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrderFillTransaction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderFillTransaction{}

// OrderFillTransaction 委托单成交明细
type OrderFillTransaction struct {
	// 唯一标识
	Id *string `json:"id,omitempty"`
	// 所属用户id
	UserId *string `json:"userId,omitempty"`
	// 所属账户id
	AccountId *string `json:"accountId,omitempty"`
	// 所属抵押品币种id
	CoinId *string `json:"coinId,omitempty"`
	// 所属合约id
	ContractId *string `json:"contractId,omitempty"`
	// 所属委托单id
	OrderId *string `json:"orderId,omitempty"`
	// 买卖方向
	OrderSide *string `json:"orderSide,omitempty"`
	// 实际成交数量
	FillSize *string `json:"fillSize,omitempty"`
	// 实际成交价值
	FillValue *string `json:"fillValue,omitempty"`
	// 实际成交费用
	FillFee *string `json:"fillFee,omitempty"`
	// 成交价格 (非精确值，仅展示使用)
	FillPrice *string `json:"fillPrice,omitempty"`
	// 如果是清算(强平)成交，此字段为清算费用
	LiquidateFee *string `json:"liquidateFee,omitempty"`
	// 实际已实现盈亏(成交包含平仓才会有值)
	RealizePnl *string `json:"realizePnl,omitempty"`
	// 实际成交方向
	Direction *string `json:"direction,omitempty"`
	// 是否为仓位止盈止损单
	IsPositionTpsl *bool `json:"isPositionTpsl,omitempty"`
	// 是否是清算(强平)单成交
	IsLiquidate *bool `json:"isLiquidate,omitempty"`
	// 是否是自动减仓单成交
	IsDeleverage *bool `json:"isDeleverage,omitempty"`
	// 是否为不经过撮合直接成交的委托单
	IsWithoutMatch *bool `json:"isWithoutMatch,omitempty"`
	// 提交撮合处理后的顺序id
	MatchSequenceId *string `json:"matchSequenceId,omitempty"`
	// 提交撮合处理后多次成交的index
	MatchIndex *int32 `json:"matchIndex,omitempty"`
	// 提交撮合处理后的时间
	MatchTime *string `json:"matchTime,omitempty"`
	// 成交对手账户id
	MatchAccountId *string `json:"matchAccountId,omitempty"`
	// 成交对手委托单id
	MatchOrderId *string `json:"matchOrderId,omitempty"`
	// 撮合引擎返回的成交id
	MatchFillId *string `json:"matchFillId,omitempty"`
	// 关联的仓位明细id。
	PositionTransactionId *string `json:"positionTransactionId,omitempty"`
	// 关联的抵押品明细id。
	CollateralTransactionId *string `json:"collateralTransactionId,omitempty"`
	// 附加类型，供上层业务使用
	ExtraType *string `json:"extraType,omitempty"`
	// 额外数据，json格式，默认为空串
	ExtraDataJson *string `json:"extraDataJson,omitempty"`
	// 当前审查状态
	CensorStatus *string `json:"censorStatus,omitempty"`
	// 审查处理序号。当 censor_status=CENSOR_SUCCESS/CENSOR_FAILURE/L2_APPROVED/L2_REJECT/L2_REJECT_APPROVED 时存在
	CensorTxId *string `json:"censorTxId,omitempty"`
	// 审查处理时间。当 censor_status=CENSOR_SUCCESS/CENSOR_FAILURE/L2_APPROVED/L2_REJECT/L2_REJECT_APPROVED 时存在
	CensorTime *string `json:"censorTime,omitempty"`
	// 审查失败错误码。当 censor_status=CENSOR_FAILURE 时存在
	CensorFailCode *string `json:"censorFailCode,omitempty"`
	// 审查失败原因。当 censor_status=CENSOR_FAILURE 时存在
	CensorFailReason *string `json:"censorFailReason,omitempty"`
	// l2推送交易id。当 censor_status=CENSOR_SUCCESS/L2_APPROVED/L2_REJECT/L2_REJECT_APPROVED 时存在
	L2TxId *string `json:"l2TxId,omitempty"`
	// l2拒绝时间。当 censor_status=L2_REJECT/L2_REJECT_APPROVED 时存在
	L2RejectTime *string `json:"l2RejectTime,omitempty"`
	// l2拒绝错误码。当 censor_status=L2_REJECT/L2_REJECT_APPROVED 时存在
	L2RejectCode *string `json:"l2RejectCode,omitempty"`
	// l2拒绝原因。当 censor_status=L2_REJECT/L2_REJECT_APPROVED 时存在
	L2RejectReason *string `json:"l2RejectReason,omitempty"`
	// l2批次验证时间。当 status=L2_APPROVED/L2_REJECT_APPROVED 时存在
	L2ApprovedTime *string `json:"l2ApprovedTime,omitempty"`
	// 创建时间
	CreatedTime *string `json:"createdTime,omitempty"`
	// 更新时间
	UpdatedTime *string `json:"updatedTime,omitempty"`
}

// NewOrderFillTransaction instantiates a new OrderFillTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderFillTransaction() *OrderFillTransaction {
	this := OrderFillTransaction{}
	return &this
}

// NewOrderFillTransactionWithDefaults instantiates a new OrderFillTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderFillTransactionWithDefaults() *OrderFillTransaction {
	this := OrderFillTransaction{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OrderFillTransaction) SetId(v string) {
	o.Id = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *OrderFillTransaction) SetUserId(v string) {
	o.UserId = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *OrderFillTransaction) SetAccountId(v string) {
	o.AccountId = &v
}

// GetCoinId returns the CoinId field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetCoinId() string {
	if o == nil || IsNil(o.CoinId) {
		var ret string
		return ret
	}
	return *o.CoinId
}

// GetCoinIdOk returns a tuple with the CoinId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetCoinIdOk() (*string, bool) {
	if o == nil || IsNil(o.CoinId) {
		return nil, false
	}
	return o.CoinId, true
}

// HasCoinId returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasCoinId() bool {
	if o != nil && !IsNil(o.CoinId) {
		return true
	}

	return false
}

// SetCoinId gets a reference to the given string and assigns it to the CoinId field.
func (o *OrderFillTransaction) SetCoinId(v string) {
	o.CoinId = &v
}

// GetContractId returns the ContractId field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetContractId() string {
	if o == nil || IsNil(o.ContractId) {
		var ret string
		return ret
	}
	return *o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetContractIdOk() (*string, bool) {
	if o == nil || IsNil(o.ContractId) {
		return nil, false
	}
	return o.ContractId, true
}

// HasContractId returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasContractId() bool {
	if o != nil && !IsNil(o.ContractId) {
		return true
	}

	return false
}

// SetContractId gets a reference to the given string and assigns it to the ContractId field.
func (o *OrderFillTransaction) SetContractId(v string) {
	o.ContractId = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetOrderId() string {
	if o == nil || IsNil(o.OrderId) {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *OrderFillTransaction) SetOrderId(v string) {
	o.OrderId = &v
}

// GetOrderSide returns the OrderSide field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetOrderSide() string {
	if o == nil || IsNil(o.OrderSide) {
		var ret string
		return ret
	}
	return *o.OrderSide
}

// GetOrderSideOk returns a tuple with the OrderSide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetOrderSideOk() (*string, bool) {
	if o == nil || IsNil(o.OrderSide) {
		return nil, false
	}
	return o.OrderSide, true
}

// HasOrderSide returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasOrderSide() bool {
	if o != nil && !IsNil(o.OrderSide) {
		return true
	}

	return false
}

// SetOrderSide gets a reference to the given string and assigns it to the OrderSide field.
func (o *OrderFillTransaction) SetOrderSide(v string) {
	o.OrderSide = &v
}

// GetFillSize returns the FillSize field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetFillSize() string {
	if o == nil || IsNil(o.FillSize) {
		var ret string
		return ret
	}
	return *o.FillSize
}

// GetFillSizeOk returns a tuple with the FillSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetFillSizeOk() (*string, bool) {
	if o == nil || IsNil(o.FillSize) {
		return nil, false
	}
	return o.FillSize, true
}

// HasFillSize returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasFillSize() bool {
	if o != nil && !IsNil(o.FillSize) {
		return true
	}

	return false
}

// SetFillSize gets a reference to the given string and assigns it to the FillSize field.
func (o *OrderFillTransaction) SetFillSize(v string) {
	o.FillSize = &v
}

// GetFillValue returns the FillValue field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetFillValue() string {
	if o == nil || IsNil(o.FillValue) {
		var ret string
		return ret
	}
	return *o.FillValue
}

// GetFillValueOk returns a tuple with the FillValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetFillValueOk() (*string, bool) {
	if o == nil || IsNil(o.FillValue) {
		return nil, false
	}
	return o.FillValue, true
}

// HasFillValue returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasFillValue() bool {
	if o != nil && !IsNil(o.FillValue) {
		return true
	}

	return false
}

// SetFillValue gets a reference to the given string and assigns it to the FillValue field.
func (o *OrderFillTransaction) SetFillValue(v string) {
	o.FillValue = &v
}

// GetFillFee returns the FillFee field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetFillFee() string {
	if o == nil || IsNil(o.FillFee) {
		var ret string
		return ret
	}
	return *o.FillFee
}

// GetFillFeeOk returns a tuple with the FillFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetFillFeeOk() (*string, bool) {
	if o == nil || IsNil(o.FillFee) {
		return nil, false
	}
	return o.FillFee, true
}

// HasFillFee returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasFillFee() bool {
	if o != nil && !IsNil(o.FillFee) {
		return true
	}

	return false
}

// SetFillFee gets a reference to the given string and assigns it to the FillFee field.
func (o *OrderFillTransaction) SetFillFee(v string) {
	o.FillFee = &v
}

// GetFillPrice returns the FillPrice field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetFillPrice() string {
	if o == nil || IsNil(o.FillPrice) {
		var ret string
		return ret
	}
	return *o.FillPrice
}

// GetFillPriceOk returns a tuple with the FillPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetFillPriceOk() (*string, bool) {
	if o == nil || IsNil(o.FillPrice) {
		return nil, false
	}
	return o.FillPrice, true
}

// HasFillPrice returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasFillPrice() bool {
	if o != nil && !IsNil(o.FillPrice) {
		return true
	}

	return false
}

// SetFillPrice gets a reference to the given string and assigns it to the FillPrice field.
func (o *OrderFillTransaction) SetFillPrice(v string) {
	o.FillPrice = &v
}

// GetLiquidateFee returns the LiquidateFee field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetLiquidateFee() string {
	if o == nil || IsNil(o.LiquidateFee) {
		var ret string
		return ret
	}
	return *o.LiquidateFee
}

// GetLiquidateFeeOk returns a tuple with the LiquidateFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetLiquidateFeeOk() (*string, bool) {
	if o == nil || IsNil(o.LiquidateFee) {
		return nil, false
	}
	return o.LiquidateFee, true
}

// HasLiquidateFee returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasLiquidateFee() bool {
	if o != nil && !IsNil(o.LiquidateFee) {
		return true
	}

	return false
}

// SetLiquidateFee gets a reference to the given string and assigns it to the LiquidateFee field.
func (o *OrderFillTransaction) SetLiquidateFee(v string) {
	o.LiquidateFee = &v
}

// GetRealizePnl returns the RealizePnl field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetRealizePnl() string {
	if o == nil || IsNil(o.RealizePnl) {
		var ret string
		return ret
	}
	return *o.RealizePnl
}

// GetRealizePnlOk returns a tuple with the RealizePnl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetRealizePnlOk() (*string, bool) {
	if o == nil || IsNil(o.RealizePnl) {
		return nil, false
	}
	return o.RealizePnl, true
}

// HasRealizePnl returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasRealizePnl() bool {
	if o != nil && !IsNil(o.RealizePnl) {
		return true
	}

	return false
}

// SetRealizePnl gets a reference to the given string and assigns it to the RealizePnl field.
func (o *OrderFillTransaction) SetRealizePnl(v string) {
	o.RealizePnl = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetDirection() string {
	if o == nil || IsNil(o.Direction) {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetDirectionOk() (*string, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *OrderFillTransaction) SetDirection(v string) {
	o.Direction = &v
}

// GetIsPositionTpsl returns the IsPositionTpsl field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetIsPositionTpsl() bool {
	if o == nil || IsNil(o.IsPositionTpsl) {
		var ret bool
		return ret
	}
	return *o.IsPositionTpsl
}

// GetIsPositionTpslOk returns a tuple with the IsPositionTpsl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetIsPositionTpslOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPositionTpsl) {
		return nil, false
	}
	return o.IsPositionTpsl, true
}

// HasIsPositionTpsl returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasIsPositionTpsl() bool {
	if o != nil && !IsNil(o.IsPositionTpsl) {
		return true
	}

	return false
}

// SetIsPositionTpsl gets a reference to the given bool and assigns it to the IsPositionTpsl field.
func (o *OrderFillTransaction) SetIsPositionTpsl(v bool) {
	o.IsPositionTpsl = &v
}

// GetIsLiquidate returns the IsLiquidate field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetIsLiquidate() bool {
	if o == nil || IsNil(o.IsLiquidate) {
		var ret bool
		return ret
	}
	return *o.IsLiquidate
}

// GetIsLiquidateOk returns a tuple with the IsLiquidate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetIsLiquidateOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLiquidate) {
		return nil, false
	}
	return o.IsLiquidate, true
}

// HasIsLiquidate returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasIsLiquidate() bool {
	if o != nil && !IsNil(o.IsLiquidate) {
		return true
	}

	return false
}

// SetIsLiquidate gets a reference to the given bool and assigns it to the IsLiquidate field.
func (o *OrderFillTransaction) SetIsLiquidate(v bool) {
	o.IsLiquidate = &v
}

// GetIsDeleverage returns the IsDeleverage field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetIsDeleverage() bool {
	if o == nil || IsNil(o.IsDeleverage) {
		var ret bool
		return ret
	}
	return *o.IsDeleverage
}

// GetIsDeleverageOk returns a tuple with the IsDeleverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetIsDeleverageOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleverage) {
		return nil, false
	}
	return o.IsDeleverage, true
}

// HasIsDeleverage returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasIsDeleverage() bool {
	if o != nil && !IsNil(o.IsDeleverage) {
		return true
	}

	return false
}

// SetIsDeleverage gets a reference to the given bool and assigns it to the IsDeleverage field.
func (o *OrderFillTransaction) SetIsDeleverage(v bool) {
	o.IsDeleverage = &v
}

// GetIsWithoutMatch returns the IsWithoutMatch field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetIsWithoutMatch() bool {
	if o == nil || IsNil(o.IsWithoutMatch) {
		var ret bool
		return ret
	}
	return *o.IsWithoutMatch
}

// GetIsWithoutMatchOk returns a tuple with the IsWithoutMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetIsWithoutMatchOk() (*bool, bool) {
	if o == nil || IsNil(o.IsWithoutMatch) {
		return nil, false
	}
	return o.IsWithoutMatch, true
}

// HasIsWithoutMatch returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasIsWithoutMatch() bool {
	if o != nil && !IsNil(o.IsWithoutMatch) {
		return true
	}

	return false
}

// SetIsWithoutMatch gets a reference to the given bool and assigns it to the IsWithoutMatch field.
func (o *OrderFillTransaction) SetIsWithoutMatch(v bool) {
	o.IsWithoutMatch = &v
}

// GetMatchSequenceId returns the MatchSequenceId field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetMatchSequenceId() string {
	if o == nil || IsNil(o.MatchSequenceId) {
		var ret string
		return ret
	}
	return *o.MatchSequenceId
}

// GetMatchSequenceIdOk returns a tuple with the MatchSequenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetMatchSequenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.MatchSequenceId) {
		return nil, false
	}
	return o.MatchSequenceId, true
}

// HasMatchSequenceId returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasMatchSequenceId() bool {
	if o != nil && !IsNil(o.MatchSequenceId) {
		return true
	}

	return false
}

// SetMatchSequenceId gets a reference to the given string and assigns it to the MatchSequenceId field.
func (o *OrderFillTransaction) SetMatchSequenceId(v string) {
	o.MatchSequenceId = &v
}

// GetMatchIndex returns the MatchIndex field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetMatchIndex() int32 {
	if o == nil || IsNil(o.MatchIndex) {
		var ret int32
		return ret
	}
	return *o.MatchIndex
}

// GetMatchIndexOk returns a tuple with the MatchIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetMatchIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.MatchIndex) {
		return nil, false
	}
	return o.MatchIndex, true
}

// HasMatchIndex returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasMatchIndex() bool {
	if o != nil && !IsNil(o.MatchIndex) {
		return true
	}

	return false
}

// SetMatchIndex gets a reference to the given int32 and assigns it to the MatchIndex field.
func (o *OrderFillTransaction) SetMatchIndex(v int32) {
	o.MatchIndex = &v
}

// GetMatchTime returns the MatchTime field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetMatchTime() string {
	if o == nil || IsNil(o.MatchTime) {
		var ret string
		return ret
	}
	return *o.MatchTime
}

// GetMatchTimeOk returns a tuple with the MatchTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetMatchTimeOk() (*string, bool) {
	if o == nil || IsNil(o.MatchTime) {
		return nil, false
	}
	return o.MatchTime, true
}

// HasMatchTime returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasMatchTime() bool {
	if o != nil && !IsNil(o.MatchTime) {
		return true
	}

	return false
}

// SetMatchTime gets a reference to the given string and assigns it to the MatchTime field.
func (o *OrderFillTransaction) SetMatchTime(v string) {
	o.MatchTime = &v
}

// GetMatchAccountId returns the MatchAccountId field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetMatchAccountId() string {
	if o == nil || IsNil(o.MatchAccountId) {
		var ret string
		return ret
	}
	return *o.MatchAccountId
}

// GetMatchAccountIdOk returns a tuple with the MatchAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetMatchAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.MatchAccountId) {
		return nil, false
	}
	return o.MatchAccountId, true
}

// HasMatchAccountId returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasMatchAccountId() bool {
	if o != nil && !IsNil(o.MatchAccountId) {
		return true
	}

	return false
}

// SetMatchAccountId gets a reference to the given string and assigns it to the MatchAccountId field.
func (o *OrderFillTransaction) SetMatchAccountId(v string) {
	o.MatchAccountId = &v
}

// GetMatchOrderId returns the MatchOrderId field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetMatchOrderId() string {
	if o == nil || IsNil(o.MatchOrderId) {
		var ret string
		return ret
	}
	return *o.MatchOrderId
}

// GetMatchOrderIdOk returns a tuple with the MatchOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetMatchOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.MatchOrderId) {
		return nil, false
	}
	return o.MatchOrderId, true
}

// HasMatchOrderId returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasMatchOrderId() bool {
	if o != nil && !IsNil(o.MatchOrderId) {
		return true
	}

	return false
}

// SetMatchOrderId gets a reference to the given string and assigns it to the MatchOrderId field.
func (o *OrderFillTransaction) SetMatchOrderId(v string) {
	o.MatchOrderId = &v
}

// GetMatchFillId returns the MatchFillId field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetMatchFillId() string {
	if o == nil || IsNil(o.MatchFillId) {
		var ret string
		return ret
	}
	return *o.MatchFillId
}

// GetMatchFillIdOk returns a tuple with the MatchFillId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetMatchFillIdOk() (*string, bool) {
	if o == nil || IsNil(o.MatchFillId) {
		return nil, false
	}
	return o.MatchFillId, true
}

// HasMatchFillId returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasMatchFillId() bool {
	if o != nil && !IsNil(o.MatchFillId) {
		return true
	}

	return false
}

// SetMatchFillId gets a reference to the given string and assigns it to the MatchFillId field.
func (o *OrderFillTransaction) SetMatchFillId(v string) {
	o.MatchFillId = &v
}

// GetPositionTransactionId returns the PositionTransactionId field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetPositionTransactionId() string {
	if o == nil || IsNil(o.PositionTransactionId) {
		var ret string
		return ret
	}
	return *o.PositionTransactionId
}

// GetPositionTransactionIdOk returns a tuple with the PositionTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetPositionTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.PositionTransactionId) {
		return nil, false
	}
	return o.PositionTransactionId, true
}

// HasPositionTransactionId returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasPositionTransactionId() bool {
	if o != nil && !IsNil(o.PositionTransactionId) {
		return true
	}

	return false
}

// SetPositionTransactionId gets a reference to the given string and assigns it to the PositionTransactionId field.
func (o *OrderFillTransaction) SetPositionTransactionId(v string) {
	o.PositionTransactionId = &v
}

// GetCollateralTransactionId returns the CollateralTransactionId field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetCollateralTransactionId() string {
	if o == nil || IsNil(o.CollateralTransactionId) {
		var ret string
		return ret
	}
	return *o.CollateralTransactionId
}

// GetCollateralTransactionIdOk returns a tuple with the CollateralTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetCollateralTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.CollateralTransactionId) {
		return nil, false
	}
	return o.CollateralTransactionId, true
}

// HasCollateralTransactionId returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasCollateralTransactionId() bool {
	if o != nil && !IsNil(o.CollateralTransactionId) {
		return true
	}

	return false
}

// SetCollateralTransactionId gets a reference to the given string and assigns it to the CollateralTransactionId field.
func (o *OrderFillTransaction) SetCollateralTransactionId(v string) {
	o.CollateralTransactionId = &v
}

// GetExtraType returns the ExtraType field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetExtraType() string {
	if o == nil || IsNil(o.ExtraType) {
		var ret string
		return ret
	}
	return *o.ExtraType
}

// GetExtraTypeOk returns a tuple with the ExtraType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetExtraTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraType) {
		return nil, false
	}
	return o.ExtraType, true
}

// HasExtraType returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasExtraType() bool {
	if o != nil && !IsNil(o.ExtraType) {
		return true
	}

	return false
}

// SetExtraType gets a reference to the given string and assigns it to the ExtraType field.
func (o *OrderFillTransaction) SetExtraType(v string) {
	o.ExtraType = &v
}

// GetExtraDataJson returns the ExtraDataJson field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetExtraDataJson() string {
	if o == nil || IsNil(o.ExtraDataJson) {
		var ret string
		return ret
	}
	return *o.ExtraDataJson
}

// GetExtraDataJsonOk returns a tuple with the ExtraDataJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetExtraDataJsonOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraDataJson) {
		return nil, false
	}
	return o.ExtraDataJson, true
}

// HasExtraDataJson returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasExtraDataJson() bool {
	if o != nil && !IsNil(o.ExtraDataJson) {
		return true
	}

	return false
}

// SetExtraDataJson gets a reference to the given string and assigns it to the ExtraDataJson field.
func (o *OrderFillTransaction) SetExtraDataJson(v string) {
	o.ExtraDataJson = &v
}

// GetCensorStatus returns the CensorStatus field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetCensorStatus() string {
	if o == nil || IsNil(o.CensorStatus) {
		var ret string
		return ret
	}
	return *o.CensorStatus
}

// GetCensorStatusOk returns a tuple with the CensorStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetCensorStatusOk() (*string, bool) {
	if o == nil || IsNil(o.CensorStatus) {
		return nil, false
	}
	return o.CensorStatus, true
}

// HasCensorStatus returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasCensorStatus() bool {
	if o != nil && !IsNil(o.CensorStatus) {
		return true
	}

	return false
}

// SetCensorStatus gets a reference to the given string and assigns it to the CensorStatus field.
func (o *OrderFillTransaction) SetCensorStatus(v string) {
	o.CensorStatus = &v
}

// GetCensorTxId returns the CensorTxId field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetCensorTxId() string {
	if o == nil || IsNil(o.CensorTxId) {
		var ret string
		return ret
	}
	return *o.CensorTxId
}

// GetCensorTxIdOk returns a tuple with the CensorTxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetCensorTxIdOk() (*string, bool) {
	if o == nil || IsNil(o.CensorTxId) {
		return nil, false
	}
	return o.CensorTxId, true
}

// HasCensorTxId returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasCensorTxId() bool {
	if o != nil && !IsNil(o.CensorTxId) {
		return true
	}

	return false
}

// SetCensorTxId gets a reference to the given string and assigns it to the CensorTxId field.
func (o *OrderFillTransaction) SetCensorTxId(v string) {
	o.CensorTxId = &v
}

// GetCensorTime returns the CensorTime field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetCensorTime() string {
	if o == nil || IsNil(o.CensorTime) {
		var ret string
		return ret
	}
	return *o.CensorTime
}

// GetCensorTimeOk returns a tuple with the CensorTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetCensorTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CensorTime) {
		return nil, false
	}
	return o.CensorTime, true
}

// HasCensorTime returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasCensorTime() bool {
	if o != nil && !IsNil(o.CensorTime) {
		return true
	}

	return false
}

// SetCensorTime gets a reference to the given string and assigns it to the CensorTime field.
func (o *OrderFillTransaction) SetCensorTime(v string) {
	o.CensorTime = &v
}

// GetCensorFailCode returns the CensorFailCode field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetCensorFailCode() string {
	if o == nil || IsNil(o.CensorFailCode) {
		var ret string
		return ret
	}
	return *o.CensorFailCode
}

// GetCensorFailCodeOk returns a tuple with the CensorFailCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetCensorFailCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CensorFailCode) {
		return nil, false
	}
	return o.CensorFailCode, true
}

// HasCensorFailCode returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasCensorFailCode() bool {
	if o != nil && !IsNil(o.CensorFailCode) {
		return true
	}

	return false
}

// SetCensorFailCode gets a reference to the given string and assigns it to the CensorFailCode field.
func (o *OrderFillTransaction) SetCensorFailCode(v string) {
	o.CensorFailCode = &v
}

// GetCensorFailReason returns the CensorFailReason field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetCensorFailReason() string {
	if o == nil || IsNil(o.CensorFailReason) {
		var ret string
		return ret
	}
	return *o.CensorFailReason
}

// GetCensorFailReasonOk returns a tuple with the CensorFailReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetCensorFailReasonOk() (*string, bool) {
	if o == nil || IsNil(o.CensorFailReason) {
		return nil, false
	}
	return o.CensorFailReason, true
}

// HasCensorFailReason returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasCensorFailReason() bool {
	if o != nil && !IsNil(o.CensorFailReason) {
		return true
	}

	return false
}

// SetCensorFailReason gets a reference to the given string and assigns it to the CensorFailReason field.
func (o *OrderFillTransaction) SetCensorFailReason(v string) {
	o.CensorFailReason = &v
}

// GetL2TxId returns the L2TxId field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetL2TxId() string {
	if o == nil || IsNil(o.L2TxId) {
		var ret string
		return ret
	}
	return *o.L2TxId
}

// GetL2TxIdOk returns a tuple with the L2TxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetL2TxIdOk() (*string, bool) {
	if o == nil || IsNil(o.L2TxId) {
		return nil, false
	}
	return o.L2TxId, true
}

// HasL2TxId returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasL2TxId() bool {
	if o != nil && !IsNil(o.L2TxId) {
		return true
	}

	return false
}

// SetL2TxId gets a reference to the given string and assigns it to the L2TxId field.
func (o *OrderFillTransaction) SetL2TxId(v string) {
	o.L2TxId = &v
}

// GetL2RejectTime returns the L2RejectTime field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetL2RejectTime() string {
	if o == nil || IsNil(o.L2RejectTime) {
		var ret string
		return ret
	}
	return *o.L2RejectTime
}

// GetL2RejectTimeOk returns a tuple with the L2RejectTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetL2RejectTimeOk() (*string, bool) {
	if o == nil || IsNil(o.L2RejectTime) {
		return nil, false
	}
	return o.L2RejectTime, true
}

// HasL2RejectTime returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasL2RejectTime() bool {
	if o != nil && !IsNil(o.L2RejectTime) {
		return true
	}

	return false
}

// SetL2RejectTime gets a reference to the given string and assigns it to the L2RejectTime field.
func (o *OrderFillTransaction) SetL2RejectTime(v string) {
	o.L2RejectTime = &v
}

// GetL2RejectCode returns the L2RejectCode field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetL2RejectCode() string {
	if o == nil || IsNil(o.L2RejectCode) {
		var ret string
		return ret
	}
	return *o.L2RejectCode
}

// GetL2RejectCodeOk returns a tuple with the L2RejectCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetL2RejectCodeOk() (*string, bool) {
	if o == nil || IsNil(o.L2RejectCode) {
		return nil, false
	}
	return o.L2RejectCode, true
}

// HasL2RejectCode returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasL2RejectCode() bool {
	if o != nil && !IsNil(o.L2RejectCode) {
		return true
	}

	return false
}

// SetL2RejectCode gets a reference to the given string and assigns it to the L2RejectCode field.
func (o *OrderFillTransaction) SetL2RejectCode(v string) {
	o.L2RejectCode = &v
}

// GetL2RejectReason returns the L2RejectReason field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetL2RejectReason() string {
	if o == nil || IsNil(o.L2RejectReason) {
		var ret string
		return ret
	}
	return *o.L2RejectReason
}

// GetL2RejectReasonOk returns a tuple with the L2RejectReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetL2RejectReasonOk() (*string, bool) {
	if o == nil || IsNil(o.L2RejectReason) {
		return nil, false
	}
	return o.L2RejectReason, true
}

// HasL2RejectReason returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasL2RejectReason() bool {
	if o != nil && !IsNil(o.L2RejectReason) {
		return true
	}

	return false
}

// SetL2RejectReason gets a reference to the given string and assigns it to the L2RejectReason field.
func (o *OrderFillTransaction) SetL2RejectReason(v string) {
	o.L2RejectReason = &v
}

// GetL2ApprovedTime returns the L2ApprovedTime field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetL2ApprovedTime() string {
	if o == nil || IsNil(o.L2ApprovedTime) {
		var ret string
		return ret
	}
	return *o.L2ApprovedTime
}

// GetL2ApprovedTimeOk returns a tuple with the L2ApprovedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetL2ApprovedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.L2ApprovedTime) {
		return nil, false
	}
	return o.L2ApprovedTime, true
}

// HasL2ApprovedTime returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasL2ApprovedTime() bool {
	if o != nil && !IsNil(o.L2ApprovedTime) {
		return true
	}

	return false
}

// SetL2ApprovedTime gets a reference to the given string and assigns it to the L2ApprovedTime field.
func (o *OrderFillTransaction) SetL2ApprovedTime(v string) {
	o.L2ApprovedTime = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetCreatedTime() string {
	if o == nil || IsNil(o.CreatedTime) {
		var ret string
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetCreatedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given string and assigns it to the CreatedTime field.
func (o *OrderFillTransaction) SetCreatedTime(v string) {
	o.CreatedTime = &v
}

// GetUpdatedTime returns the UpdatedTime field value if set, zero value otherwise.
func (o *OrderFillTransaction) GetUpdatedTime() string {
	if o == nil || IsNil(o.UpdatedTime) {
		var ret string
		return ret
	}
	return *o.UpdatedTime
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFillTransaction) GetUpdatedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedTime) {
		return nil, false
	}
	return o.UpdatedTime, true
}

// HasUpdatedTime returns a boolean if a field has been set.
func (o *OrderFillTransaction) HasUpdatedTime() bool {
	if o != nil && !IsNil(o.UpdatedTime) {
		return true
	}

	return false
}

// SetUpdatedTime gets a reference to the given string and assigns it to the UpdatedTime field.
func (o *OrderFillTransaction) SetUpdatedTime(v string) {
	o.UpdatedTime = &v
}

func (o OrderFillTransaction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderFillTransaction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.CoinId) {
		toSerialize["coinId"] = o.CoinId
	}
	if !IsNil(o.ContractId) {
		toSerialize["contractId"] = o.ContractId
	}
	if !IsNil(o.OrderId) {
		toSerialize["orderId"] = o.OrderId
	}
	if !IsNil(o.OrderSide) {
		toSerialize["orderSide"] = o.OrderSide
	}
	if !IsNil(o.FillSize) {
		toSerialize["fillSize"] = o.FillSize
	}
	if !IsNil(o.FillValue) {
		toSerialize["fillValue"] = o.FillValue
	}
	if !IsNil(o.FillFee) {
		toSerialize["fillFee"] = o.FillFee
	}
	if !IsNil(o.FillPrice) {
		toSerialize["fillPrice"] = o.FillPrice
	}
	if !IsNil(o.LiquidateFee) {
		toSerialize["liquidateFee"] = o.LiquidateFee
	}
	if !IsNil(o.RealizePnl) {
		toSerialize["realizePnl"] = o.RealizePnl
	}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	if !IsNil(o.IsPositionTpsl) {
		toSerialize["isPositionTpsl"] = o.IsPositionTpsl
	}
	if !IsNil(o.IsLiquidate) {
		toSerialize["isLiquidate"] = o.IsLiquidate
	}
	if !IsNil(o.IsDeleverage) {
		toSerialize["isDeleverage"] = o.IsDeleverage
	}
	if !IsNil(o.IsWithoutMatch) {
		toSerialize["isWithoutMatch"] = o.IsWithoutMatch
	}
	if !IsNil(o.MatchSequenceId) {
		toSerialize["matchSequenceId"] = o.MatchSequenceId
	}
	if !IsNil(o.MatchIndex) {
		toSerialize["matchIndex"] = o.MatchIndex
	}
	if !IsNil(o.MatchTime) {
		toSerialize["matchTime"] = o.MatchTime
	}
	if !IsNil(o.MatchAccountId) {
		toSerialize["matchAccountId"] = o.MatchAccountId
	}
	if !IsNil(o.MatchOrderId) {
		toSerialize["matchOrderId"] = o.MatchOrderId
	}
	if !IsNil(o.MatchFillId) {
		toSerialize["matchFillId"] = o.MatchFillId
	}
	if !IsNil(o.PositionTransactionId) {
		toSerialize["positionTransactionId"] = o.PositionTransactionId
	}
	if !IsNil(o.CollateralTransactionId) {
		toSerialize["collateralTransactionId"] = o.CollateralTransactionId
	}
	if !IsNil(o.ExtraType) {
		toSerialize["extraType"] = o.ExtraType
	}
	if !IsNil(o.ExtraDataJson) {
		toSerialize["extraDataJson"] = o.ExtraDataJson
	}
	if !IsNil(o.CensorStatus) {
		toSerialize["censorStatus"] = o.CensorStatus
	}
	if !IsNil(o.CensorTxId) {
		toSerialize["censorTxId"] = o.CensorTxId
	}
	if !IsNil(o.CensorTime) {
		toSerialize["censorTime"] = o.CensorTime
	}
	if !IsNil(o.CensorFailCode) {
		toSerialize["censorFailCode"] = o.CensorFailCode
	}
	if !IsNil(o.CensorFailReason) {
		toSerialize["censorFailReason"] = o.CensorFailReason
	}
	if !IsNil(o.L2TxId) {
		toSerialize["l2TxId"] = o.L2TxId
	}
	if !IsNil(o.L2RejectTime) {
		toSerialize["l2RejectTime"] = o.L2RejectTime
	}
	if !IsNil(o.L2RejectCode) {
		toSerialize["l2RejectCode"] = o.L2RejectCode
	}
	if !IsNil(o.L2RejectReason) {
		toSerialize["l2RejectReason"] = o.L2RejectReason
	}
	if !IsNil(o.L2ApprovedTime) {
		toSerialize["l2ApprovedTime"] = o.L2ApprovedTime
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["createdTime"] = o.CreatedTime
	}
	if !IsNil(o.UpdatedTime) {
		toSerialize["updatedTime"] = o.UpdatedTime
	}
	return toSerialize, nil
}

type NullableOrderFillTransaction struct {
	value *OrderFillTransaction
	isSet bool
}

func (v NullableOrderFillTransaction) Get() *OrderFillTransaction {
	return v.value
}

func (v *NullableOrderFillTransaction) Set(val *OrderFillTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderFillTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderFillTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderFillTransaction(val *OrderFillTransaction) *NullableOrderFillTransaction {
	return &NullableOrderFillTransaction{value: val, isSet: true}
}

func (v NullableOrderFillTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderFillTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


