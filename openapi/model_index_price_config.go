/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IndexPriceConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndexPriceConfig{}

// IndexPriceConfig 指数价格配置信息
type IndexPriceConfig struct {
	// 合约id
	ContractId *string `json:"contractId,omitempty"`
	// 指数价格配置项
	IndexPriceExchangeInfoList []IndexPriceExchangeInfo `json:"indexPriceExchangeInfoList,omitempty"`
}

// NewIndexPriceConfig instantiates a new IndexPriceConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndexPriceConfig() *IndexPriceConfig {
	this := IndexPriceConfig{}
	return &this
}

// NewIndexPriceConfigWithDefaults instantiates a new IndexPriceConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndexPriceConfigWithDefaults() *IndexPriceConfig {
	this := IndexPriceConfig{}
	return &this
}

// GetContractId returns the ContractId field value if set, zero value otherwise.
func (o *IndexPriceConfig) GetContractId() string {
	if o == nil || IsNil(o.ContractId) {
		var ret string
		return ret
	}
	return *o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexPriceConfig) GetContractIdOk() (*string, bool) {
	if o == nil || IsNil(o.ContractId) {
		return nil, false
	}
	return o.ContractId, true
}

// HasContractId returns a boolean if a field has been set.
func (o *IndexPriceConfig) HasContractId() bool {
	if o != nil && !IsNil(o.ContractId) {
		return true
	}

	return false
}

// SetContractId gets a reference to the given string and assigns it to the ContractId field.
func (o *IndexPriceConfig) SetContractId(v string) {
	o.ContractId = &v
}

// GetIndexPriceExchangeInfoList returns the IndexPriceExchangeInfoList field value if set, zero value otherwise.
func (o *IndexPriceConfig) GetIndexPriceExchangeInfoList() []IndexPriceExchangeInfo {
	if o == nil || IsNil(o.IndexPriceExchangeInfoList) {
		var ret []IndexPriceExchangeInfo
		return ret
	}
	return o.IndexPriceExchangeInfoList
}

// GetIndexPriceExchangeInfoListOk returns a tuple with the IndexPriceExchangeInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexPriceConfig) GetIndexPriceExchangeInfoListOk() ([]IndexPriceExchangeInfo, bool) {
	if o == nil || IsNil(o.IndexPriceExchangeInfoList) {
		return nil, false
	}
	return o.IndexPriceExchangeInfoList, true
}

// HasIndexPriceExchangeInfoList returns a boolean if a field has been set.
func (o *IndexPriceConfig) HasIndexPriceExchangeInfoList() bool {
	if o != nil && !IsNil(o.IndexPriceExchangeInfoList) {
		return true
	}

	return false
}

// SetIndexPriceExchangeInfoList gets a reference to the given []IndexPriceExchangeInfo and assigns it to the IndexPriceExchangeInfoList field.
func (o *IndexPriceConfig) SetIndexPriceExchangeInfoList(v []IndexPriceExchangeInfo) {
	o.IndexPriceExchangeInfoList = v
}

func (o IndexPriceConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndexPriceConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContractId) {
		toSerialize["contractId"] = o.ContractId
	}
	if !IsNil(o.IndexPriceExchangeInfoList) {
		toSerialize["indexPriceExchangeInfoList"] = o.IndexPriceExchangeInfoList
	}
	return toSerialize, nil
}

type NullableIndexPriceConfig struct {
	value *IndexPriceConfig
	isSet bool
}

func (v NullableIndexPriceConfig) Get() *IndexPriceConfig {
	return v.value
}

func (v *NullableIndexPriceConfig) Set(val *IndexPriceConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableIndexPriceConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableIndexPriceConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndexPriceConfig(val *IndexPriceConfig) *NullableIndexPriceConfig {
	return &NullableIndexPriceConfig{value: val, isSet: true}
}

func (v NullableIndexPriceConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndexPriceConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


