/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NotifyTxRejectResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotifyTxRejectResult{}

// NotifyTxRejectResult 通知交易被拒绝结果
type NotifyTxRejectResult struct {
	// 替换交易列表
	AltTxs []map[string]interface{} `json:"alt_txs,omitempty"`
}

// NewNotifyTxRejectResult instantiates a new NotifyTxRejectResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotifyTxRejectResult() *NotifyTxRejectResult {
	this := NotifyTxRejectResult{}
	return &this
}

// NewNotifyTxRejectResultWithDefaults instantiates a new NotifyTxRejectResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotifyTxRejectResultWithDefaults() *NotifyTxRejectResult {
	this := NotifyTxRejectResult{}
	return &this
}

// GetAltTxs returns the AltTxs field value if set, zero value otherwise.
func (o *NotifyTxRejectResult) GetAltTxs() []map[string]interface{} {
	if o == nil || IsNil(o.AltTxs) {
		var ret []map[string]interface{}
		return ret
	}
	return o.AltTxs
}

// GetAltTxsOk returns a tuple with the AltTxs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotifyTxRejectResult) GetAltTxsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.AltTxs) {
		return nil, false
	}
	return o.AltTxs, true
}

// HasAltTxs returns a boolean if a field has been set.
func (o *NotifyTxRejectResult) HasAltTxs() bool {
	if o != nil && !IsNil(o.AltTxs) {
		return true
	}

	return false
}

// SetAltTxs gets a reference to the given []map[string]interface{} and assigns it to the AltTxs field.
func (o *NotifyTxRejectResult) SetAltTxs(v []map[string]interface{}) {
	o.AltTxs = v
}

func (o NotifyTxRejectResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotifyTxRejectResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AltTxs) {
		toSerialize["alt_txs"] = o.AltTxs
	}
	return toSerialize, nil
}

type NullableNotifyTxRejectResult struct {
	value *NotifyTxRejectResult
	isSet bool
}

func (v NullableNotifyTxRejectResult) Get() *NotifyTxRejectResult {
	return v.value
}

func (v *NullableNotifyTxRejectResult) Set(val *NotifyTxRejectResult) {
	v.value = val
	v.isSet = true
}

func (v NullableNotifyTxRejectResult) IsSet() bool {
	return v.isSet
}

func (v *NullableNotifyTxRejectResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotifyTxRejectResult(val *NotifyTxRejectResult) *NullableNotifyTxRejectResult {
	return &NullableNotifyTxRejectResult{value: val, isSet: true}
}

func (v NullableNotifyTxRejectResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotifyTxRejectResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


