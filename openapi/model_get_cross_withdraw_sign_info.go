/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetCrossWithdrawSignInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCrossWithdrawSignInfo{}

// GetCrossWithdrawSignInfo 查询跨链提现签名需要的信息-响应
type GetCrossWithdrawSignInfo struct {
	// l2接收用户转账的lp账户id
	LpAccountId *string `json:"lpAccountId,omitempty"`
	// 快速提现账户l2Key
	CrossWithdrawL2Key *string `json:"crossWithdrawL2Key,omitempty"`
	// 快速跨链最大额度
	CrossWithdrawMaxAmount *string `json:"crossWithdrawMaxAmount,omitempty"`
	// 手续费
	Fee *string `json:"fee,omitempty"`
}

// NewGetCrossWithdrawSignInfo instantiates a new GetCrossWithdrawSignInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCrossWithdrawSignInfo() *GetCrossWithdrawSignInfo {
	this := GetCrossWithdrawSignInfo{}
	return &this
}

// NewGetCrossWithdrawSignInfoWithDefaults instantiates a new GetCrossWithdrawSignInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCrossWithdrawSignInfoWithDefaults() *GetCrossWithdrawSignInfo {
	this := GetCrossWithdrawSignInfo{}
	return &this
}

// GetLpAccountId returns the LpAccountId field value if set, zero value otherwise.
func (o *GetCrossWithdrawSignInfo) GetLpAccountId() string {
	if o == nil || IsNil(o.LpAccountId) {
		var ret string
		return ret
	}
	return *o.LpAccountId
}

// GetLpAccountIdOk returns a tuple with the LpAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCrossWithdrawSignInfo) GetLpAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.LpAccountId) {
		return nil, false
	}
	return o.LpAccountId, true
}

// HasLpAccountId returns a boolean if a field has been set.
func (o *GetCrossWithdrawSignInfo) HasLpAccountId() bool {
	if o != nil && !IsNil(o.LpAccountId) {
		return true
	}

	return false
}

// SetLpAccountId gets a reference to the given string and assigns it to the LpAccountId field.
func (o *GetCrossWithdrawSignInfo) SetLpAccountId(v string) {
	o.LpAccountId = &v
}

// GetCrossWithdrawL2Key returns the CrossWithdrawL2Key field value if set, zero value otherwise.
func (o *GetCrossWithdrawSignInfo) GetCrossWithdrawL2Key() string {
	if o == nil || IsNil(o.CrossWithdrawL2Key) {
		var ret string
		return ret
	}
	return *o.CrossWithdrawL2Key
}

// GetCrossWithdrawL2KeyOk returns a tuple with the CrossWithdrawL2Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCrossWithdrawSignInfo) GetCrossWithdrawL2KeyOk() (*string, bool) {
	if o == nil || IsNil(o.CrossWithdrawL2Key) {
		return nil, false
	}
	return o.CrossWithdrawL2Key, true
}

// HasCrossWithdrawL2Key returns a boolean if a field has been set.
func (o *GetCrossWithdrawSignInfo) HasCrossWithdrawL2Key() bool {
	if o != nil && !IsNil(o.CrossWithdrawL2Key) {
		return true
	}

	return false
}

// SetCrossWithdrawL2Key gets a reference to the given string and assigns it to the CrossWithdrawL2Key field.
func (o *GetCrossWithdrawSignInfo) SetCrossWithdrawL2Key(v string) {
	o.CrossWithdrawL2Key = &v
}

// GetCrossWithdrawMaxAmount returns the CrossWithdrawMaxAmount field value if set, zero value otherwise.
func (o *GetCrossWithdrawSignInfo) GetCrossWithdrawMaxAmount() string {
	if o == nil || IsNil(o.CrossWithdrawMaxAmount) {
		var ret string
		return ret
	}
	return *o.CrossWithdrawMaxAmount
}

// GetCrossWithdrawMaxAmountOk returns a tuple with the CrossWithdrawMaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCrossWithdrawSignInfo) GetCrossWithdrawMaxAmountOk() (*string, bool) {
	if o == nil || IsNil(o.CrossWithdrawMaxAmount) {
		return nil, false
	}
	return o.CrossWithdrawMaxAmount, true
}

// HasCrossWithdrawMaxAmount returns a boolean if a field has been set.
func (o *GetCrossWithdrawSignInfo) HasCrossWithdrawMaxAmount() bool {
	if o != nil && !IsNil(o.CrossWithdrawMaxAmount) {
		return true
	}

	return false
}

// SetCrossWithdrawMaxAmount gets a reference to the given string and assigns it to the CrossWithdrawMaxAmount field.
func (o *GetCrossWithdrawSignInfo) SetCrossWithdrawMaxAmount(v string) {
	o.CrossWithdrawMaxAmount = &v
}

// GetFee returns the Fee field value if set, zero value otherwise.
func (o *GetCrossWithdrawSignInfo) GetFee() string {
	if o == nil || IsNil(o.Fee) {
		var ret string
		return ret
	}
	return *o.Fee
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCrossWithdrawSignInfo) GetFeeOk() (*string, bool) {
	if o == nil || IsNil(o.Fee) {
		return nil, false
	}
	return o.Fee, true
}

// HasFee returns a boolean if a field has been set.
func (o *GetCrossWithdrawSignInfo) HasFee() bool {
	if o != nil && !IsNil(o.Fee) {
		return true
	}

	return false
}

// SetFee gets a reference to the given string and assigns it to the Fee field.
func (o *GetCrossWithdrawSignInfo) SetFee(v string) {
	o.Fee = &v
}

func (o GetCrossWithdrawSignInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCrossWithdrawSignInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LpAccountId) {
		toSerialize["lpAccountId"] = o.LpAccountId
	}
	if !IsNil(o.CrossWithdrawL2Key) {
		toSerialize["crossWithdrawL2Key"] = o.CrossWithdrawL2Key
	}
	if !IsNil(o.CrossWithdrawMaxAmount) {
		toSerialize["crossWithdrawMaxAmount"] = o.CrossWithdrawMaxAmount
	}
	if !IsNil(o.Fee) {
		toSerialize["fee"] = o.Fee
	}
	return toSerialize, nil
}

type NullableGetCrossWithdrawSignInfo struct {
	value *GetCrossWithdrawSignInfo
	isSet bool
}

func (v NullableGetCrossWithdrawSignInfo) Get() *GetCrossWithdrawSignInfo {
	return v.value
}

func (v *NullableGetCrossWithdrawSignInfo) Set(val *GetCrossWithdrawSignInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCrossWithdrawSignInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCrossWithdrawSignInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCrossWithdrawSignInfo(val *GetCrossWithdrawSignInfo) *NullableGetCrossWithdrawSignInfo {
	return &NullableGetCrossWithdrawSignInfo{value: val, isSet: true}
}

func (v NullableGetCrossWithdrawSignInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCrossWithdrawSignInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


