/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CollateralAsset type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CollateralAsset{}

// CollateralAsset 抵押品资产信息
type CollateralAsset struct {
	// 所属用户id
	UserId *string `json:"userId,omitempty"`
	// 所属账户id
	AccountId *string `json:"accountId,omitempty"`
	// 所属抵押品币种id
	CoinId *string `json:"coinId,omitempty"`
	// 当前抵押品下的总价值
	TotalEquity *string `json:"totalEquity,omitempty"`
	// 当前抵押品对应的仓位价值绝对值之和
	TotalPositionValueAbs *string `json:"totalPositionValueAbs,omitempty"`
	// 当前抵押品下的初始保证金
	InitialMarginRequirement *string `json:"initialMarginRequirement,omitempty"`
	// 当前抵押品下的总 starkEx 风险金额
	StarkExRiskValue *string `json:"starkExRiskValue,omitempty"`
	// 当前抵押品处理中的提现金额
	PendingWithdrawAmount *string `json:"pendingWithdrawAmount,omitempty"`
	// 当前抵押品处理中的转出金额
	PendingTransferOutAmount *string `json:"pendingTransferOutAmount,omitempty"`
	// 当前抵押品所属委托单冻结金额
	OrderFrozenAmount *string `json:"orderFrozenAmount,omitempty"`
	// 当前抵押品可用金额
	AvailableAmount *string `json:"availableAmount,omitempty"`
}

// NewCollateralAsset instantiates a new CollateralAsset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollateralAsset() *CollateralAsset {
	this := CollateralAsset{}
	return &this
}

// NewCollateralAssetWithDefaults instantiates a new CollateralAsset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollateralAssetWithDefaults() *CollateralAsset {
	this := CollateralAsset{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *CollateralAsset) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralAsset) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *CollateralAsset) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *CollateralAsset) SetUserId(v string) {
	o.UserId = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *CollateralAsset) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralAsset) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *CollateralAsset) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *CollateralAsset) SetAccountId(v string) {
	o.AccountId = &v
}

// GetCoinId returns the CoinId field value if set, zero value otherwise.
func (o *CollateralAsset) GetCoinId() string {
	if o == nil || IsNil(o.CoinId) {
		var ret string
		return ret
	}
	return *o.CoinId
}

// GetCoinIdOk returns a tuple with the CoinId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralAsset) GetCoinIdOk() (*string, bool) {
	if o == nil || IsNil(o.CoinId) {
		return nil, false
	}
	return o.CoinId, true
}

// HasCoinId returns a boolean if a field has been set.
func (o *CollateralAsset) HasCoinId() bool {
	if o != nil && !IsNil(o.CoinId) {
		return true
	}

	return false
}

// SetCoinId gets a reference to the given string and assigns it to the CoinId field.
func (o *CollateralAsset) SetCoinId(v string) {
	o.CoinId = &v
}

// GetTotalEquity returns the TotalEquity field value if set, zero value otherwise.
func (o *CollateralAsset) GetTotalEquity() string {
	if o == nil || IsNil(o.TotalEquity) {
		var ret string
		return ret
	}
	return *o.TotalEquity
}

// GetTotalEquityOk returns a tuple with the TotalEquity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralAsset) GetTotalEquityOk() (*string, bool) {
	if o == nil || IsNil(o.TotalEquity) {
		return nil, false
	}
	return o.TotalEquity, true
}

// HasTotalEquity returns a boolean if a field has been set.
func (o *CollateralAsset) HasTotalEquity() bool {
	if o != nil && !IsNil(o.TotalEquity) {
		return true
	}

	return false
}

// SetTotalEquity gets a reference to the given string and assigns it to the TotalEquity field.
func (o *CollateralAsset) SetTotalEquity(v string) {
	o.TotalEquity = &v
}

// GetTotalPositionValueAbs returns the TotalPositionValueAbs field value if set, zero value otherwise.
func (o *CollateralAsset) GetTotalPositionValueAbs() string {
	if o == nil || IsNil(o.TotalPositionValueAbs) {
		var ret string
		return ret
	}
	return *o.TotalPositionValueAbs
}

// GetTotalPositionValueAbsOk returns a tuple with the TotalPositionValueAbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralAsset) GetTotalPositionValueAbsOk() (*string, bool) {
	if o == nil || IsNil(o.TotalPositionValueAbs) {
		return nil, false
	}
	return o.TotalPositionValueAbs, true
}

// HasTotalPositionValueAbs returns a boolean if a field has been set.
func (o *CollateralAsset) HasTotalPositionValueAbs() bool {
	if o != nil && !IsNil(o.TotalPositionValueAbs) {
		return true
	}

	return false
}

// SetTotalPositionValueAbs gets a reference to the given string and assigns it to the TotalPositionValueAbs field.
func (o *CollateralAsset) SetTotalPositionValueAbs(v string) {
	o.TotalPositionValueAbs = &v
}

// GetInitialMarginRequirement returns the InitialMarginRequirement field value if set, zero value otherwise.
func (o *CollateralAsset) GetInitialMarginRequirement() string {
	if o == nil || IsNil(o.InitialMarginRequirement) {
		var ret string
		return ret
	}
	return *o.InitialMarginRequirement
}

// GetInitialMarginRequirementOk returns a tuple with the InitialMarginRequirement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralAsset) GetInitialMarginRequirementOk() (*string, bool) {
	if o == nil || IsNil(o.InitialMarginRequirement) {
		return nil, false
	}
	return o.InitialMarginRequirement, true
}

// HasInitialMarginRequirement returns a boolean if a field has been set.
func (o *CollateralAsset) HasInitialMarginRequirement() bool {
	if o != nil && !IsNil(o.InitialMarginRequirement) {
		return true
	}

	return false
}

// SetInitialMarginRequirement gets a reference to the given string and assigns it to the InitialMarginRequirement field.
func (o *CollateralAsset) SetInitialMarginRequirement(v string) {
	o.InitialMarginRequirement = &v
}

// GetStarkExRiskValue returns the StarkExRiskValue field value if set, zero value otherwise.
func (o *CollateralAsset) GetStarkExRiskValue() string {
	if o == nil || IsNil(o.StarkExRiskValue) {
		var ret string
		return ret
	}
	return *o.StarkExRiskValue
}

// GetStarkExRiskValueOk returns a tuple with the StarkExRiskValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralAsset) GetStarkExRiskValueOk() (*string, bool) {
	if o == nil || IsNil(o.StarkExRiskValue) {
		return nil, false
	}
	return o.StarkExRiskValue, true
}

// HasStarkExRiskValue returns a boolean if a field has been set.
func (o *CollateralAsset) HasStarkExRiskValue() bool {
	if o != nil && !IsNil(o.StarkExRiskValue) {
		return true
	}

	return false
}

// SetStarkExRiskValue gets a reference to the given string and assigns it to the StarkExRiskValue field.
func (o *CollateralAsset) SetStarkExRiskValue(v string) {
	o.StarkExRiskValue = &v
}

// GetPendingWithdrawAmount returns the PendingWithdrawAmount field value if set, zero value otherwise.
func (o *CollateralAsset) GetPendingWithdrawAmount() string {
	if o == nil || IsNil(o.PendingWithdrawAmount) {
		var ret string
		return ret
	}
	return *o.PendingWithdrawAmount
}

// GetPendingWithdrawAmountOk returns a tuple with the PendingWithdrawAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralAsset) GetPendingWithdrawAmountOk() (*string, bool) {
	if o == nil || IsNil(o.PendingWithdrawAmount) {
		return nil, false
	}
	return o.PendingWithdrawAmount, true
}

// HasPendingWithdrawAmount returns a boolean if a field has been set.
func (o *CollateralAsset) HasPendingWithdrawAmount() bool {
	if o != nil && !IsNil(o.PendingWithdrawAmount) {
		return true
	}

	return false
}

// SetPendingWithdrawAmount gets a reference to the given string and assigns it to the PendingWithdrawAmount field.
func (o *CollateralAsset) SetPendingWithdrawAmount(v string) {
	o.PendingWithdrawAmount = &v
}

// GetPendingTransferOutAmount returns the PendingTransferOutAmount field value if set, zero value otherwise.
func (o *CollateralAsset) GetPendingTransferOutAmount() string {
	if o == nil || IsNil(o.PendingTransferOutAmount) {
		var ret string
		return ret
	}
	return *o.PendingTransferOutAmount
}

// GetPendingTransferOutAmountOk returns a tuple with the PendingTransferOutAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralAsset) GetPendingTransferOutAmountOk() (*string, bool) {
	if o == nil || IsNil(o.PendingTransferOutAmount) {
		return nil, false
	}
	return o.PendingTransferOutAmount, true
}

// HasPendingTransferOutAmount returns a boolean if a field has been set.
func (o *CollateralAsset) HasPendingTransferOutAmount() bool {
	if o != nil && !IsNil(o.PendingTransferOutAmount) {
		return true
	}

	return false
}

// SetPendingTransferOutAmount gets a reference to the given string and assigns it to the PendingTransferOutAmount field.
func (o *CollateralAsset) SetPendingTransferOutAmount(v string) {
	o.PendingTransferOutAmount = &v
}

// GetOrderFrozenAmount returns the OrderFrozenAmount field value if set, zero value otherwise.
func (o *CollateralAsset) GetOrderFrozenAmount() string {
	if o == nil || IsNil(o.OrderFrozenAmount) {
		var ret string
		return ret
	}
	return *o.OrderFrozenAmount
}

// GetOrderFrozenAmountOk returns a tuple with the OrderFrozenAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralAsset) GetOrderFrozenAmountOk() (*string, bool) {
	if o == nil || IsNil(o.OrderFrozenAmount) {
		return nil, false
	}
	return o.OrderFrozenAmount, true
}

// HasOrderFrozenAmount returns a boolean if a field has been set.
func (o *CollateralAsset) HasOrderFrozenAmount() bool {
	if o != nil && !IsNil(o.OrderFrozenAmount) {
		return true
	}

	return false
}

// SetOrderFrozenAmount gets a reference to the given string and assigns it to the OrderFrozenAmount field.
func (o *CollateralAsset) SetOrderFrozenAmount(v string) {
	o.OrderFrozenAmount = &v
}

// GetAvailableAmount returns the AvailableAmount field value if set, zero value otherwise.
func (o *CollateralAsset) GetAvailableAmount() string {
	if o == nil || IsNil(o.AvailableAmount) {
		var ret string
		return ret
	}
	return *o.AvailableAmount
}

// GetAvailableAmountOk returns a tuple with the AvailableAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralAsset) GetAvailableAmountOk() (*string, bool) {
	if o == nil || IsNil(o.AvailableAmount) {
		return nil, false
	}
	return o.AvailableAmount, true
}

// HasAvailableAmount returns a boolean if a field has been set.
func (o *CollateralAsset) HasAvailableAmount() bool {
	if o != nil && !IsNil(o.AvailableAmount) {
		return true
	}

	return false
}

// SetAvailableAmount gets a reference to the given string and assigns it to the AvailableAmount field.
func (o *CollateralAsset) SetAvailableAmount(v string) {
	o.AvailableAmount = &v
}

func (o CollateralAsset) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CollateralAsset) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.CoinId) {
		toSerialize["coinId"] = o.CoinId
	}
	if !IsNil(o.TotalEquity) {
		toSerialize["totalEquity"] = o.TotalEquity
	}
	if !IsNil(o.TotalPositionValueAbs) {
		toSerialize["totalPositionValueAbs"] = o.TotalPositionValueAbs
	}
	if !IsNil(o.InitialMarginRequirement) {
		toSerialize["initialMarginRequirement"] = o.InitialMarginRequirement
	}
	if !IsNil(o.StarkExRiskValue) {
		toSerialize["starkExRiskValue"] = o.StarkExRiskValue
	}
	if !IsNil(o.PendingWithdrawAmount) {
		toSerialize["pendingWithdrawAmount"] = o.PendingWithdrawAmount
	}
	if !IsNil(o.PendingTransferOutAmount) {
		toSerialize["pendingTransferOutAmount"] = o.PendingTransferOutAmount
	}
	if !IsNil(o.OrderFrozenAmount) {
		toSerialize["orderFrozenAmount"] = o.OrderFrozenAmount
	}
	if !IsNil(o.AvailableAmount) {
		toSerialize["availableAmount"] = o.AvailableAmount
	}
	return toSerialize, nil
}

type NullableCollateralAsset struct {
	value *CollateralAsset
	isSet bool
}

func (v NullableCollateralAsset) Get() *CollateralAsset {
	return v.value
}

func (v *NullableCollateralAsset) Set(val *CollateralAsset) {
	v.value = val
	v.isSet = true
}

func (v NullableCollateralAsset) IsSet() bool {
	return v.isSet
}

func (v *NullableCollateralAsset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollateralAsset(val *CollateralAsset) *NullableCollateralAsset {
	return &NullableCollateralAsset{value: val, isSet: true}
}

func (v NullableCollateralAsset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollateralAsset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


