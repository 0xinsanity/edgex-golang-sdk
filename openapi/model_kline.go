/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Kline type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Kline{}

// Kline K线
type Kline struct {
	// K线ID
	KlineId *string `json:"klineId,omitempty"`
	// 永续合约id
	ContractId *string `json:"contractId,omitempty"`
	// 永续合约名称
	ContractName *string `json:"contractName,omitempty"`
	// K线类型
	KlineType *string `json:"klineType,omitempty"`
	// K线时间
	KlineTime *string `json:"klineTime,omitempty"`
	//  K线的价格类型
	PriceType *string `json:"priceType,omitempty"`
	// 成交笔数
	Trades *string `json:"trades,omitempty"`
	// 成交量
	Size *string `json:"size,omitempty"`
	// 成交额
	Value *string `json:"value,omitempty"`
	// 最高价
	High *string `json:"high,omitempty"`
	// 最低价
	Low *string `json:"low,omitempty"`
	// 内开盘价
	Open *string `json:"open,omitempty"`
	// 内收盘价
	Close *string `json:"close,omitempty"`
	// Maker买入成交量
	MakerBuySize *string `json:"makerBuySize,omitempty"`
	// Maker买入成交额
	MakerBuyValue *string `json:"makerBuyValue,omitempty"`
}

// NewKline instantiates a new Kline object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKline() *Kline {
	this := Kline{}
	return &this
}

// NewKlineWithDefaults instantiates a new Kline object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKlineWithDefaults() *Kline {
	this := Kline{}
	return &this
}

// GetKlineId returns the KlineId field value if set, zero value otherwise.
func (o *Kline) GetKlineId() string {
	if o == nil || IsNil(o.KlineId) {
		var ret string
		return ret
	}
	return *o.KlineId
}

// GetKlineIdOk returns a tuple with the KlineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Kline) GetKlineIdOk() (*string, bool) {
	if o == nil || IsNil(o.KlineId) {
		return nil, false
	}
	return o.KlineId, true
}

// HasKlineId returns a boolean if a field has been set.
func (o *Kline) HasKlineId() bool {
	if o != nil && !IsNil(o.KlineId) {
		return true
	}

	return false
}

// SetKlineId gets a reference to the given string and assigns it to the KlineId field.
func (o *Kline) SetKlineId(v string) {
	o.KlineId = &v
}

// GetContractId returns the ContractId field value if set, zero value otherwise.
func (o *Kline) GetContractId() string {
	if o == nil || IsNil(o.ContractId) {
		var ret string
		return ret
	}
	return *o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Kline) GetContractIdOk() (*string, bool) {
	if o == nil || IsNil(o.ContractId) {
		return nil, false
	}
	return o.ContractId, true
}

// HasContractId returns a boolean if a field has been set.
func (o *Kline) HasContractId() bool {
	if o != nil && !IsNil(o.ContractId) {
		return true
	}

	return false
}

// SetContractId gets a reference to the given string and assigns it to the ContractId field.
func (o *Kline) SetContractId(v string) {
	o.ContractId = &v
}

// GetContractName returns the ContractName field value if set, zero value otherwise.
func (o *Kline) GetContractName() string {
	if o == nil || IsNil(o.ContractName) {
		var ret string
		return ret
	}
	return *o.ContractName
}

// GetContractNameOk returns a tuple with the ContractName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Kline) GetContractNameOk() (*string, bool) {
	if o == nil || IsNil(o.ContractName) {
		return nil, false
	}
	return o.ContractName, true
}

// HasContractName returns a boolean if a field has been set.
func (o *Kline) HasContractName() bool {
	if o != nil && !IsNil(o.ContractName) {
		return true
	}

	return false
}

// SetContractName gets a reference to the given string and assigns it to the ContractName field.
func (o *Kline) SetContractName(v string) {
	o.ContractName = &v
}

// GetKlineType returns the KlineType field value if set, zero value otherwise.
func (o *Kline) GetKlineType() string {
	if o == nil || IsNil(o.KlineType) {
		var ret string
		return ret
	}
	return *o.KlineType
}

// GetKlineTypeOk returns a tuple with the KlineType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Kline) GetKlineTypeOk() (*string, bool) {
	if o == nil || IsNil(o.KlineType) {
		return nil, false
	}
	return o.KlineType, true
}

// HasKlineType returns a boolean if a field has been set.
func (o *Kline) HasKlineType() bool {
	if o != nil && !IsNil(o.KlineType) {
		return true
	}

	return false
}

// SetKlineType gets a reference to the given string and assigns it to the KlineType field.
func (o *Kline) SetKlineType(v string) {
	o.KlineType = &v
}

// GetKlineTime returns the KlineTime field value if set, zero value otherwise.
func (o *Kline) GetKlineTime() string {
	if o == nil || IsNil(o.KlineTime) {
		var ret string
		return ret
	}
	return *o.KlineTime
}

// GetKlineTimeOk returns a tuple with the KlineTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Kline) GetKlineTimeOk() (*string, bool) {
	if o == nil || IsNil(o.KlineTime) {
		return nil, false
	}
	return o.KlineTime, true
}

// HasKlineTime returns a boolean if a field has been set.
func (o *Kline) HasKlineTime() bool {
	if o != nil && !IsNil(o.KlineTime) {
		return true
	}

	return false
}

// SetKlineTime gets a reference to the given string and assigns it to the KlineTime field.
func (o *Kline) SetKlineTime(v string) {
	o.KlineTime = &v
}

// GetPriceType returns the PriceType field value if set, zero value otherwise.
func (o *Kline) GetPriceType() string {
	if o == nil || IsNil(o.PriceType) {
		var ret string
		return ret
	}
	return *o.PriceType
}

// GetPriceTypeOk returns a tuple with the PriceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Kline) GetPriceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PriceType) {
		return nil, false
	}
	return o.PriceType, true
}

// HasPriceType returns a boolean if a field has been set.
func (o *Kline) HasPriceType() bool {
	if o != nil && !IsNil(o.PriceType) {
		return true
	}

	return false
}

// SetPriceType gets a reference to the given string and assigns it to the PriceType field.
func (o *Kline) SetPriceType(v string) {
	o.PriceType = &v
}

// GetTrades returns the Trades field value if set, zero value otherwise.
func (o *Kline) GetTrades() string {
	if o == nil || IsNil(o.Trades) {
		var ret string
		return ret
	}
	return *o.Trades
}

// GetTradesOk returns a tuple with the Trades field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Kline) GetTradesOk() (*string, bool) {
	if o == nil || IsNil(o.Trades) {
		return nil, false
	}
	return o.Trades, true
}

// HasTrades returns a boolean if a field has been set.
func (o *Kline) HasTrades() bool {
	if o != nil && !IsNil(o.Trades) {
		return true
	}

	return false
}

// SetTrades gets a reference to the given string and assigns it to the Trades field.
func (o *Kline) SetTrades(v string) {
	o.Trades = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *Kline) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Kline) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *Kline) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *Kline) SetSize(v string) {
	o.Size = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *Kline) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Kline) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *Kline) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *Kline) SetValue(v string) {
	o.Value = &v
}

// GetHigh returns the High field value if set, zero value otherwise.
func (o *Kline) GetHigh() string {
	if o == nil || IsNil(o.High) {
		var ret string
		return ret
	}
	return *o.High
}

// GetHighOk returns a tuple with the High field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Kline) GetHighOk() (*string, bool) {
	if o == nil || IsNil(o.High) {
		return nil, false
	}
	return o.High, true
}

// HasHigh returns a boolean if a field has been set.
func (o *Kline) HasHigh() bool {
	if o != nil && !IsNil(o.High) {
		return true
	}

	return false
}

// SetHigh gets a reference to the given string and assigns it to the High field.
func (o *Kline) SetHigh(v string) {
	o.High = &v
}

// GetLow returns the Low field value if set, zero value otherwise.
func (o *Kline) GetLow() string {
	if o == nil || IsNil(o.Low) {
		var ret string
		return ret
	}
	return *o.Low
}

// GetLowOk returns a tuple with the Low field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Kline) GetLowOk() (*string, bool) {
	if o == nil || IsNil(o.Low) {
		return nil, false
	}
	return o.Low, true
}

// HasLow returns a boolean if a field has been set.
func (o *Kline) HasLow() bool {
	if o != nil && !IsNil(o.Low) {
		return true
	}

	return false
}

// SetLow gets a reference to the given string and assigns it to the Low field.
func (o *Kline) SetLow(v string) {
	o.Low = &v
}

// GetOpen returns the Open field value if set, zero value otherwise.
func (o *Kline) GetOpen() string {
	if o == nil || IsNil(o.Open) {
		var ret string
		return ret
	}
	return *o.Open
}

// GetOpenOk returns a tuple with the Open field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Kline) GetOpenOk() (*string, bool) {
	if o == nil || IsNil(o.Open) {
		return nil, false
	}
	return o.Open, true
}

// HasOpen returns a boolean if a field has been set.
func (o *Kline) HasOpen() bool {
	if o != nil && !IsNil(o.Open) {
		return true
	}

	return false
}

// SetOpen gets a reference to the given string and assigns it to the Open field.
func (o *Kline) SetOpen(v string) {
	o.Open = &v
}

// GetClose returns the Close field value if set, zero value otherwise.
func (o *Kline) GetClose() string {
	if o == nil || IsNil(o.Close) {
		var ret string
		return ret
	}
	return *o.Close
}

// GetCloseOk returns a tuple with the Close field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Kline) GetCloseOk() (*string, bool) {
	if o == nil || IsNil(o.Close) {
		return nil, false
	}
	return o.Close, true
}

// HasClose returns a boolean if a field has been set.
func (o *Kline) HasClose() bool {
	if o != nil && !IsNil(o.Close) {
		return true
	}

	return false
}

// SetClose gets a reference to the given string and assigns it to the Close field.
func (o *Kline) SetClose(v string) {
	o.Close = &v
}

// GetMakerBuySize returns the MakerBuySize field value if set, zero value otherwise.
func (o *Kline) GetMakerBuySize() string {
	if o == nil || IsNil(o.MakerBuySize) {
		var ret string
		return ret
	}
	return *o.MakerBuySize
}

// GetMakerBuySizeOk returns a tuple with the MakerBuySize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Kline) GetMakerBuySizeOk() (*string, bool) {
	if o == nil || IsNil(o.MakerBuySize) {
		return nil, false
	}
	return o.MakerBuySize, true
}

// HasMakerBuySize returns a boolean if a field has been set.
func (o *Kline) HasMakerBuySize() bool {
	if o != nil && !IsNil(o.MakerBuySize) {
		return true
	}

	return false
}

// SetMakerBuySize gets a reference to the given string and assigns it to the MakerBuySize field.
func (o *Kline) SetMakerBuySize(v string) {
	o.MakerBuySize = &v
}

// GetMakerBuyValue returns the MakerBuyValue field value if set, zero value otherwise.
func (o *Kline) GetMakerBuyValue() string {
	if o == nil || IsNil(o.MakerBuyValue) {
		var ret string
		return ret
	}
	return *o.MakerBuyValue
}

// GetMakerBuyValueOk returns a tuple with the MakerBuyValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Kline) GetMakerBuyValueOk() (*string, bool) {
	if o == nil || IsNil(o.MakerBuyValue) {
		return nil, false
	}
	return o.MakerBuyValue, true
}

// HasMakerBuyValue returns a boolean if a field has been set.
func (o *Kline) HasMakerBuyValue() bool {
	if o != nil && !IsNil(o.MakerBuyValue) {
		return true
	}

	return false
}

// SetMakerBuyValue gets a reference to the given string and assigns it to the MakerBuyValue field.
func (o *Kline) SetMakerBuyValue(v string) {
	o.MakerBuyValue = &v
}

func (o Kline) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Kline) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.KlineId) {
		toSerialize["klineId"] = o.KlineId
	}
	if !IsNil(o.ContractId) {
		toSerialize["contractId"] = o.ContractId
	}
	if !IsNil(o.ContractName) {
		toSerialize["contractName"] = o.ContractName
	}
	if !IsNil(o.KlineType) {
		toSerialize["klineType"] = o.KlineType
	}
	if !IsNil(o.KlineTime) {
		toSerialize["klineTime"] = o.KlineTime
	}
	if !IsNil(o.PriceType) {
		toSerialize["priceType"] = o.PriceType
	}
	if !IsNil(o.Trades) {
		toSerialize["trades"] = o.Trades
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.High) {
		toSerialize["high"] = o.High
	}
	if !IsNil(o.Low) {
		toSerialize["low"] = o.Low
	}
	if !IsNil(o.Open) {
		toSerialize["open"] = o.Open
	}
	if !IsNil(o.Close) {
		toSerialize["close"] = o.Close
	}
	if !IsNil(o.MakerBuySize) {
		toSerialize["makerBuySize"] = o.MakerBuySize
	}
	if !IsNil(o.MakerBuyValue) {
		toSerialize["makerBuyValue"] = o.MakerBuyValue
	}
	return toSerialize, nil
}

type NullableKline struct {
	value *Kline
	isSet bool
}

func (v NullableKline) Get() *Kline {
	return v.value
}

func (v *NullableKline) Set(val *Kline) {
	v.value = val
	v.isSet = true
}

func (v NullableKline) IsSet() bool {
	return v.isSet
}

func (v *NullableKline) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKline(val *Kline) *NullableKline {
	return &NullableKline{value: val, isSet: true}
}

func (v NullableKline) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKline) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


