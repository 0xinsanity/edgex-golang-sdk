/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CancelAllOrderParam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CancelAllOrderParam{}

// CancelAllOrderParam 取消账户下所有委托单请求参数
type CancelAllOrderParam struct {
	// 账户id
	AccountId *string `json:"accountId,omitempty"`
	// 过滤取消对应抵押品coinId对应的活动委托单，如果为空则取消所有抵押品coinId的活动委托单
	FilterCoinIdList []string `json:"filterCoinIdList,omitempty"`
	// 过滤取消对应合约的活动委托单，如果为空则取消所有合约的活动委托单
	FilterContractIdList []string `json:"filterContractIdList,omitempty"`
	// 过滤取消指定类型的委托单，不填的话所有类型委托单
	FilterOrderTypeList []string `json:"filterOrderTypeList,omitempty"`
	// 过滤取消指定状态的委托单，不填的话所有状态委托单
	FilterOrderStatusList []string `json:"filterOrderStatusList,omitempty"`
	// 过滤只取消对应的仓位止盈止损单，如果为空的话会取消所有合约委托单
	FilterIsPositionTpsl []bool `json:"filterIsPositionTpsl,omitempty"`
}

// NewCancelAllOrderParam instantiates a new CancelAllOrderParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancelAllOrderParam() *CancelAllOrderParam {
	this := CancelAllOrderParam{}
	return &this
}

// NewCancelAllOrderParamWithDefaults instantiates a new CancelAllOrderParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancelAllOrderParamWithDefaults() *CancelAllOrderParam {
	this := CancelAllOrderParam{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *CancelAllOrderParam) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelAllOrderParam) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *CancelAllOrderParam) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *CancelAllOrderParam) SetAccountId(v string) {
	o.AccountId = &v
}

// GetFilterCoinIdList returns the FilterCoinIdList field value if set, zero value otherwise.
func (o *CancelAllOrderParam) GetFilterCoinIdList() []string {
	if o == nil || IsNil(o.FilterCoinIdList) {
		var ret []string
		return ret
	}
	return o.FilterCoinIdList
}

// GetFilterCoinIdListOk returns a tuple with the FilterCoinIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelAllOrderParam) GetFilterCoinIdListOk() ([]string, bool) {
	if o == nil || IsNil(o.FilterCoinIdList) {
		return nil, false
	}
	return o.FilterCoinIdList, true
}

// HasFilterCoinIdList returns a boolean if a field has been set.
func (o *CancelAllOrderParam) HasFilterCoinIdList() bool {
	if o != nil && !IsNil(o.FilterCoinIdList) {
		return true
	}

	return false
}

// SetFilterCoinIdList gets a reference to the given []string and assigns it to the FilterCoinIdList field.
func (o *CancelAllOrderParam) SetFilterCoinIdList(v []string) {
	o.FilterCoinIdList = v
}

// GetFilterContractIdList returns the FilterContractIdList field value if set, zero value otherwise.
func (o *CancelAllOrderParam) GetFilterContractIdList() []string {
	if o == nil || IsNil(o.FilterContractIdList) {
		var ret []string
		return ret
	}
	return o.FilterContractIdList
}

// GetFilterContractIdListOk returns a tuple with the FilterContractIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelAllOrderParam) GetFilterContractIdListOk() ([]string, bool) {
	if o == nil || IsNil(o.FilterContractIdList) {
		return nil, false
	}
	return o.FilterContractIdList, true
}

// HasFilterContractIdList returns a boolean if a field has been set.
func (o *CancelAllOrderParam) HasFilterContractIdList() bool {
	if o != nil && !IsNil(o.FilterContractIdList) {
		return true
	}

	return false
}

// SetFilterContractIdList gets a reference to the given []string and assigns it to the FilterContractIdList field.
func (o *CancelAllOrderParam) SetFilterContractIdList(v []string) {
	o.FilterContractIdList = v
}

// GetFilterOrderTypeList returns the FilterOrderTypeList field value if set, zero value otherwise.
func (o *CancelAllOrderParam) GetFilterOrderTypeList() []string {
	if o == nil || IsNil(o.FilterOrderTypeList) {
		var ret []string
		return ret
	}
	return o.FilterOrderTypeList
}

// GetFilterOrderTypeListOk returns a tuple with the FilterOrderTypeList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelAllOrderParam) GetFilterOrderTypeListOk() ([]string, bool) {
	if o == nil || IsNil(o.FilterOrderTypeList) {
		return nil, false
	}
	return o.FilterOrderTypeList, true
}

// HasFilterOrderTypeList returns a boolean if a field has been set.
func (o *CancelAllOrderParam) HasFilterOrderTypeList() bool {
	if o != nil && !IsNil(o.FilterOrderTypeList) {
		return true
	}

	return false
}

// SetFilterOrderTypeList gets a reference to the given []string and assigns it to the FilterOrderTypeList field.
func (o *CancelAllOrderParam) SetFilterOrderTypeList(v []string) {
	o.FilterOrderTypeList = v
}

// GetFilterOrderStatusList returns the FilterOrderStatusList field value if set, zero value otherwise.
func (o *CancelAllOrderParam) GetFilterOrderStatusList() []string {
	if o == nil || IsNil(o.FilterOrderStatusList) {
		var ret []string
		return ret
	}
	return o.FilterOrderStatusList
}

// GetFilterOrderStatusListOk returns a tuple with the FilterOrderStatusList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelAllOrderParam) GetFilterOrderStatusListOk() ([]string, bool) {
	if o == nil || IsNil(o.FilterOrderStatusList) {
		return nil, false
	}
	return o.FilterOrderStatusList, true
}

// HasFilterOrderStatusList returns a boolean if a field has been set.
func (o *CancelAllOrderParam) HasFilterOrderStatusList() bool {
	if o != nil && !IsNil(o.FilterOrderStatusList) {
		return true
	}

	return false
}

// SetFilterOrderStatusList gets a reference to the given []string and assigns it to the FilterOrderStatusList field.
func (o *CancelAllOrderParam) SetFilterOrderStatusList(v []string) {
	o.FilterOrderStatusList = v
}

// GetFilterIsPositionTpsl returns the FilterIsPositionTpsl field value if set, zero value otherwise.
func (o *CancelAllOrderParam) GetFilterIsPositionTpsl() []bool {
	if o == nil || IsNil(o.FilterIsPositionTpsl) {
		var ret []bool
		return ret
	}
	return o.FilterIsPositionTpsl
}

// GetFilterIsPositionTpslOk returns a tuple with the FilterIsPositionTpsl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelAllOrderParam) GetFilterIsPositionTpslOk() ([]bool, bool) {
	if o == nil || IsNil(o.FilterIsPositionTpsl) {
		return nil, false
	}
	return o.FilterIsPositionTpsl, true
}

// HasFilterIsPositionTpsl returns a boolean if a field has been set.
func (o *CancelAllOrderParam) HasFilterIsPositionTpsl() bool {
	if o != nil && !IsNil(o.FilterIsPositionTpsl) {
		return true
	}

	return false
}

// SetFilterIsPositionTpsl gets a reference to the given []bool and assigns it to the FilterIsPositionTpsl field.
func (o *CancelAllOrderParam) SetFilterIsPositionTpsl(v []bool) {
	o.FilterIsPositionTpsl = v
}

func (o CancelAllOrderParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CancelAllOrderParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.FilterCoinIdList) {
		toSerialize["filterCoinIdList"] = o.FilterCoinIdList
	}
	if !IsNil(o.FilterContractIdList) {
		toSerialize["filterContractIdList"] = o.FilterContractIdList
	}
	if !IsNil(o.FilterOrderTypeList) {
		toSerialize["filterOrderTypeList"] = o.FilterOrderTypeList
	}
	if !IsNil(o.FilterOrderStatusList) {
		toSerialize["filterOrderStatusList"] = o.FilterOrderStatusList
	}
	if !IsNil(o.FilterIsPositionTpsl) {
		toSerialize["filterIsPositionTpsl"] = o.FilterIsPositionTpsl
	}
	return toSerialize, nil
}

type NullableCancelAllOrderParam struct {
	value *CancelAllOrderParam
	isSet bool
}

func (v NullableCancelAllOrderParam) Get() *CancelAllOrderParam {
	return v.value
}

func (v *NullableCancelAllOrderParam) Set(val *CancelAllOrderParam) {
	v.value = val
	v.isSet = true
}

func (v NullableCancelAllOrderParam) IsSet() bool {
	return v.isSet
}

func (v *NullableCancelAllOrderParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancelAllOrderParam(val *CancelAllOrderParam) *NullableCancelAllOrderParam {
	return &NullableCancelAllOrderParam{value: val, isSet: true}
}

func (v NullableCancelAllOrderParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancelAllOrderParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


