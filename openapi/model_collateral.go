/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Collateral type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Collateral{}

// Collateral 抵押品信息
type Collateral struct {
	// 所属用户id
	UserId *string `json:"userId,omitempty"`
	// 所属账户id
	AccountId *string `json:"accountId,omitempty"`
	// 货币id
	CoinId *string `json:"coinId,omitempty"`
	// 抵押品数额, 实际为decimal类型
	Amount *string `json:"amount,omitempty"`
	// 老式记账方式余额字段，仅展示不参与计算
	LegacyAmount *string `json:"legacyAmount,omitempty"`
	// 累计的充值数量
	CumDepositAmount *string `json:"cumDepositAmount,omitempty"`
	// 累计的提现数量
	CumWithdrawAmount *string `json:"cumWithdrawAmount,omitempty"`
	// 累计的转入数量
	CumTransferInAmount *string `json:"cumTransferInAmount,omitempty"`
	// 累计的转出数量
	CumTransferOutAmount *string `json:"cumTransferOutAmount,omitempty"`
	// 累计仓位买入扣减的抵押品数量
	CumPositionBuyAmount *string `json:"cumPositionBuyAmount,omitempty"`
	// 累计仓位卖出增加的抵押品数量
	CumPositionSellAmount *string `json:"cumPositionSellAmount,omitempty"`
	// 累计的成交手续费数量
	CumFillFeeAmount *string `json:"cumFillFeeAmount,omitempty"`
	// 累计资金费用数量
	CumFundingFeeAmount *string `json:"cumFundingFeeAmount,omitempty"`
	// 累计的委托单手续费收入数量
	CumFillFeeIncomeAmount *string `json:"cumFillFeeIncomeAmount,omitempty"`
	// 创建时间
	CreatedTime *string `json:"createdTime,omitempty"`
	// 更新时间
	UpdatedTime *string `json:"updatedTime,omitempty"`
}

// NewCollateral instantiates a new Collateral object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollateral() *Collateral {
	this := Collateral{}
	return &this
}

// NewCollateralWithDefaults instantiates a new Collateral object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollateralWithDefaults() *Collateral {
	this := Collateral{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *Collateral) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Collateral) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *Collateral) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *Collateral) SetUserId(v string) {
	o.UserId = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *Collateral) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Collateral) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *Collateral) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *Collateral) SetAccountId(v string) {
	o.AccountId = &v
}

// GetCoinId returns the CoinId field value if set, zero value otherwise.
func (o *Collateral) GetCoinId() string {
	if o == nil || IsNil(o.CoinId) {
		var ret string
		return ret
	}
	return *o.CoinId
}

// GetCoinIdOk returns a tuple with the CoinId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Collateral) GetCoinIdOk() (*string, bool) {
	if o == nil || IsNil(o.CoinId) {
		return nil, false
	}
	return o.CoinId, true
}

// HasCoinId returns a boolean if a field has been set.
func (o *Collateral) HasCoinId() bool {
	if o != nil && !IsNil(o.CoinId) {
		return true
	}

	return false
}

// SetCoinId gets a reference to the given string and assigns it to the CoinId field.
func (o *Collateral) SetCoinId(v string) {
	o.CoinId = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *Collateral) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Collateral) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *Collateral) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *Collateral) SetAmount(v string) {
	o.Amount = &v
}

// GetLegacyAmount returns the LegacyAmount field value if set, zero value otherwise.
func (o *Collateral) GetLegacyAmount() string {
	if o == nil || IsNil(o.LegacyAmount) {
		var ret string
		return ret
	}
	return *o.LegacyAmount
}

// GetLegacyAmountOk returns a tuple with the LegacyAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Collateral) GetLegacyAmountOk() (*string, bool) {
	if o == nil || IsNil(o.LegacyAmount) {
		return nil, false
	}
	return o.LegacyAmount, true
}

// HasLegacyAmount returns a boolean if a field has been set.
func (o *Collateral) HasLegacyAmount() bool {
	if o != nil && !IsNil(o.LegacyAmount) {
		return true
	}

	return false
}

// SetLegacyAmount gets a reference to the given string and assigns it to the LegacyAmount field.
func (o *Collateral) SetLegacyAmount(v string) {
	o.LegacyAmount = &v
}

// GetCumDepositAmount returns the CumDepositAmount field value if set, zero value otherwise.
func (o *Collateral) GetCumDepositAmount() string {
	if o == nil || IsNil(o.CumDepositAmount) {
		var ret string
		return ret
	}
	return *o.CumDepositAmount
}

// GetCumDepositAmountOk returns a tuple with the CumDepositAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Collateral) GetCumDepositAmountOk() (*string, bool) {
	if o == nil || IsNil(o.CumDepositAmount) {
		return nil, false
	}
	return o.CumDepositAmount, true
}

// HasCumDepositAmount returns a boolean if a field has been set.
func (o *Collateral) HasCumDepositAmount() bool {
	if o != nil && !IsNil(o.CumDepositAmount) {
		return true
	}

	return false
}

// SetCumDepositAmount gets a reference to the given string and assigns it to the CumDepositAmount field.
func (o *Collateral) SetCumDepositAmount(v string) {
	o.CumDepositAmount = &v
}

// GetCumWithdrawAmount returns the CumWithdrawAmount field value if set, zero value otherwise.
func (o *Collateral) GetCumWithdrawAmount() string {
	if o == nil || IsNil(o.CumWithdrawAmount) {
		var ret string
		return ret
	}
	return *o.CumWithdrawAmount
}

// GetCumWithdrawAmountOk returns a tuple with the CumWithdrawAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Collateral) GetCumWithdrawAmountOk() (*string, bool) {
	if o == nil || IsNil(o.CumWithdrawAmount) {
		return nil, false
	}
	return o.CumWithdrawAmount, true
}

// HasCumWithdrawAmount returns a boolean if a field has been set.
func (o *Collateral) HasCumWithdrawAmount() bool {
	if o != nil && !IsNil(o.CumWithdrawAmount) {
		return true
	}

	return false
}

// SetCumWithdrawAmount gets a reference to the given string and assigns it to the CumWithdrawAmount field.
func (o *Collateral) SetCumWithdrawAmount(v string) {
	o.CumWithdrawAmount = &v
}

// GetCumTransferInAmount returns the CumTransferInAmount field value if set, zero value otherwise.
func (o *Collateral) GetCumTransferInAmount() string {
	if o == nil || IsNil(o.CumTransferInAmount) {
		var ret string
		return ret
	}
	return *o.CumTransferInAmount
}

// GetCumTransferInAmountOk returns a tuple with the CumTransferInAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Collateral) GetCumTransferInAmountOk() (*string, bool) {
	if o == nil || IsNil(o.CumTransferInAmount) {
		return nil, false
	}
	return o.CumTransferInAmount, true
}

// HasCumTransferInAmount returns a boolean if a field has been set.
func (o *Collateral) HasCumTransferInAmount() bool {
	if o != nil && !IsNil(o.CumTransferInAmount) {
		return true
	}

	return false
}

// SetCumTransferInAmount gets a reference to the given string and assigns it to the CumTransferInAmount field.
func (o *Collateral) SetCumTransferInAmount(v string) {
	o.CumTransferInAmount = &v
}

// GetCumTransferOutAmount returns the CumTransferOutAmount field value if set, zero value otherwise.
func (o *Collateral) GetCumTransferOutAmount() string {
	if o == nil || IsNil(o.CumTransferOutAmount) {
		var ret string
		return ret
	}
	return *o.CumTransferOutAmount
}

// GetCumTransferOutAmountOk returns a tuple with the CumTransferOutAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Collateral) GetCumTransferOutAmountOk() (*string, bool) {
	if o == nil || IsNil(o.CumTransferOutAmount) {
		return nil, false
	}
	return o.CumTransferOutAmount, true
}

// HasCumTransferOutAmount returns a boolean if a field has been set.
func (o *Collateral) HasCumTransferOutAmount() bool {
	if o != nil && !IsNil(o.CumTransferOutAmount) {
		return true
	}

	return false
}

// SetCumTransferOutAmount gets a reference to the given string and assigns it to the CumTransferOutAmount field.
func (o *Collateral) SetCumTransferOutAmount(v string) {
	o.CumTransferOutAmount = &v
}

// GetCumPositionBuyAmount returns the CumPositionBuyAmount field value if set, zero value otherwise.
func (o *Collateral) GetCumPositionBuyAmount() string {
	if o == nil || IsNil(o.CumPositionBuyAmount) {
		var ret string
		return ret
	}
	return *o.CumPositionBuyAmount
}

// GetCumPositionBuyAmountOk returns a tuple with the CumPositionBuyAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Collateral) GetCumPositionBuyAmountOk() (*string, bool) {
	if o == nil || IsNil(o.CumPositionBuyAmount) {
		return nil, false
	}
	return o.CumPositionBuyAmount, true
}

// HasCumPositionBuyAmount returns a boolean if a field has been set.
func (o *Collateral) HasCumPositionBuyAmount() bool {
	if o != nil && !IsNil(o.CumPositionBuyAmount) {
		return true
	}

	return false
}

// SetCumPositionBuyAmount gets a reference to the given string and assigns it to the CumPositionBuyAmount field.
func (o *Collateral) SetCumPositionBuyAmount(v string) {
	o.CumPositionBuyAmount = &v
}

// GetCumPositionSellAmount returns the CumPositionSellAmount field value if set, zero value otherwise.
func (o *Collateral) GetCumPositionSellAmount() string {
	if o == nil || IsNil(o.CumPositionSellAmount) {
		var ret string
		return ret
	}
	return *o.CumPositionSellAmount
}

// GetCumPositionSellAmountOk returns a tuple with the CumPositionSellAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Collateral) GetCumPositionSellAmountOk() (*string, bool) {
	if o == nil || IsNil(o.CumPositionSellAmount) {
		return nil, false
	}
	return o.CumPositionSellAmount, true
}

// HasCumPositionSellAmount returns a boolean if a field has been set.
func (o *Collateral) HasCumPositionSellAmount() bool {
	if o != nil && !IsNil(o.CumPositionSellAmount) {
		return true
	}

	return false
}

// SetCumPositionSellAmount gets a reference to the given string and assigns it to the CumPositionSellAmount field.
func (o *Collateral) SetCumPositionSellAmount(v string) {
	o.CumPositionSellAmount = &v
}

// GetCumFillFeeAmount returns the CumFillFeeAmount field value if set, zero value otherwise.
func (o *Collateral) GetCumFillFeeAmount() string {
	if o == nil || IsNil(o.CumFillFeeAmount) {
		var ret string
		return ret
	}
	return *o.CumFillFeeAmount
}

// GetCumFillFeeAmountOk returns a tuple with the CumFillFeeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Collateral) GetCumFillFeeAmountOk() (*string, bool) {
	if o == nil || IsNil(o.CumFillFeeAmount) {
		return nil, false
	}
	return o.CumFillFeeAmount, true
}

// HasCumFillFeeAmount returns a boolean if a field has been set.
func (o *Collateral) HasCumFillFeeAmount() bool {
	if o != nil && !IsNil(o.CumFillFeeAmount) {
		return true
	}

	return false
}

// SetCumFillFeeAmount gets a reference to the given string and assigns it to the CumFillFeeAmount field.
func (o *Collateral) SetCumFillFeeAmount(v string) {
	o.CumFillFeeAmount = &v
}

// GetCumFundingFeeAmount returns the CumFundingFeeAmount field value if set, zero value otherwise.
func (o *Collateral) GetCumFundingFeeAmount() string {
	if o == nil || IsNil(o.CumFundingFeeAmount) {
		var ret string
		return ret
	}
	return *o.CumFundingFeeAmount
}

// GetCumFundingFeeAmountOk returns a tuple with the CumFundingFeeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Collateral) GetCumFundingFeeAmountOk() (*string, bool) {
	if o == nil || IsNil(o.CumFundingFeeAmount) {
		return nil, false
	}
	return o.CumFundingFeeAmount, true
}

// HasCumFundingFeeAmount returns a boolean if a field has been set.
func (o *Collateral) HasCumFundingFeeAmount() bool {
	if o != nil && !IsNil(o.CumFundingFeeAmount) {
		return true
	}

	return false
}

// SetCumFundingFeeAmount gets a reference to the given string and assigns it to the CumFundingFeeAmount field.
func (o *Collateral) SetCumFundingFeeAmount(v string) {
	o.CumFundingFeeAmount = &v
}

// GetCumFillFeeIncomeAmount returns the CumFillFeeIncomeAmount field value if set, zero value otherwise.
func (o *Collateral) GetCumFillFeeIncomeAmount() string {
	if o == nil || IsNil(o.CumFillFeeIncomeAmount) {
		var ret string
		return ret
	}
	return *o.CumFillFeeIncomeAmount
}

// GetCumFillFeeIncomeAmountOk returns a tuple with the CumFillFeeIncomeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Collateral) GetCumFillFeeIncomeAmountOk() (*string, bool) {
	if o == nil || IsNil(o.CumFillFeeIncomeAmount) {
		return nil, false
	}
	return o.CumFillFeeIncomeAmount, true
}

// HasCumFillFeeIncomeAmount returns a boolean if a field has been set.
func (o *Collateral) HasCumFillFeeIncomeAmount() bool {
	if o != nil && !IsNil(o.CumFillFeeIncomeAmount) {
		return true
	}

	return false
}

// SetCumFillFeeIncomeAmount gets a reference to the given string and assigns it to the CumFillFeeIncomeAmount field.
func (o *Collateral) SetCumFillFeeIncomeAmount(v string) {
	o.CumFillFeeIncomeAmount = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *Collateral) GetCreatedTime() string {
	if o == nil || IsNil(o.CreatedTime) {
		var ret string
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Collateral) GetCreatedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *Collateral) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given string and assigns it to the CreatedTime field.
func (o *Collateral) SetCreatedTime(v string) {
	o.CreatedTime = &v
}

// GetUpdatedTime returns the UpdatedTime field value if set, zero value otherwise.
func (o *Collateral) GetUpdatedTime() string {
	if o == nil || IsNil(o.UpdatedTime) {
		var ret string
		return ret
	}
	return *o.UpdatedTime
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Collateral) GetUpdatedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedTime) {
		return nil, false
	}
	return o.UpdatedTime, true
}

// HasUpdatedTime returns a boolean if a field has been set.
func (o *Collateral) HasUpdatedTime() bool {
	if o != nil && !IsNil(o.UpdatedTime) {
		return true
	}

	return false
}

// SetUpdatedTime gets a reference to the given string and assigns it to the UpdatedTime field.
func (o *Collateral) SetUpdatedTime(v string) {
	o.UpdatedTime = &v
}

func (o Collateral) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Collateral) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.CoinId) {
		toSerialize["coinId"] = o.CoinId
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.LegacyAmount) {
		toSerialize["legacyAmount"] = o.LegacyAmount
	}
	if !IsNil(o.CumDepositAmount) {
		toSerialize["cumDepositAmount"] = o.CumDepositAmount
	}
	if !IsNil(o.CumWithdrawAmount) {
		toSerialize["cumWithdrawAmount"] = o.CumWithdrawAmount
	}
	if !IsNil(o.CumTransferInAmount) {
		toSerialize["cumTransferInAmount"] = o.CumTransferInAmount
	}
	if !IsNil(o.CumTransferOutAmount) {
		toSerialize["cumTransferOutAmount"] = o.CumTransferOutAmount
	}
	if !IsNil(o.CumPositionBuyAmount) {
		toSerialize["cumPositionBuyAmount"] = o.CumPositionBuyAmount
	}
	if !IsNil(o.CumPositionSellAmount) {
		toSerialize["cumPositionSellAmount"] = o.CumPositionSellAmount
	}
	if !IsNil(o.CumFillFeeAmount) {
		toSerialize["cumFillFeeAmount"] = o.CumFillFeeAmount
	}
	if !IsNil(o.CumFundingFeeAmount) {
		toSerialize["cumFundingFeeAmount"] = o.CumFundingFeeAmount
	}
	if !IsNil(o.CumFillFeeIncomeAmount) {
		toSerialize["cumFillFeeIncomeAmount"] = o.CumFillFeeIncomeAmount
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["createdTime"] = o.CreatedTime
	}
	if !IsNil(o.UpdatedTime) {
		toSerialize["updatedTime"] = o.UpdatedTime
	}
	return toSerialize, nil
}

type NullableCollateral struct {
	value *Collateral
	isSet bool
}

func (v NullableCollateral) Get() *Collateral {
	return v.value
}

func (v *NullableCollateral) Set(val *Collateral) {
	v.value = val
	v.isSet = true
}

func (v NullableCollateral) IsSet() bool {
	return v.isSet
}

func (v *NullableCollateral) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollateral(val *Collateral) *NullableCollateral {
	return &NullableCollateral{value: val, isSet: true}
}

func (v NullableCollateral) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollateral) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


