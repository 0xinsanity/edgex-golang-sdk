/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ForcePushPriceParam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ForcePushPriceParam{}

// ForcePushPriceParam 按照某个指定价格作为预言机价格推送-请求
type ForcePushPriceParam struct {
	// 合约id
	ContractId *string `json:"contractId,omitempty"`
	// 价格
	Price *string `json:"price,omitempty"`
}

// NewForcePushPriceParam instantiates a new ForcePushPriceParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewForcePushPriceParam() *ForcePushPriceParam {
	this := ForcePushPriceParam{}
	return &this
}

// NewForcePushPriceParamWithDefaults instantiates a new ForcePushPriceParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewForcePushPriceParamWithDefaults() *ForcePushPriceParam {
	this := ForcePushPriceParam{}
	return &this
}

// GetContractId returns the ContractId field value if set, zero value otherwise.
func (o *ForcePushPriceParam) GetContractId() string {
	if o == nil || IsNil(o.ContractId) {
		var ret string
		return ret
	}
	return *o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ForcePushPriceParam) GetContractIdOk() (*string, bool) {
	if o == nil || IsNil(o.ContractId) {
		return nil, false
	}
	return o.ContractId, true
}

// HasContractId returns a boolean if a field has been set.
func (o *ForcePushPriceParam) HasContractId() bool {
	if o != nil && !IsNil(o.ContractId) {
		return true
	}

	return false
}

// SetContractId gets a reference to the given string and assigns it to the ContractId field.
func (o *ForcePushPriceParam) SetContractId(v string) {
	o.ContractId = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ForcePushPriceParam) GetPrice() string {
	if o == nil || IsNil(o.Price) {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ForcePushPriceParam) GetPriceOk() (*string, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ForcePushPriceParam) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *ForcePushPriceParam) SetPrice(v string) {
	o.Price = &v
}

func (o ForcePushPriceParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ForcePushPriceParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContractId) {
		toSerialize["contractId"] = o.ContractId
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	return toSerialize, nil
}

type NullableForcePushPriceParam struct {
	value *ForcePushPriceParam
	isSet bool
}

func (v NullableForcePushPriceParam) Get() *ForcePushPriceParam {
	return v.value
}

func (v *NullableForcePushPriceParam) Set(val *ForcePushPriceParam) {
	v.value = val
	v.isSet = true
}

func (v NullableForcePushPriceParam) IsSet() bool {
	return v.isSet
}

func (v *NullableForcePushPriceParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableForcePushPriceParam(val *ForcePushPriceParam) *NullableForcePushPriceParam {
	return &NullableForcePushPriceParam{value: val, isSet: true}
}

func (v NullableForcePushPriceParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableForcePushPriceParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


