/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IndexPrice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndexPrice{}

// IndexPrice 价格信息
type IndexPrice struct {
	// 合约id
	ContractId *string `json:"contractId,omitempty"`
	// 价格类型
	PriceType *string `json:"priceType,omitempty"`
	// 价格取值
	PriceValue *string `json:"priceValue,omitempty"`
	// 创建时间
	CreatedTime *string `json:"createdTime,omitempty"`
	// 预言机价格签名信息，仅当 price_type=ORACLE_PRICE 时存在
	OraclePriceSignature []OraclePriceSignature `json:"oraclePriceSignature,omitempty"`
}

// NewIndexPrice instantiates a new IndexPrice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndexPrice() *IndexPrice {
	this := IndexPrice{}
	return &this
}

// NewIndexPriceWithDefaults instantiates a new IndexPrice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndexPriceWithDefaults() *IndexPrice {
	this := IndexPrice{}
	return &this
}

// GetContractId returns the ContractId field value if set, zero value otherwise.
func (o *IndexPrice) GetContractId() string {
	if o == nil || IsNil(o.ContractId) {
		var ret string
		return ret
	}
	return *o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexPrice) GetContractIdOk() (*string, bool) {
	if o == nil || IsNil(o.ContractId) {
		return nil, false
	}
	return o.ContractId, true
}

// HasContractId returns a boolean if a field has been set.
func (o *IndexPrice) HasContractId() bool {
	if o != nil && !IsNil(o.ContractId) {
		return true
	}

	return false
}

// SetContractId gets a reference to the given string and assigns it to the ContractId field.
func (o *IndexPrice) SetContractId(v string) {
	o.ContractId = &v
}

// GetPriceType returns the PriceType field value if set, zero value otherwise.
func (o *IndexPrice) GetPriceType() string {
	if o == nil || IsNil(o.PriceType) {
		var ret string
		return ret
	}
	return *o.PriceType
}

// GetPriceTypeOk returns a tuple with the PriceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexPrice) GetPriceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PriceType) {
		return nil, false
	}
	return o.PriceType, true
}

// HasPriceType returns a boolean if a field has been set.
func (o *IndexPrice) HasPriceType() bool {
	if o != nil && !IsNil(o.PriceType) {
		return true
	}

	return false
}

// SetPriceType gets a reference to the given string and assigns it to the PriceType field.
func (o *IndexPrice) SetPriceType(v string) {
	o.PriceType = &v
}

// GetPriceValue returns the PriceValue field value if set, zero value otherwise.
func (o *IndexPrice) GetPriceValue() string {
	if o == nil || IsNil(o.PriceValue) {
		var ret string
		return ret
	}
	return *o.PriceValue
}

// GetPriceValueOk returns a tuple with the PriceValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexPrice) GetPriceValueOk() (*string, bool) {
	if o == nil || IsNil(o.PriceValue) {
		return nil, false
	}
	return o.PriceValue, true
}

// HasPriceValue returns a boolean if a field has been set.
func (o *IndexPrice) HasPriceValue() bool {
	if o != nil && !IsNil(o.PriceValue) {
		return true
	}

	return false
}

// SetPriceValue gets a reference to the given string and assigns it to the PriceValue field.
func (o *IndexPrice) SetPriceValue(v string) {
	o.PriceValue = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *IndexPrice) GetCreatedTime() string {
	if o == nil || IsNil(o.CreatedTime) {
		var ret string
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexPrice) GetCreatedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *IndexPrice) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given string and assigns it to the CreatedTime field.
func (o *IndexPrice) SetCreatedTime(v string) {
	o.CreatedTime = &v
}

// GetOraclePriceSignature returns the OraclePriceSignature field value if set, zero value otherwise.
func (o *IndexPrice) GetOraclePriceSignature() []OraclePriceSignature {
	if o == nil || IsNil(o.OraclePriceSignature) {
		var ret []OraclePriceSignature
		return ret
	}
	return o.OraclePriceSignature
}

// GetOraclePriceSignatureOk returns a tuple with the OraclePriceSignature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexPrice) GetOraclePriceSignatureOk() ([]OraclePriceSignature, bool) {
	if o == nil || IsNil(o.OraclePriceSignature) {
		return nil, false
	}
	return o.OraclePriceSignature, true
}

// HasOraclePriceSignature returns a boolean if a field has been set.
func (o *IndexPrice) HasOraclePriceSignature() bool {
	if o != nil && !IsNil(o.OraclePriceSignature) {
		return true
	}

	return false
}

// SetOraclePriceSignature gets a reference to the given []OraclePriceSignature and assigns it to the OraclePriceSignature field.
func (o *IndexPrice) SetOraclePriceSignature(v []OraclePriceSignature) {
	o.OraclePriceSignature = v
}

func (o IndexPrice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndexPrice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContractId) {
		toSerialize["contractId"] = o.ContractId
	}
	if !IsNil(o.PriceType) {
		toSerialize["priceType"] = o.PriceType
	}
	if !IsNil(o.PriceValue) {
		toSerialize["priceValue"] = o.PriceValue
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["createdTime"] = o.CreatedTime
	}
	if !IsNil(o.OraclePriceSignature) {
		toSerialize["oraclePriceSignature"] = o.OraclePriceSignature
	}
	return toSerialize, nil
}

type NullableIndexPrice struct {
	value *IndexPrice
	isSet bool
}

func (v NullableIndexPrice) Get() *IndexPrice {
	return v.value
}

func (v *NullableIndexPrice) Set(val *IndexPrice) {
	v.value = val
	v.isSet = true
}

func (v NullableIndexPrice) IsSet() bool {
	return v.isSet
}

func (v *NullableIndexPrice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndexPrice(val *IndexPrice) *NullableIndexPrice {
	return &NullableIndexPrice{value: val, isSet: true}
}

func (v NullableIndexPrice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndexPrice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


