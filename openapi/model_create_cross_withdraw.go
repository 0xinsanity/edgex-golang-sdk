/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateCrossWithdraw type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCrossWithdraw{}

// CreateCrossWithdraw 创建跨链提现单-相应
type CreateCrossWithdraw struct {
	// 跨链提现单Id
	CrossWithdrawId *string `json:"crossWithdrawId,omitempty"`
}

// NewCreateCrossWithdraw instantiates a new CreateCrossWithdraw object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCrossWithdraw() *CreateCrossWithdraw {
	this := CreateCrossWithdraw{}
	return &this
}

// NewCreateCrossWithdrawWithDefaults instantiates a new CreateCrossWithdraw object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCrossWithdrawWithDefaults() *CreateCrossWithdraw {
	this := CreateCrossWithdraw{}
	return &this
}

// GetCrossWithdrawId returns the CrossWithdrawId field value if set, zero value otherwise.
func (o *CreateCrossWithdraw) GetCrossWithdrawId() string {
	if o == nil || IsNil(o.CrossWithdrawId) {
		var ret string
		return ret
	}
	return *o.CrossWithdrawId
}

// GetCrossWithdrawIdOk returns a tuple with the CrossWithdrawId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCrossWithdraw) GetCrossWithdrawIdOk() (*string, bool) {
	if o == nil || IsNil(o.CrossWithdrawId) {
		return nil, false
	}
	return o.CrossWithdrawId, true
}

// HasCrossWithdrawId returns a boolean if a field has been set.
func (o *CreateCrossWithdraw) HasCrossWithdrawId() bool {
	if o != nil && !IsNil(o.CrossWithdrawId) {
		return true
	}

	return false
}

// SetCrossWithdrawId gets a reference to the given string and assigns it to the CrossWithdrawId field.
func (o *CreateCrossWithdraw) SetCrossWithdrawId(v string) {
	o.CrossWithdrawId = &v
}

func (o CreateCrossWithdraw) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCrossWithdraw) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CrossWithdrawId) {
		toSerialize["crossWithdrawId"] = o.CrossWithdrawId
	}
	return toSerialize, nil
}

type NullableCreateCrossWithdraw struct {
	value *CreateCrossWithdraw
	isSet bool
}

func (v NullableCreateCrossWithdraw) Get() *CreateCrossWithdraw {
	return v.value
}

func (v *NullableCreateCrossWithdraw) Set(val *CreateCrossWithdraw) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCrossWithdraw) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCrossWithdraw) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCrossWithdraw(val *CreateCrossWithdraw) *NullableCreateCrossWithdraw {
	return &NullableCreateCrossWithdraw{value: val, isSet: true}
}

func (v NullableCreateCrossWithdraw) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCrossWithdraw) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


