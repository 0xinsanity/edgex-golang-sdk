/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CollateralTransaction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CollateralTransaction{}

// CollateralTransaction 抵押品变动明细
type CollateralTransaction struct {
	// 唯一标识
	Id *string `json:"id,omitempty"`
	// 所属用户id
	UserId *string `json:"userId,omitempty"`
	// 所属账户id
	AccountId *string `json:"accountId,omitempty"`
	// 货币id
	CoinId *string `json:"coinId,omitempty"`
	// 明细类型
	Type *string `json:"type,omitempty"`
	// 抵押品变动数量
	DeltaAmount *string `json:"deltaAmount,omitempty"`
	// 老式记账方式余额字段变动数量
	DeltaLegacyAmount *string `json:"deltaLegacyAmount,omitempty"`
	// 变动前的抵押品数量
	BeforeAmount *string `json:"beforeAmount,omitempty"`
	// 变动前的老式记账方式余额字段
	BeforeLegacyAmount *string `json:"beforeLegacyAmount,omitempty"`
	// 成交平仓数量 (正数为买入，负数为卖出)
	FillCloseSize *string `json:"fillCloseSize,omitempty"`
	// 成交平仓价值 (正数为买入，负数为卖出)
	FillCloseValue *string `json:"fillCloseValue,omitempty"`
	// 成交平仓手续费 (一般为零或负数)
	FillCloseFee *string `json:"fillCloseFee,omitempty"`
	// 成交开仓数量 (正数为买入，负数为卖出)
	FillOpenSize *string `json:"fillOpenSize,omitempty"`
	// 成交开仓价值 (正数为买入，负数为卖出)
	FillOpenValue *string `json:"fillOpenValue,omitempty"`
	// 成交开仓手续费 (一般为零或负数)
	FillOpenFee *string `json:"fillOpenFee,omitempty"`
	// 成交价格 (非精确值，仅展示使用)
	FillPrice *string `json:"fillPrice,omitempty"`
	// 清算费 (强平费) (有平仓成交时存在。一般为零或负数)
	LiquidateFee *string `json:"liquidateFee,omitempty"`
	// 平仓已实现盈亏 (有平仓成交时存在。非精确值，仅展示使用)
	RealizePnl *string `json:"realizePnl,omitempty"`
	// 是否是强平成交
	IsLiquidate *bool `json:"isLiquidate,omitempty"`
	// 是否是自动减仓成交
	IsDeleverage *bool `json:"isDeleverage,omitempty"`
	// 资金费率结算时间
	FundingTime *string `json:"fundingTime,omitempty"`
	// 资金费率
	FundingRate *string `json:"fundingRate,omitempty"`
	// 资金费率相关的指数价格
	FundingIndexPrice *string `json:"fundingIndexPrice,omitempty"`
	// 资金费率相关的预言机价格
	FundingOraclePrice *string `json:"fundingOraclePrice,omitempty"`
	// 资金费用结算时仓位大小 (正数为多仓，负数为空仓)
	FundingPositionSize *string `json:"fundingPositionSize,omitempty"`
	// 当 type=DEPOSIT 时，此字段为关联的充值单id
	DepositId *string `json:"depositId,omitempty"`
	// 当 type=WITHDRAW 时，此字段为关联的提现单id
	WithdrawId *string `json:"withdrawId,omitempty"`
	// 当 type=TRANSFER_IN 时，此字段为关联的转账转入单id
	TransferInId *string `json:"transferInId,omitempty"`
	// 当 type=TRANSFER_OUT 时，此字段为关联的转账转出单id
	TransferOutId *string `json:"transferOutId,omitempty"`
	// 当 type=TRANSFER_IN/TRANSFER_OUT 时，此字段为转账原因
	TransferReason *string `json:"transferReason,omitempty"`
	// 当 type=POSITION_BUY/POSITION_SELL/FILL_FEE_INCOME 时，此字段为关联的委托单id
	OrderId *string `json:"orderId,omitempty"`
	// 当 type=POSITION_BUY/POSITION_SELL/FILL_FEE_INCOME 时，此字段为关联的委托单成交明细id
	OrderFillTransactionId *string `json:"orderFillTransactionId,omitempty"`
	// 当 type=FILL_FEE_INCOME 时，此字段为关联的委托单账户id
	OrderAccountId *string `json:"orderAccountId,omitempty"`
	// 当 type=POSITION_BUY/POSITION_SELL/POSITION_FUNDING/FILL_FEE_INCOME 时，关联的仓位合约id
	PositionContractId *string `json:"positionContractId,omitempty"`
	// 当 type=POSITION_BUY/POSITION_SELL/POSITION_FUNDING 时，此字段为关联的仓位流水id
	PositionTransactionId *string `json:"positionTransactionId,omitempty"`
	// 当 type=WITHDRAW 时，此字段为关联的强制提现单id
	ForceWithdrawId *string `json:"forceWithdrawId,omitempty"`
	// 当 type=POSITION_BUY/POSITION_SELL 时，此字段为关联的强制交易单id
	ForceTradeId *string `json:"forceTradeId,omitempty"`
	// 附加类型，供上层业务使用
	ExtraType *string `json:"extraType,omitempty"`
	// 附加数据，json格式，默认为空串
	ExtraDataJson *string `json:"extraDataJson,omitempty"`
	// 当前审查状态
	CensorStatus *string `json:"censorStatus,omitempty"`
	// 审查处理序号。当 censor_status=CENSOR_SUCCESS/CENSOR_FAILURE/L2_APPROVED/L2_REJECT/L2_REJECT_APPROVED 时存在
	CensorTxId *string `json:"censorTxId,omitempty"`
	// 审查处理时间。当 censor_status=CENSOR_SUCCESS/CENSOR_FAILURE/L2_APPROVED/L2_REJECT/L2_REJECT_APPROVED 时存在
	CensorTime *string `json:"censorTime,omitempty"`
	// 审查失败错误码。当 censor_status=CENSOR_FAILURE 时存在
	CensorFailCode *string `json:"censorFailCode,omitempty"`
	// 审查失败原因。当 censor_status=CENSOR_FAILURE 时存在
	CensorFailReason *string `json:"censorFailReason,omitempty"`
	// l2推送交易id。当 censor_status=CENSOR_SUCCESS/L2_APPROVED/L2_REJECT/L2_REJECT_APPROVED 时存在
	L2TxId *string `json:"l2TxId,omitempty"`
	// l2拒绝时间。当 censor_status=L2_REJECT/L2_REJECT_APPROVED 时存在
	L2RejectTime *string `json:"l2RejectTime,omitempty"`
	// l2拒绝错误码。当 censor_status=L2_REJECT/L2_REJECT_APPROVED 时存在
	L2RejectCode *string `json:"l2RejectCode,omitempty"`
	// l2拒绝原因。当 censor_status=L2_REJECT/L2_REJECT_APPROVED 时存在
	L2RejectReason *string `json:"l2RejectReason,omitempty"`
	// l2批次验证时间。当 censor_status=L2_APPROVED/L2_REJECT_APPROVED 时存在
	L2ApprovedTime *string `json:"l2ApprovedTime,omitempty"`
	// 创建时间
	CreatedTime *string `json:"createdTime,omitempty"`
	// 更新时间
	UpdatedTime *string `json:"updatedTime,omitempty"`
}

// NewCollateralTransaction instantiates a new CollateralTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollateralTransaction() *CollateralTransaction {
	this := CollateralTransaction{}
	return &this
}

// NewCollateralTransactionWithDefaults instantiates a new CollateralTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollateralTransactionWithDefaults() *CollateralTransaction {
	this := CollateralTransaction{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CollateralTransaction) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CollateralTransaction) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CollateralTransaction) SetId(v string) {
	o.Id = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *CollateralTransaction) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *CollateralTransaction) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *CollateralTransaction) SetUserId(v string) {
	o.UserId = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *CollateralTransaction) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *CollateralTransaction) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *CollateralTransaction) SetAccountId(v string) {
	o.AccountId = &v
}

// GetCoinId returns the CoinId field value if set, zero value otherwise.
func (o *CollateralTransaction) GetCoinId() string {
	if o == nil || IsNil(o.CoinId) {
		var ret string
		return ret
	}
	return *o.CoinId
}

// GetCoinIdOk returns a tuple with the CoinId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetCoinIdOk() (*string, bool) {
	if o == nil || IsNil(o.CoinId) {
		return nil, false
	}
	return o.CoinId, true
}

// HasCoinId returns a boolean if a field has been set.
func (o *CollateralTransaction) HasCoinId() bool {
	if o != nil && !IsNil(o.CoinId) {
		return true
	}

	return false
}

// SetCoinId gets a reference to the given string and assigns it to the CoinId field.
func (o *CollateralTransaction) SetCoinId(v string) {
	o.CoinId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CollateralTransaction) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CollateralTransaction) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CollateralTransaction) SetType(v string) {
	o.Type = &v
}

// GetDeltaAmount returns the DeltaAmount field value if set, zero value otherwise.
func (o *CollateralTransaction) GetDeltaAmount() string {
	if o == nil || IsNil(o.DeltaAmount) {
		var ret string
		return ret
	}
	return *o.DeltaAmount
}

// GetDeltaAmountOk returns a tuple with the DeltaAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetDeltaAmountOk() (*string, bool) {
	if o == nil || IsNil(o.DeltaAmount) {
		return nil, false
	}
	return o.DeltaAmount, true
}

// HasDeltaAmount returns a boolean if a field has been set.
func (o *CollateralTransaction) HasDeltaAmount() bool {
	if o != nil && !IsNil(o.DeltaAmount) {
		return true
	}

	return false
}

// SetDeltaAmount gets a reference to the given string and assigns it to the DeltaAmount field.
func (o *CollateralTransaction) SetDeltaAmount(v string) {
	o.DeltaAmount = &v
}

// GetDeltaLegacyAmount returns the DeltaLegacyAmount field value if set, zero value otherwise.
func (o *CollateralTransaction) GetDeltaLegacyAmount() string {
	if o == nil || IsNil(o.DeltaLegacyAmount) {
		var ret string
		return ret
	}
	return *o.DeltaLegacyAmount
}

// GetDeltaLegacyAmountOk returns a tuple with the DeltaLegacyAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetDeltaLegacyAmountOk() (*string, bool) {
	if o == nil || IsNil(o.DeltaLegacyAmount) {
		return nil, false
	}
	return o.DeltaLegacyAmount, true
}

// HasDeltaLegacyAmount returns a boolean if a field has been set.
func (o *CollateralTransaction) HasDeltaLegacyAmount() bool {
	if o != nil && !IsNil(o.DeltaLegacyAmount) {
		return true
	}

	return false
}

// SetDeltaLegacyAmount gets a reference to the given string and assigns it to the DeltaLegacyAmount field.
func (o *CollateralTransaction) SetDeltaLegacyAmount(v string) {
	o.DeltaLegacyAmount = &v
}

// GetBeforeAmount returns the BeforeAmount field value if set, zero value otherwise.
func (o *CollateralTransaction) GetBeforeAmount() string {
	if o == nil || IsNil(o.BeforeAmount) {
		var ret string
		return ret
	}
	return *o.BeforeAmount
}

// GetBeforeAmountOk returns a tuple with the BeforeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetBeforeAmountOk() (*string, bool) {
	if o == nil || IsNil(o.BeforeAmount) {
		return nil, false
	}
	return o.BeforeAmount, true
}

// HasBeforeAmount returns a boolean if a field has been set.
func (o *CollateralTransaction) HasBeforeAmount() bool {
	if o != nil && !IsNil(o.BeforeAmount) {
		return true
	}

	return false
}

// SetBeforeAmount gets a reference to the given string and assigns it to the BeforeAmount field.
func (o *CollateralTransaction) SetBeforeAmount(v string) {
	o.BeforeAmount = &v
}

// GetBeforeLegacyAmount returns the BeforeLegacyAmount field value if set, zero value otherwise.
func (o *CollateralTransaction) GetBeforeLegacyAmount() string {
	if o == nil || IsNil(o.BeforeLegacyAmount) {
		var ret string
		return ret
	}
	return *o.BeforeLegacyAmount
}

// GetBeforeLegacyAmountOk returns a tuple with the BeforeLegacyAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetBeforeLegacyAmountOk() (*string, bool) {
	if o == nil || IsNil(o.BeforeLegacyAmount) {
		return nil, false
	}
	return o.BeforeLegacyAmount, true
}

// HasBeforeLegacyAmount returns a boolean if a field has been set.
func (o *CollateralTransaction) HasBeforeLegacyAmount() bool {
	if o != nil && !IsNil(o.BeforeLegacyAmount) {
		return true
	}

	return false
}

// SetBeforeLegacyAmount gets a reference to the given string and assigns it to the BeforeLegacyAmount field.
func (o *CollateralTransaction) SetBeforeLegacyAmount(v string) {
	o.BeforeLegacyAmount = &v
}

// GetFillCloseSize returns the FillCloseSize field value if set, zero value otherwise.
func (o *CollateralTransaction) GetFillCloseSize() string {
	if o == nil || IsNil(o.FillCloseSize) {
		var ret string
		return ret
	}
	return *o.FillCloseSize
}

// GetFillCloseSizeOk returns a tuple with the FillCloseSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetFillCloseSizeOk() (*string, bool) {
	if o == nil || IsNil(o.FillCloseSize) {
		return nil, false
	}
	return o.FillCloseSize, true
}

// HasFillCloseSize returns a boolean if a field has been set.
func (o *CollateralTransaction) HasFillCloseSize() bool {
	if o != nil && !IsNil(o.FillCloseSize) {
		return true
	}

	return false
}

// SetFillCloseSize gets a reference to the given string and assigns it to the FillCloseSize field.
func (o *CollateralTransaction) SetFillCloseSize(v string) {
	o.FillCloseSize = &v
}

// GetFillCloseValue returns the FillCloseValue field value if set, zero value otherwise.
func (o *CollateralTransaction) GetFillCloseValue() string {
	if o == nil || IsNil(o.FillCloseValue) {
		var ret string
		return ret
	}
	return *o.FillCloseValue
}

// GetFillCloseValueOk returns a tuple with the FillCloseValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetFillCloseValueOk() (*string, bool) {
	if o == nil || IsNil(o.FillCloseValue) {
		return nil, false
	}
	return o.FillCloseValue, true
}

// HasFillCloseValue returns a boolean if a field has been set.
func (o *CollateralTransaction) HasFillCloseValue() bool {
	if o != nil && !IsNil(o.FillCloseValue) {
		return true
	}

	return false
}

// SetFillCloseValue gets a reference to the given string and assigns it to the FillCloseValue field.
func (o *CollateralTransaction) SetFillCloseValue(v string) {
	o.FillCloseValue = &v
}

// GetFillCloseFee returns the FillCloseFee field value if set, zero value otherwise.
func (o *CollateralTransaction) GetFillCloseFee() string {
	if o == nil || IsNil(o.FillCloseFee) {
		var ret string
		return ret
	}
	return *o.FillCloseFee
}

// GetFillCloseFeeOk returns a tuple with the FillCloseFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetFillCloseFeeOk() (*string, bool) {
	if o == nil || IsNil(o.FillCloseFee) {
		return nil, false
	}
	return o.FillCloseFee, true
}

// HasFillCloseFee returns a boolean if a field has been set.
func (o *CollateralTransaction) HasFillCloseFee() bool {
	if o != nil && !IsNil(o.FillCloseFee) {
		return true
	}

	return false
}

// SetFillCloseFee gets a reference to the given string and assigns it to the FillCloseFee field.
func (o *CollateralTransaction) SetFillCloseFee(v string) {
	o.FillCloseFee = &v
}

// GetFillOpenSize returns the FillOpenSize field value if set, zero value otherwise.
func (o *CollateralTransaction) GetFillOpenSize() string {
	if o == nil || IsNil(o.FillOpenSize) {
		var ret string
		return ret
	}
	return *o.FillOpenSize
}

// GetFillOpenSizeOk returns a tuple with the FillOpenSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetFillOpenSizeOk() (*string, bool) {
	if o == nil || IsNil(o.FillOpenSize) {
		return nil, false
	}
	return o.FillOpenSize, true
}

// HasFillOpenSize returns a boolean if a field has been set.
func (o *CollateralTransaction) HasFillOpenSize() bool {
	if o != nil && !IsNil(o.FillOpenSize) {
		return true
	}

	return false
}

// SetFillOpenSize gets a reference to the given string and assigns it to the FillOpenSize field.
func (o *CollateralTransaction) SetFillOpenSize(v string) {
	o.FillOpenSize = &v
}

// GetFillOpenValue returns the FillOpenValue field value if set, zero value otherwise.
func (o *CollateralTransaction) GetFillOpenValue() string {
	if o == nil || IsNil(o.FillOpenValue) {
		var ret string
		return ret
	}
	return *o.FillOpenValue
}

// GetFillOpenValueOk returns a tuple with the FillOpenValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetFillOpenValueOk() (*string, bool) {
	if o == nil || IsNil(o.FillOpenValue) {
		return nil, false
	}
	return o.FillOpenValue, true
}

// HasFillOpenValue returns a boolean if a field has been set.
func (o *CollateralTransaction) HasFillOpenValue() bool {
	if o != nil && !IsNil(o.FillOpenValue) {
		return true
	}

	return false
}

// SetFillOpenValue gets a reference to the given string and assigns it to the FillOpenValue field.
func (o *CollateralTransaction) SetFillOpenValue(v string) {
	o.FillOpenValue = &v
}

// GetFillOpenFee returns the FillOpenFee field value if set, zero value otherwise.
func (o *CollateralTransaction) GetFillOpenFee() string {
	if o == nil || IsNil(o.FillOpenFee) {
		var ret string
		return ret
	}
	return *o.FillOpenFee
}

// GetFillOpenFeeOk returns a tuple with the FillOpenFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetFillOpenFeeOk() (*string, bool) {
	if o == nil || IsNil(o.FillOpenFee) {
		return nil, false
	}
	return o.FillOpenFee, true
}

// HasFillOpenFee returns a boolean if a field has been set.
func (o *CollateralTransaction) HasFillOpenFee() bool {
	if o != nil && !IsNil(o.FillOpenFee) {
		return true
	}

	return false
}

// SetFillOpenFee gets a reference to the given string and assigns it to the FillOpenFee field.
func (o *CollateralTransaction) SetFillOpenFee(v string) {
	o.FillOpenFee = &v
}

// GetFillPrice returns the FillPrice field value if set, zero value otherwise.
func (o *CollateralTransaction) GetFillPrice() string {
	if o == nil || IsNil(o.FillPrice) {
		var ret string
		return ret
	}
	return *o.FillPrice
}

// GetFillPriceOk returns a tuple with the FillPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetFillPriceOk() (*string, bool) {
	if o == nil || IsNil(o.FillPrice) {
		return nil, false
	}
	return o.FillPrice, true
}

// HasFillPrice returns a boolean if a field has been set.
func (o *CollateralTransaction) HasFillPrice() bool {
	if o != nil && !IsNil(o.FillPrice) {
		return true
	}

	return false
}

// SetFillPrice gets a reference to the given string and assigns it to the FillPrice field.
func (o *CollateralTransaction) SetFillPrice(v string) {
	o.FillPrice = &v
}

// GetLiquidateFee returns the LiquidateFee field value if set, zero value otherwise.
func (o *CollateralTransaction) GetLiquidateFee() string {
	if o == nil || IsNil(o.LiquidateFee) {
		var ret string
		return ret
	}
	return *o.LiquidateFee
}

// GetLiquidateFeeOk returns a tuple with the LiquidateFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetLiquidateFeeOk() (*string, bool) {
	if o == nil || IsNil(o.LiquidateFee) {
		return nil, false
	}
	return o.LiquidateFee, true
}

// HasLiquidateFee returns a boolean if a field has been set.
func (o *CollateralTransaction) HasLiquidateFee() bool {
	if o != nil && !IsNil(o.LiquidateFee) {
		return true
	}

	return false
}

// SetLiquidateFee gets a reference to the given string and assigns it to the LiquidateFee field.
func (o *CollateralTransaction) SetLiquidateFee(v string) {
	o.LiquidateFee = &v
}

// GetRealizePnl returns the RealizePnl field value if set, zero value otherwise.
func (o *CollateralTransaction) GetRealizePnl() string {
	if o == nil || IsNil(o.RealizePnl) {
		var ret string
		return ret
	}
	return *o.RealizePnl
}

// GetRealizePnlOk returns a tuple with the RealizePnl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetRealizePnlOk() (*string, bool) {
	if o == nil || IsNil(o.RealizePnl) {
		return nil, false
	}
	return o.RealizePnl, true
}

// HasRealizePnl returns a boolean if a field has been set.
func (o *CollateralTransaction) HasRealizePnl() bool {
	if o != nil && !IsNil(o.RealizePnl) {
		return true
	}

	return false
}

// SetRealizePnl gets a reference to the given string and assigns it to the RealizePnl field.
func (o *CollateralTransaction) SetRealizePnl(v string) {
	o.RealizePnl = &v
}

// GetIsLiquidate returns the IsLiquidate field value if set, zero value otherwise.
func (o *CollateralTransaction) GetIsLiquidate() bool {
	if o == nil || IsNil(o.IsLiquidate) {
		var ret bool
		return ret
	}
	return *o.IsLiquidate
}

// GetIsLiquidateOk returns a tuple with the IsLiquidate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetIsLiquidateOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLiquidate) {
		return nil, false
	}
	return o.IsLiquidate, true
}

// HasIsLiquidate returns a boolean if a field has been set.
func (o *CollateralTransaction) HasIsLiquidate() bool {
	if o != nil && !IsNil(o.IsLiquidate) {
		return true
	}

	return false
}

// SetIsLiquidate gets a reference to the given bool and assigns it to the IsLiquidate field.
func (o *CollateralTransaction) SetIsLiquidate(v bool) {
	o.IsLiquidate = &v
}

// GetIsDeleverage returns the IsDeleverage field value if set, zero value otherwise.
func (o *CollateralTransaction) GetIsDeleverage() bool {
	if o == nil || IsNil(o.IsDeleverage) {
		var ret bool
		return ret
	}
	return *o.IsDeleverage
}

// GetIsDeleverageOk returns a tuple with the IsDeleverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetIsDeleverageOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleverage) {
		return nil, false
	}
	return o.IsDeleverage, true
}

// HasIsDeleverage returns a boolean if a field has been set.
func (o *CollateralTransaction) HasIsDeleverage() bool {
	if o != nil && !IsNil(o.IsDeleverage) {
		return true
	}

	return false
}

// SetIsDeleverage gets a reference to the given bool and assigns it to the IsDeleverage field.
func (o *CollateralTransaction) SetIsDeleverage(v bool) {
	o.IsDeleverage = &v
}

// GetFundingTime returns the FundingTime field value if set, zero value otherwise.
func (o *CollateralTransaction) GetFundingTime() string {
	if o == nil || IsNil(o.FundingTime) {
		var ret string
		return ret
	}
	return *o.FundingTime
}

// GetFundingTimeOk returns a tuple with the FundingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetFundingTimeOk() (*string, bool) {
	if o == nil || IsNil(o.FundingTime) {
		return nil, false
	}
	return o.FundingTime, true
}

// HasFundingTime returns a boolean if a field has been set.
func (o *CollateralTransaction) HasFundingTime() bool {
	if o != nil && !IsNil(o.FundingTime) {
		return true
	}

	return false
}

// SetFundingTime gets a reference to the given string and assigns it to the FundingTime field.
func (o *CollateralTransaction) SetFundingTime(v string) {
	o.FundingTime = &v
}

// GetFundingRate returns the FundingRate field value if set, zero value otherwise.
func (o *CollateralTransaction) GetFundingRate() string {
	if o == nil || IsNil(o.FundingRate) {
		var ret string
		return ret
	}
	return *o.FundingRate
}

// GetFundingRateOk returns a tuple with the FundingRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetFundingRateOk() (*string, bool) {
	if o == nil || IsNil(o.FundingRate) {
		return nil, false
	}
	return o.FundingRate, true
}

// HasFundingRate returns a boolean if a field has been set.
func (o *CollateralTransaction) HasFundingRate() bool {
	if o != nil && !IsNil(o.FundingRate) {
		return true
	}

	return false
}

// SetFundingRate gets a reference to the given string and assigns it to the FundingRate field.
func (o *CollateralTransaction) SetFundingRate(v string) {
	o.FundingRate = &v
}

// GetFundingIndexPrice returns the FundingIndexPrice field value if set, zero value otherwise.
func (o *CollateralTransaction) GetFundingIndexPrice() string {
	if o == nil || IsNil(o.FundingIndexPrice) {
		var ret string
		return ret
	}
	return *o.FundingIndexPrice
}

// GetFundingIndexPriceOk returns a tuple with the FundingIndexPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetFundingIndexPriceOk() (*string, bool) {
	if o == nil || IsNil(o.FundingIndexPrice) {
		return nil, false
	}
	return o.FundingIndexPrice, true
}

// HasFundingIndexPrice returns a boolean if a field has been set.
func (o *CollateralTransaction) HasFundingIndexPrice() bool {
	if o != nil && !IsNil(o.FundingIndexPrice) {
		return true
	}

	return false
}

// SetFundingIndexPrice gets a reference to the given string and assigns it to the FundingIndexPrice field.
func (o *CollateralTransaction) SetFundingIndexPrice(v string) {
	o.FundingIndexPrice = &v
}

// GetFundingOraclePrice returns the FundingOraclePrice field value if set, zero value otherwise.
func (o *CollateralTransaction) GetFundingOraclePrice() string {
	if o == nil || IsNil(o.FundingOraclePrice) {
		var ret string
		return ret
	}
	return *o.FundingOraclePrice
}

// GetFundingOraclePriceOk returns a tuple with the FundingOraclePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetFundingOraclePriceOk() (*string, bool) {
	if o == nil || IsNil(o.FundingOraclePrice) {
		return nil, false
	}
	return o.FundingOraclePrice, true
}

// HasFundingOraclePrice returns a boolean if a field has been set.
func (o *CollateralTransaction) HasFundingOraclePrice() bool {
	if o != nil && !IsNil(o.FundingOraclePrice) {
		return true
	}

	return false
}

// SetFundingOraclePrice gets a reference to the given string and assigns it to the FundingOraclePrice field.
func (o *CollateralTransaction) SetFundingOraclePrice(v string) {
	o.FundingOraclePrice = &v
}

// GetFundingPositionSize returns the FundingPositionSize field value if set, zero value otherwise.
func (o *CollateralTransaction) GetFundingPositionSize() string {
	if o == nil || IsNil(o.FundingPositionSize) {
		var ret string
		return ret
	}
	return *o.FundingPositionSize
}

// GetFundingPositionSizeOk returns a tuple with the FundingPositionSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetFundingPositionSizeOk() (*string, bool) {
	if o == nil || IsNil(o.FundingPositionSize) {
		return nil, false
	}
	return o.FundingPositionSize, true
}

// HasFundingPositionSize returns a boolean if a field has been set.
func (o *CollateralTransaction) HasFundingPositionSize() bool {
	if o != nil && !IsNil(o.FundingPositionSize) {
		return true
	}

	return false
}

// SetFundingPositionSize gets a reference to the given string and assigns it to the FundingPositionSize field.
func (o *CollateralTransaction) SetFundingPositionSize(v string) {
	o.FundingPositionSize = &v
}

// GetDepositId returns the DepositId field value if set, zero value otherwise.
func (o *CollateralTransaction) GetDepositId() string {
	if o == nil || IsNil(o.DepositId) {
		var ret string
		return ret
	}
	return *o.DepositId
}

// GetDepositIdOk returns a tuple with the DepositId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetDepositIdOk() (*string, bool) {
	if o == nil || IsNil(o.DepositId) {
		return nil, false
	}
	return o.DepositId, true
}

// HasDepositId returns a boolean if a field has been set.
func (o *CollateralTransaction) HasDepositId() bool {
	if o != nil && !IsNil(o.DepositId) {
		return true
	}

	return false
}

// SetDepositId gets a reference to the given string and assigns it to the DepositId field.
func (o *CollateralTransaction) SetDepositId(v string) {
	o.DepositId = &v
}

// GetWithdrawId returns the WithdrawId field value if set, zero value otherwise.
func (o *CollateralTransaction) GetWithdrawId() string {
	if o == nil || IsNil(o.WithdrawId) {
		var ret string
		return ret
	}
	return *o.WithdrawId
}

// GetWithdrawIdOk returns a tuple with the WithdrawId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetWithdrawIdOk() (*string, bool) {
	if o == nil || IsNil(o.WithdrawId) {
		return nil, false
	}
	return o.WithdrawId, true
}

// HasWithdrawId returns a boolean if a field has been set.
func (o *CollateralTransaction) HasWithdrawId() bool {
	if o != nil && !IsNil(o.WithdrawId) {
		return true
	}

	return false
}

// SetWithdrawId gets a reference to the given string and assigns it to the WithdrawId field.
func (o *CollateralTransaction) SetWithdrawId(v string) {
	o.WithdrawId = &v
}

// GetTransferInId returns the TransferInId field value if set, zero value otherwise.
func (o *CollateralTransaction) GetTransferInId() string {
	if o == nil || IsNil(o.TransferInId) {
		var ret string
		return ret
	}
	return *o.TransferInId
}

// GetTransferInIdOk returns a tuple with the TransferInId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetTransferInIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransferInId) {
		return nil, false
	}
	return o.TransferInId, true
}

// HasTransferInId returns a boolean if a field has been set.
func (o *CollateralTransaction) HasTransferInId() bool {
	if o != nil && !IsNil(o.TransferInId) {
		return true
	}

	return false
}

// SetTransferInId gets a reference to the given string and assigns it to the TransferInId field.
func (o *CollateralTransaction) SetTransferInId(v string) {
	o.TransferInId = &v
}

// GetTransferOutId returns the TransferOutId field value if set, zero value otherwise.
func (o *CollateralTransaction) GetTransferOutId() string {
	if o == nil || IsNil(o.TransferOutId) {
		var ret string
		return ret
	}
	return *o.TransferOutId
}

// GetTransferOutIdOk returns a tuple with the TransferOutId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetTransferOutIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransferOutId) {
		return nil, false
	}
	return o.TransferOutId, true
}

// HasTransferOutId returns a boolean if a field has been set.
func (o *CollateralTransaction) HasTransferOutId() bool {
	if o != nil && !IsNil(o.TransferOutId) {
		return true
	}

	return false
}

// SetTransferOutId gets a reference to the given string and assigns it to the TransferOutId field.
func (o *CollateralTransaction) SetTransferOutId(v string) {
	o.TransferOutId = &v
}

// GetTransferReason returns the TransferReason field value if set, zero value otherwise.
func (o *CollateralTransaction) GetTransferReason() string {
	if o == nil || IsNil(o.TransferReason) {
		var ret string
		return ret
	}
	return *o.TransferReason
}

// GetTransferReasonOk returns a tuple with the TransferReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetTransferReasonOk() (*string, bool) {
	if o == nil || IsNil(o.TransferReason) {
		return nil, false
	}
	return o.TransferReason, true
}

// HasTransferReason returns a boolean if a field has been set.
func (o *CollateralTransaction) HasTransferReason() bool {
	if o != nil && !IsNil(o.TransferReason) {
		return true
	}

	return false
}

// SetTransferReason gets a reference to the given string and assigns it to the TransferReason field.
func (o *CollateralTransaction) SetTransferReason(v string) {
	o.TransferReason = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *CollateralTransaction) GetOrderId() string {
	if o == nil || IsNil(o.OrderId) {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *CollateralTransaction) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *CollateralTransaction) SetOrderId(v string) {
	o.OrderId = &v
}

// GetOrderFillTransactionId returns the OrderFillTransactionId field value if set, zero value otherwise.
func (o *CollateralTransaction) GetOrderFillTransactionId() string {
	if o == nil || IsNil(o.OrderFillTransactionId) {
		var ret string
		return ret
	}
	return *o.OrderFillTransactionId
}

// GetOrderFillTransactionIdOk returns a tuple with the OrderFillTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetOrderFillTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderFillTransactionId) {
		return nil, false
	}
	return o.OrderFillTransactionId, true
}

// HasOrderFillTransactionId returns a boolean if a field has been set.
func (o *CollateralTransaction) HasOrderFillTransactionId() bool {
	if o != nil && !IsNil(o.OrderFillTransactionId) {
		return true
	}

	return false
}

// SetOrderFillTransactionId gets a reference to the given string and assigns it to the OrderFillTransactionId field.
func (o *CollateralTransaction) SetOrderFillTransactionId(v string) {
	o.OrderFillTransactionId = &v
}

// GetOrderAccountId returns the OrderAccountId field value if set, zero value otherwise.
func (o *CollateralTransaction) GetOrderAccountId() string {
	if o == nil || IsNil(o.OrderAccountId) {
		var ret string
		return ret
	}
	return *o.OrderAccountId
}

// GetOrderAccountIdOk returns a tuple with the OrderAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetOrderAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderAccountId) {
		return nil, false
	}
	return o.OrderAccountId, true
}

// HasOrderAccountId returns a boolean if a field has been set.
func (o *CollateralTransaction) HasOrderAccountId() bool {
	if o != nil && !IsNil(o.OrderAccountId) {
		return true
	}

	return false
}

// SetOrderAccountId gets a reference to the given string and assigns it to the OrderAccountId field.
func (o *CollateralTransaction) SetOrderAccountId(v string) {
	o.OrderAccountId = &v
}

// GetPositionContractId returns the PositionContractId field value if set, zero value otherwise.
func (o *CollateralTransaction) GetPositionContractId() string {
	if o == nil || IsNil(o.PositionContractId) {
		var ret string
		return ret
	}
	return *o.PositionContractId
}

// GetPositionContractIdOk returns a tuple with the PositionContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetPositionContractIdOk() (*string, bool) {
	if o == nil || IsNil(o.PositionContractId) {
		return nil, false
	}
	return o.PositionContractId, true
}

// HasPositionContractId returns a boolean if a field has been set.
func (o *CollateralTransaction) HasPositionContractId() bool {
	if o != nil && !IsNil(o.PositionContractId) {
		return true
	}

	return false
}

// SetPositionContractId gets a reference to the given string and assigns it to the PositionContractId field.
func (o *CollateralTransaction) SetPositionContractId(v string) {
	o.PositionContractId = &v
}

// GetPositionTransactionId returns the PositionTransactionId field value if set, zero value otherwise.
func (o *CollateralTransaction) GetPositionTransactionId() string {
	if o == nil || IsNil(o.PositionTransactionId) {
		var ret string
		return ret
	}
	return *o.PositionTransactionId
}

// GetPositionTransactionIdOk returns a tuple with the PositionTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetPositionTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.PositionTransactionId) {
		return nil, false
	}
	return o.PositionTransactionId, true
}

// HasPositionTransactionId returns a boolean if a field has been set.
func (o *CollateralTransaction) HasPositionTransactionId() bool {
	if o != nil && !IsNil(o.PositionTransactionId) {
		return true
	}

	return false
}

// SetPositionTransactionId gets a reference to the given string and assigns it to the PositionTransactionId field.
func (o *CollateralTransaction) SetPositionTransactionId(v string) {
	o.PositionTransactionId = &v
}

// GetForceWithdrawId returns the ForceWithdrawId field value if set, zero value otherwise.
func (o *CollateralTransaction) GetForceWithdrawId() string {
	if o == nil || IsNil(o.ForceWithdrawId) {
		var ret string
		return ret
	}
	return *o.ForceWithdrawId
}

// GetForceWithdrawIdOk returns a tuple with the ForceWithdrawId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetForceWithdrawIdOk() (*string, bool) {
	if o == nil || IsNil(o.ForceWithdrawId) {
		return nil, false
	}
	return o.ForceWithdrawId, true
}

// HasForceWithdrawId returns a boolean if a field has been set.
func (o *CollateralTransaction) HasForceWithdrawId() bool {
	if o != nil && !IsNil(o.ForceWithdrawId) {
		return true
	}

	return false
}

// SetForceWithdrawId gets a reference to the given string and assigns it to the ForceWithdrawId field.
func (o *CollateralTransaction) SetForceWithdrawId(v string) {
	o.ForceWithdrawId = &v
}

// GetForceTradeId returns the ForceTradeId field value if set, zero value otherwise.
func (o *CollateralTransaction) GetForceTradeId() string {
	if o == nil || IsNil(o.ForceTradeId) {
		var ret string
		return ret
	}
	return *o.ForceTradeId
}

// GetForceTradeIdOk returns a tuple with the ForceTradeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetForceTradeIdOk() (*string, bool) {
	if o == nil || IsNil(o.ForceTradeId) {
		return nil, false
	}
	return o.ForceTradeId, true
}

// HasForceTradeId returns a boolean if a field has been set.
func (o *CollateralTransaction) HasForceTradeId() bool {
	if o != nil && !IsNil(o.ForceTradeId) {
		return true
	}

	return false
}

// SetForceTradeId gets a reference to the given string and assigns it to the ForceTradeId field.
func (o *CollateralTransaction) SetForceTradeId(v string) {
	o.ForceTradeId = &v
}

// GetExtraType returns the ExtraType field value if set, zero value otherwise.
func (o *CollateralTransaction) GetExtraType() string {
	if o == nil || IsNil(o.ExtraType) {
		var ret string
		return ret
	}
	return *o.ExtraType
}

// GetExtraTypeOk returns a tuple with the ExtraType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetExtraTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraType) {
		return nil, false
	}
	return o.ExtraType, true
}

// HasExtraType returns a boolean if a field has been set.
func (o *CollateralTransaction) HasExtraType() bool {
	if o != nil && !IsNil(o.ExtraType) {
		return true
	}

	return false
}

// SetExtraType gets a reference to the given string and assigns it to the ExtraType field.
func (o *CollateralTransaction) SetExtraType(v string) {
	o.ExtraType = &v
}

// GetExtraDataJson returns the ExtraDataJson field value if set, zero value otherwise.
func (o *CollateralTransaction) GetExtraDataJson() string {
	if o == nil || IsNil(o.ExtraDataJson) {
		var ret string
		return ret
	}
	return *o.ExtraDataJson
}

// GetExtraDataJsonOk returns a tuple with the ExtraDataJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetExtraDataJsonOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraDataJson) {
		return nil, false
	}
	return o.ExtraDataJson, true
}

// HasExtraDataJson returns a boolean if a field has been set.
func (o *CollateralTransaction) HasExtraDataJson() bool {
	if o != nil && !IsNil(o.ExtraDataJson) {
		return true
	}

	return false
}

// SetExtraDataJson gets a reference to the given string and assigns it to the ExtraDataJson field.
func (o *CollateralTransaction) SetExtraDataJson(v string) {
	o.ExtraDataJson = &v
}

// GetCensorStatus returns the CensorStatus field value if set, zero value otherwise.
func (o *CollateralTransaction) GetCensorStatus() string {
	if o == nil || IsNil(o.CensorStatus) {
		var ret string
		return ret
	}
	return *o.CensorStatus
}

// GetCensorStatusOk returns a tuple with the CensorStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetCensorStatusOk() (*string, bool) {
	if o == nil || IsNil(o.CensorStatus) {
		return nil, false
	}
	return o.CensorStatus, true
}

// HasCensorStatus returns a boolean if a field has been set.
func (o *CollateralTransaction) HasCensorStatus() bool {
	if o != nil && !IsNil(o.CensorStatus) {
		return true
	}

	return false
}

// SetCensorStatus gets a reference to the given string and assigns it to the CensorStatus field.
func (o *CollateralTransaction) SetCensorStatus(v string) {
	o.CensorStatus = &v
}

// GetCensorTxId returns the CensorTxId field value if set, zero value otherwise.
func (o *CollateralTransaction) GetCensorTxId() string {
	if o == nil || IsNil(o.CensorTxId) {
		var ret string
		return ret
	}
	return *o.CensorTxId
}

// GetCensorTxIdOk returns a tuple with the CensorTxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetCensorTxIdOk() (*string, bool) {
	if o == nil || IsNil(o.CensorTxId) {
		return nil, false
	}
	return o.CensorTxId, true
}

// HasCensorTxId returns a boolean if a field has been set.
func (o *CollateralTransaction) HasCensorTxId() bool {
	if o != nil && !IsNil(o.CensorTxId) {
		return true
	}

	return false
}

// SetCensorTxId gets a reference to the given string and assigns it to the CensorTxId field.
func (o *CollateralTransaction) SetCensorTxId(v string) {
	o.CensorTxId = &v
}

// GetCensorTime returns the CensorTime field value if set, zero value otherwise.
func (o *CollateralTransaction) GetCensorTime() string {
	if o == nil || IsNil(o.CensorTime) {
		var ret string
		return ret
	}
	return *o.CensorTime
}

// GetCensorTimeOk returns a tuple with the CensorTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetCensorTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CensorTime) {
		return nil, false
	}
	return o.CensorTime, true
}

// HasCensorTime returns a boolean if a field has been set.
func (o *CollateralTransaction) HasCensorTime() bool {
	if o != nil && !IsNil(o.CensorTime) {
		return true
	}

	return false
}

// SetCensorTime gets a reference to the given string and assigns it to the CensorTime field.
func (o *CollateralTransaction) SetCensorTime(v string) {
	o.CensorTime = &v
}

// GetCensorFailCode returns the CensorFailCode field value if set, zero value otherwise.
func (o *CollateralTransaction) GetCensorFailCode() string {
	if o == nil || IsNil(o.CensorFailCode) {
		var ret string
		return ret
	}
	return *o.CensorFailCode
}

// GetCensorFailCodeOk returns a tuple with the CensorFailCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetCensorFailCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CensorFailCode) {
		return nil, false
	}
	return o.CensorFailCode, true
}

// HasCensorFailCode returns a boolean if a field has been set.
func (o *CollateralTransaction) HasCensorFailCode() bool {
	if o != nil && !IsNil(o.CensorFailCode) {
		return true
	}

	return false
}

// SetCensorFailCode gets a reference to the given string and assigns it to the CensorFailCode field.
func (o *CollateralTransaction) SetCensorFailCode(v string) {
	o.CensorFailCode = &v
}

// GetCensorFailReason returns the CensorFailReason field value if set, zero value otherwise.
func (o *CollateralTransaction) GetCensorFailReason() string {
	if o == nil || IsNil(o.CensorFailReason) {
		var ret string
		return ret
	}
	return *o.CensorFailReason
}

// GetCensorFailReasonOk returns a tuple with the CensorFailReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetCensorFailReasonOk() (*string, bool) {
	if o == nil || IsNil(o.CensorFailReason) {
		return nil, false
	}
	return o.CensorFailReason, true
}

// HasCensorFailReason returns a boolean if a field has been set.
func (o *CollateralTransaction) HasCensorFailReason() bool {
	if o != nil && !IsNil(o.CensorFailReason) {
		return true
	}

	return false
}

// SetCensorFailReason gets a reference to the given string and assigns it to the CensorFailReason field.
func (o *CollateralTransaction) SetCensorFailReason(v string) {
	o.CensorFailReason = &v
}

// GetL2TxId returns the L2TxId field value if set, zero value otherwise.
func (o *CollateralTransaction) GetL2TxId() string {
	if o == nil || IsNil(o.L2TxId) {
		var ret string
		return ret
	}
	return *o.L2TxId
}

// GetL2TxIdOk returns a tuple with the L2TxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetL2TxIdOk() (*string, bool) {
	if o == nil || IsNil(o.L2TxId) {
		return nil, false
	}
	return o.L2TxId, true
}

// HasL2TxId returns a boolean if a field has been set.
func (o *CollateralTransaction) HasL2TxId() bool {
	if o != nil && !IsNil(o.L2TxId) {
		return true
	}

	return false
}

// SetL2TxId gets a reference to the given string and assigns it to the L2TxId field.
func (o *CollateralTransaction) SetL2TxId(v string) {
	o.L2TxId = &v
}

// GetL2RejectTime returns the L2RejectTime field value if set, zero value otherwise.
func (o *CollateralTransaction) GetL2RejectTime() string {
	if o == nil || IsNil(o.L2RejectTime) {
		var ret string
		return ret
	}
	return *o.L2RejectTime
}

// GetL2RejectTimeOk returns a tuple with the L2RejectTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetL2RejectTimeOk() (*string, bool) {
	if o == nil || IsNil(o.L2RejectTime) {
		return nil, false
	}
	return o.L2RejectTime, true
}

// HasL2RejectTime returns a boolean if a field has been set.
func (o *CollateralTransaction) HasL2RejectTime() bool {
	if o != nil && !IsNil(o.L2RejectTime) {
		return true
	}

	return false
}

// SetL2RejectTime gets a reference to the given string and assigns it to the L2RejectTime field.
func (o *CollateralTransaction) SetL2RejectTime(v string) {
	o.L2RejectTime = &v
}

// GetL2RejectCode returns the L2RejectCode field value if set, zero value otherwise.
func (o *CollateralTransaction) GetL2RejectCode() string {
	if o == nil || IsNil(o.L2RejectCode) {
		var ret string
		return ret
	}
	return *o.L2RejectCode
}

// GetL2RejectCodeOk returns a tuple with the L2RejectCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetL2RejectCodeOk() (*string, bool) {
	if o == nil || IsNil(o.L2RejectCode) {
		return nil, false
	}
	return o.L2RejectCode, true
}

// HasL2RejectCode returns a boolean if a field has been set.
func (o *CollateralTransaction) HasL2RejectCode() bool {
	if o != nil && !IsNil(o.L2RejectCode) {
		return true
	}

	return false
}

// SetL2RejectCode gets a reference to the given string and assigns it to the L2RejectCode field.
func (o *CollateralTransaction) SetL2RejectCode(v string) {
	o.L2RejectCode = &v
}

// GetL2RejectReason returns the L2RejectReason field value if set, zero value otherwise.
func (o *CollateralTransaction) GetL2RejectReason() string {
	if o == nil || IsNil(o.L2RejectReason) {
		var ret string
		return ret
	}
	return *o.L2RejectReason
}

// GetL2RejectReasonOk returns a tuple with the L2RejectReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetL2RejectReasonOk() (*string, bool) {
	if o == nil || IsNil(o.L2RejectReason) {
		return nil, false
	}
	return o.L2RejectReason, true
}

// HasL2RejectReason returns a boolean if a field has been set.
func (o *CollateralTransaction) HasL2RejectReason() bool {
	if o != nil && !IsNil(o.L2RejectReason) {
		return true
	}

	return false
}

// SetL2RejectReason gets a reference to the given string and assigns it to the L2RejectReason field.
func (o *CollateralTransaction) SetL2RejectReason(v string) {
	o.L2RejectReason = &v
}

// GetL2ApprovedTime returns the L2ApprovedTime field value if set, zero value otherwise.
func (o *CollateralTransaction) GetL2ApprovedTime() string {
	if o == nil || IsNil(o.L2ApprovedTime) {
		var ret string
		return ret
	}
	return *o.L2ApprovedTime
}

// GetL2ApprovedTimeOk returns a tuple with the L2ApprovedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetL2ApprovedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.L2ApprovedTime) {
		return nil, false
	}
	return o.L2ApprovedTime, true
}

// HasL2ApprovedTime returns a boolean if a field has been set.
func (o *CollateralTransaction) HasL2ApprovedTime() bool {
	if o != nil && !IsNil(o.L2ApprovedTime) {
		return true
	}

	return false
}

// SetL2ApprovedTime gets a reference to the given string and assigns it to the L2ApprovedTime field.
func (o *CollateralTransaction) SetL2ApprovedTime(v string) {
	o.L2ApprovedTime = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *CollateralTransaction) GetCreatedTime() string {
	if o == nil || IsNil(o.CreatedTime) {
		var ret string
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetCreatedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *CollateralTransaction) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given string and assigns it to the CreatedTime field.
func (o *CollateralTransaction) SetCreatedTime(v string) {
	o.CreatedTime = &v
}

// GetUpdatedTime returns the UpdatedTime field value if set, zero value otherwise.
func (o *CollateralTransaction) GetUpdatedTime() string {
	if o == nil || IsNil(o.UpdatedTime) {
		var ret string
		return ret
	}
	return *o.UpdatedTime
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollateralTransaction) GetUpdatedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedTime) {
		return nil, false
	}
	return o.UpdatedTime, true
}

// HasUpdatedTime returns a boolean if a field has been set.
func (o *CollateralTransaction) HasUpdatedTime() bool {
	if o != nil && !IsNil(o.UpdatedTime) {
		return true
	}

	return false
}

// SetUpdatedTime gets a reference to the given string and assigns it to the UpdatedTime field.
func (o *CollateralTransaction) SetUpdatedTime(v string) {
	o.UpdatedTime = &v
}

func (o CollateralTransaction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CollateralTransaction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.CoinId) {
		toSerialize["coinId"] = o.CoinId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.DeltaAmount) {
		toSerialize["deltaAmount"] = o.DeltaAmount
	}
	if !IsNil(o.DeltaLegacyAmount) {
		toSerialize["deltaLegacyAmount"] = o.DeltaLegacyAmount
	}
	if !IsNil(o.BeforeAmount) {
		toSerialize["beforeAmount"] = o.BeforeAmount
	}
	if !IsNil(o.BeforeLegacyAmount) {
		toSerialize["beforeLegacyAmount"] = o.BeforeLegacyAmount
	}
	if !IsNil(o.FillCloseSize) {
		toSerialize["fillCloseSize"] = o.FillCloseSize
	}
	if !IsNil(o.FillCloseValue) {
		toSerialize["fillCloseValue"] = o.FillCloseValue
	}
	if !IsNil(o.FillCloseFee) {
		toSerialize["fillCloseFee"] = o.FillCloseFee
	}
	if !IsNil(o.FillOpenSize) {
		toSerialize["fillOpenSize"] = o.FillOpenSize
	}
	if !IsNil(o.FillOpenValue) {
		toSerialize["fillOpenValue"] = o.FillOpenValue
	}
	if !IsNil(o.FillOpenFee) {
		toSerialize["fillOpenFee"] = o.FillOpenFee
	}
	if !IsNil(o.FillPrice) {
		toSerialize["fillPrice"] = o.FillPrice
	}
	if !IsNil(o.LiquidateFee) {
		toSerialize["liquidateFee"] = o.LiquidateFee
	}
	if !IsNil(o.RealizePnl) {
		toSerialize["realizePnl"] = o.RealizePnl
	}
	if !IsNil(o.IsLiquidate) {
		toSerialize["isLiquidate"] = o.IsLiquidate
	}
	if !IsNil(o.IsDeleverage) {
		toSerialize["isDeleverage"] = o.IsDeleverage
	}
	if !IsNil(o.FundingTime) {
		toSerialize["fundingTime"] = o.FundingTime
	}
	if !IsNil(o.FundingRate) {
		toSerialize["fundingRate"] = o.FundingRate
	}
	if !IsNil(o.FundingIndexPrice) {
		toSerialize["fundingIndexPrice"] = o.FundingIndexPrice
	}
	if !IsNil(o.FundingOraclePrice) {
		toSerialize["fundingOraclePrice"] = o.FundingOraclePrice
	}
	if !IsNil(o.FundingPositionSize) {
		toSerialize["fundingPositionSize"] = o.FundingPositionSize
	}
	if !IsNil(o.DepositId) {
		toSerialize["depositId"] = o.DepositId
	}
	if !IsNil(o.WithdrawId) {
		toSerialize["withdrawId"] = o.WithdrawId
	}
	if !IsNil(o.TransferInId) {
		toSerialize["transferInId"] = o.TransferInId
	}
	if !IsNil(o.TransferOutId) {
		toSerialize["transferOutId"] = o.TransferOutId
	}
	if !IsNil(o.TransferReason) {
		toSerialize["transferReason"] = o.TransferReason
	}
	if !IsNil(o.OrderId) {
		toSerialize["orderId"] = o.OrderId
	}
	if !IsNil(o.OrderFillTransactionId) {
		toSerialize["orderFillTransactionId"] = o.OrderFillTransactionId
	}
	if !IsNil(o.OrderAccountId) {
		toSerialize["orderAccountId"] = o.OrderAccountId
	}
	if !IsNil(o.PositionContractId) {
		toSerialize["positionContractId"] = o.PositionContractId
	}
	if !IsNil(o.PositionTransactionId) {
		toSerialize["positionTransactionId"] = o.PositionTransactionId
	}
	if !IsNil(o.ForceWithdrawId) {
		toSerialize["forceWithdrawId"] = o.ForceWithdrawId
	}
	if !IsNil(o.ForceTradeId) {
		toSerialize["forceTradeId"] = o.ForceTradeId
	}
	if !IsNil(o.ExtraType) {
		toSerialize["extraType"] = o.ExtraType
	}
	if !IsNil(o.ExtraDataJson) {
		toSerialize["extraDataJson"] = o.ExtraDataJson
	}
	if !IsNil(o.CensorStatus) {
		toSerialize["censorStatus"] = o.CensorStatus
	}
	if !IsNil(o.CensorTxId) {
		toSerialize["censorTxId"] = o.CensorTxId
	}
	if !IsNil(o.CensorTime) {
		toSerialize["censorTime"] = o.CensorTime
	}
	if !IsNil(o.CensorFailCode) {
		toSerialize["censorFailCode"] = o.CensorFailCode
	}
	if !IsNil(o.CensorFailReason) {
		toSerialize["censorFailReason"] = o.CensorFailReason
	}
	if !IsNil(o.L2TxId) {
		toSerialize["l2TxId"] = o.L2TxId
	}
	if !IsNil(o.L2RejectTime) {
		toSerialize["l2RejectTime"] = o.L2RejectTime
	}
	if !IsNil(o.L2RejectCode) {
		toSerialize["l2RejectCode"] = o.L2RejectCode
	}
	if !IsNil(o.L2RejectReason) {
		toSerialize["l2RejectReason"] = o.L2RejectReason
	}
	if !IsNil(o.L2ApprovedTime) {
		toSerialize["l2ApprovedTime"] = o.L2ApprovedTime
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["createdTime"] = o.CreatedTime
	}
	if !IsNil(o.UpdatedTime) {
		toSerialize["updatedTime"] = o.UpdatedTime
	}
	return toSerialize, nil
}

type NullableCollateralTransaction struct {
	value *CollateralTransaction
	isSet bool
}

func (v NullableCollateralTransaction) Get() *CollateralTransaction {
	return v.value
}

func (v *NullableCollateralTransaction) Set(val *CollateralTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullableCollateralTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullableCollateralTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollateralTransaction(val *CollateralTransaction) *NullableCollateralTransaction {
	return &NullableCollateralTransaction{value: val, isSet: true}
}

func (v NullableCollateralTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollateralTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


