/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Order type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Order{}

// Order 永续合约委托单信息
type Order struct {
	// 委托单id。取值大于0
	Id *string `json:"id,omitempty"`
	// 所属用户id
	UserId *string `json:"userId,omitempty"`
	// 所属账户id
	AccountId *string `json:"accountId,omitempty"`
	// 所属抵押品币种id
	CoinId *string `json:"coinId,omitempty"`
	// 所属合约id
	ContractId *string `json:"contractId,omitempty"`
	// 买卖方向
	Side *string `json:"side,omitempty"`
	// 委托价格(最差可接受的价格), 实际为decimal类型。
	Price *string `json:"price,omitempty"`
	// 委托数量, 实际为decimal类型
	Size *string `json:"size,omitempty"`
	// 客户自定义id，用于幂等校验
	ClientOrderId *string `json:"clientOrderId,omitempty"`
	// 委托单类型
	Type *string `json:"type,omitempty"`
	// 委托单执行策略。type为 LIMIT/STOP_LIMIT/TAKE_PROFIT_LIMIT 时有意义。
	TimeInForce *string `json:"timeInForce,omitempty"`
	// 是否是只减仓委托
	ReduceOnly *bool `json:"reduceOnly,omitempty"`
	// 触发价格。type为 STOP_LIMIT/STOP_MARKET/TAKE_PROFIT_LIMIT/TAKE_PROFIT_MARKET 时有意义。如果为0代表字段为空。实际为decimal类型
	TriggerPrice *string `json:"triggerPrice,omitempty"`
	// 价格类型。最新市价[默认],标记价格。。type为 STOP_LIMIT/STOP_MARKET/TAKE_PROFIT_LIMIT/TAKE_PROFIT_MARKET 时有意义。
	TriggerPriceType *string `json:"triggerPriceType,omitempty"`
	// 过期时间。
	ExpireTime *string `json:"expireTime,omitempty"`
	// 来源key，uuid
	SourceKey *string `json:"sourceKey,omitempty"`
	// 是否为仓位止盈止损单
	IsPositionTpsl *bool `json:"isPositionTpsl,omitempty"`
	// 是否是强平单
	IsLiquidate *bool `json:"isLiquidate,omitempty"`
	// 是否是自动减仓单
	IsDeleverage *bool `json:"isDeleverage,omitempty"`
	// 开仓止盈单，止损单的开仓单orderId
	OpenTpslParentOrderId *string `json:"openTpslParentOrderId,omitempty"`
	// 是否设置开仓止盈
	IsSetOpenTp *bool `json:"isSetOpenTp,omitempty"`
	OpenTp *OpenTpSl `json:"openTp,omitempty"`
	// 是否设置开仓止损
	IsSetOpenSl *bool `json:"isSetOpenSl,omitempty"`
	OpenSl *OpenTpSl `json:"openSl,omitempty"`
	// 是否为不经过撮合直接场外成交的委托单
	IsWithoutMatch *bool `json:"isWithoutMatch,omitempty"`
	// 场外交易成交数量 (仅当 is_without_match 为 true 时有效)
	WithoutMatchFillSize *string `json:"withoutMatchFillSize,omitempty"`
	// 场外交易成交价值 (仅当 is_without_match 为 true 时有效)
	WithoutMatchFillValue *string `json:"withoutMatchFillValue,omitempty"`
	// 场外交易对手accountId (仅当 is_without_match 为 true 时有效)
	WithoutMatchPeerAccountId *string `json:"withoutMatchPeerAccountId,omitempty"`
	// 场外交易对手orderId (仅当 is_without_match 为 true 时有效)
	WithoutMatchPeerOrderId *string `json:"withoutMatchPeerOrderId,omitempty"`
	// 下单时开仓杠杆倍数, 实际为decimal类型
	MaxLeverage *string `json:"maxLeverage,omitempty"`
	// 下单时taker手续费率, 实际为decimal类型
	TakerFeeRate *string `json:"takerFeeRate,omitempty"`
	// 下单时maker手续费率, 实际为decimal类型
	MakerFeeRate *string `json:"makerFeeRate,omitempty"`
	// 下单时清算手续费率, 实际为decimal类型
	LiquidateFeeRate *string `json:"liquidateFeeRate,omitempty"`
	// 市价单提交撮合的限价 (仅市价单存在,其他情况为0), 实际为decimal类型
	MarketLimitPrice *string `json:"marketLimitPrice,omitempty"`
	// 市价单提交撮合的限定成交价值 (仅市价单存在,其他情况为0), 实际为decimal类型
	MarketLimitValue *string `json:"marketLimitValue,omitempty"`
	// l2签名nonce。取sha256(client_order_id) 前32个bit
	L2Nonce *string `json:"l2Nonce,omitempty"`
	// l2签名委托价值(实际成交价必须等于或优于 l2_value / l2_size), 与 price x size 的值可能不一样。实际为decimal类型
	L2Value *string `json:"l2Value,omitempty"`
	// l2签名委托数量, 与size字段可能不一样。实际为decimal类型
	L2Size *string `json:"l2Size,omitempty"`
	// l2签名最高可以接受的下单费用
	L2LimitFee *string `json:"l2LimitFee,omitempty"`
	// l2签名过期时间，单位毫秒。参与签名生成/校验时要取小时数，即 l2_expire_time / 3600000。注意此字段必须要大于等于 expire_time + 8 * 24 * 60 * 60 * 1000(8天)
	L2ExpireTime *string `json:"l2ExpireTime,omitempty"`
	L2Signature *L2Signature `json:"l2Signature,omitempty"`
	// 附加类型，供上层业务使用
	ExtraType *string `json:"extraType,omitempty"`
	// 额外数据，json格式，默认为空串
	ExtraDataJson *string `json:"extraDataJson,omitempty"`
	// 委托单状态
	Status *string `json:"status,omitempty"`
	// 撮合引擎已处理序号id
	MatchSequenceId *string `json:"matchSequenceId,omitempty"`
	// 条件单触发时间
	TriggerTime *string `json:"triggerTime,omitempty"`
	// 条件单触发价格时间
	TriggerPriceTime *string `json:"triggerPriceTime,omitempty"`
	// 条件单触发价格值
	TriggerPriceValue *string `json:"triggerPriceValue,omitempty"`
	// 委托单取消原因
	CancelReason *string `json:"cancelReason,omitempty"`
	// 累计审查通过后的成交数量, 实际为decimal类型
	CumFillSize *string `json:"cumFillSize,omitempty"`
	// 累计审查通过后的成交价值, 实际为decimal类型
	CumFillValue *string `json:"cumFillValue,omitempty"`
	// 累计审查通过后的成交手续费, 实际为decimal类型
	CumFillFee *string `json:"cumFillFee,omitempty"`
	// 当前委托单审查通过后的最高成交价格, 实际为decimal类型
	MaxFillPrice *string `json:"maxFillPrice,omitempty"`
	// 当前委托单审查通过后的最低成交价格, 实际为decimal类型
	MinFillPrice *string `json:"minFillPrice,omitempty"`
	// 累计查通过后的强平清算费, 实际为decimal类型
	CumLiquidateFee *string `json:"cumLiquidateFee,omitempty"`
	// 累计查通过后的已实现盈亏, 实际为decimal类型
	CumRealizePnl *string `json:"cumRealizePnl,omitempty"`
	// 累计撮合数量,实际为decimal类型
	CumMatchSize *string `json:"cumMatchSize,omitempty"`
	// 累计撮合价值,实际为decimal类型
	CumMatchValue *string `json:"cumMatchValue,omitempty"`
	// 累计撮合手续费，实际为decimal类型
	CumMatchFee *string `json:"cumMatchFee,omitempty"`
	// 累计审查失败/L2拒绝的数量, 实际为decimal类型
	CumFailSize *string `json:"cumFailSize,omitempty"`
	// 累计审查失败/L2拒绝的价值, 实际为decimal类型
	CumFailValue *string `json:"cumFailValue,omitempty"`
	// 累计审查失败/L2拒绝的手续费, 实际为decimal类型
	CumFailFee *string `json:"cumFailFee,omitempty"`
	// 累计L2确认的数量
	CumApprovedSize *string `json:"cumApprovedSize,omitempty"`
	// 累计L2确认的价值
	CumApprovedValue *string `json:"cumApprovedValue,omitempty"`
	// 累计L2确认的手续费
	CumApprovedFee *string `json:"cumApprovedFee,omitempty"`
	// 创建时间
	CreatedTime *string `json:"createdTime,omitempty"`
	// 更新时间
	UpdatedTime *string `json:"updatedTime,omitempty"`
}

// NewOrder instantiates a new Order object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrder() *Order {
	this := Order{}
	return &this
}

// NewOrderWithDefaults instantiates a new Order object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderWithDefaults() *Order {
	this := Order{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Order) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Order) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Order) SetId(v string) {
	o.Id = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *Order) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *Order) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *Order) SetUserId(v string) {
	o.UserId = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *Order) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *Order) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *Order) SetAccountId(v string) {
	o.AccountId = &v
}

// GetCoinId returns the CoinId field value if set, zero value otherwise.
func (o *Order) GetCoinId() string {
	if o == nil || IsNil(o.CoinId) {
		var ret string
		return ret
	}
	return *o.CoinId
}

// GetCoinIdOk returns a tuple with the CoinId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCoinIdOk() (*string, bool) {
	if o == nil || IsNil(o.CoinId) {
		return nil, false
	}
	return o.CoinId, true
}

// HasCoinId returns a boolean if a field has been set.
func (o *Order) HasCoinId() bool {
	if o != nil && !IsNil(o.CoinId) {
		return true
	}

	return false
}

// SetCoinId gets a reference to the given string and assigns it to the CoinId field.
func (o *Order) SetCoinId(v string) {
	o.CoinId = &v
}

// GetContractId returns the ContractId field value if set, zero value otherwise.
func (o *Order) GetContractId() string {
	if o == nil || IsNil(o.ContractId) {
		var ret string
		return ret
	}
	return *o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetContractIdOk() (*string, bool) {
	if o == nil || IsNil(o.ContractId) {
		return nil, false
	}
	return o.ContractId, true
}

// HasContractId returns a boolean if a field has been set.
func (o *Order) HasContractId() bool {
	if o != nil && !IsNil(o.ContractId) {
		return true
	}

	return false
}

// SetContractId gets a reference to the given string and assigns it to the ContractId field.
func (o *Order) SetContractId(v string) {
	o.ContractId = &v
}

// GetSide returns the Side field value if set, zero value otherwise.
func (o *Order) GetSide() string {
	if o == nil || IsNil(o.Side) {
		var ret string
		return ret
	}
	return *o.Side
}

// GetSideOk returns a tuple with the Side field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetSideOk() (*string, bool) {
	if o == nil || IsNil(o.Side) {
		return nil, false
	}
	return o.Side, true
}

// HasSide returns a boolean if a field has been set.
func (o *Order) HasSide() bool {
	if o != nil && !IsNil(o.Side) {
		return true
	}

	return false
}

// SetSide gets a reference to the given string and assigns it to the Side field.
func (o *Order) SetSide(v string) {
	o.Side = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *Order) GetPrice() string {
	if o == nil || IsNil(o.Price) {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetPriceOk() (*string, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *Order) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *Order) SetPrice(v string) {
	o.Price = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *Order) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *Order) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *Order) SetSize(v string) {
	o.Size = &v
}

// GetClientOrderId returns the ClientOrderId field value if set, zero value otherwise.
func (o *Order) GetClientOrderId() string {
	if o == nil || IsNil(o.ClientOrderId) {
		var ret string
		return ret
	}
	return *o.ClientOrderId
}

// GetClientOrderIdOk returns a tuple with the ClientOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetClientOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientOrderId) {
		return nil, false
	}
	return o.ClientOrderId, true
}

// HasClientOrderId returns a boolean if a field has been set.
func (o *Order) HasClientOrderId() bool {
	if o != nil && !IsNil(o.ClientOrderId) {
		return true
	}

	return false
}

// SetClientOrderId gets a reference to the given string and assigns it to the ClientOrderId field.
func (o *Order) SetClientOrderId(v string) {
	o.ClientOrderId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Order) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Order) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Order) SetType(v string) {
	o.Type = &v
}

// GetTimeInForce returns the TimeInForce field value if set, zero value otherwise.
func (o *Order) GetTimeInForce() string {
	if o == nil || IsNil(o.TimeInForce) {
		var ret string
		return ret
	}
	return *o.TimeInForce
}

// GetTimeInForceOk returns a tuple with the TimeInForce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetTimeInForceOk() (*string, bool) {
	if o == nil || IsNil(o.TimeInForce) {
		return nil, false
	}
	return o.TimeInForce, true
}

// HasTimeInForce returns a boolean if a field has been set.
func (o *Order) HasTimeInForce() bool {
	if o != nil && !IsNil(o.TimeInForce) {
		return true
	}

	return false
}

// SetTimeInForce gets a reference to the given string and assigns it to the TimeInForce field.
func (o *Order) SetTimeInForce(v string) {
	o.TimeInForce = &v
}

// GetReduceOnly returns the ReduceOnly field value if set, zero value otherwise.
func (o *Order) GetReduceOnly() bool {
	if o == nil || IsNil(o.ReduceOnly) {
		var ret bool
		return ret
	}
	return *o.ReduceOnly
}

// GetReduceOnlyOk returns a tuple with the ReduceOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetReduceOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.ReduceOnly) {
		return nil, false
	}
	return o.ReduceOnly, true
}

// HasReduceOnly returns a boolean if a field has been set.
func (o *Order) HasReduceOnly() bool {
	if o != nil && !IsNil(o.ReduceOnly) {
		return true
	}

	return false
}

// SetReduceOnly gets a reference to the given bool and assigns it to the ReduceOnly field.
func (o *Order) SetReduceOnly(v bool) {
	o.ReduceOnly = &v
}

// GetTriggerPrice returns the TriggerPrice field value if set, zero value otherwise.
func (o *Order) GetTriggerPrice() string {
	if o == nil || IsNil(o.TriggerPrice) {
		var ret string
		return ret
	}
	return *o.TriggerPrice
}

// GetTriggerPriceOk returns a tuple with the TriggerPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetTriggerPriceOk() (*string, bool) {
	if o == nil || IsNil(o.TriggerPrice) {
		return nil, false
	}
	return o.TriggerPrice, true
}

// HasTriggerPrice returns a boolean if a field has been set.
func (o *Order) HasTriggerPrice() bool {
	if o != nil && !IsNil(o.TriggerPrice) {
		return true
	}

	return false
}

// SetTriggerPrice gets a reference to the given string and assigns it to the TriggerPrice field.
func (o *Order) SetTriggerPrice(v string) {
	o.TriggerPrice = &v
}

// GetTriggerPriceType returns the TriggerPriceType field value if set, zero value otherwise.
func (o *Order) GetTriggerPriceType() string {
	if o == nil || IsNil(o.TriggerPriceType) {
		var ret string
		return ret
	}
	return *o.TriggerPriceType
}

// GetTriggerPriceTypeOk returns a tuple with the TriggerPriceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetTriggerPriceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TriggerPriceType) {
		return nil, false
	}
	return o.TriggerPriceType, true
}

// HasTriggerPriceType returns a boolean if a field has been set.
func (o *Order) HasTriggerPriceType() bool {
	if o != nil && !IsNil(o.TriggerPriceType) {
		return true
	}

	return false
}

// SetTriggerPriceType gets a reference to the given string and assigns it to the TriggerPriceType field.
func (o *Order) SetTriggerPriceType(v string) {
	o.TriggerPriceType = &v
}

// GetExpireTime returns the ExpireTime field value if set, zero value otherwise.
func (o *Order) GetExpireTime() string {
	if o == nil || IsNil(o.ExpireTime) {
		var ret string
		return ret
	}
	return *o.ExpireTime
}

// GetExpireTimeOk returns a tuple with the ExpireTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetExpireTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpireTime) {
		return nil, false
	}
	return o.ExpireTime, true
}

// HasExpireTime returns a boolean if a field has been set.
func (o *Order) HasExpireTime() bool {
	if o != nil && !IsNil(o.ExpireTime) {
		return true
	}

	return false
}

// SetExpireTime gets a reference to the given string and assigns it to the ExpireTime field.
func (o *Order) SetExpireTime(v string) {
	o.ExpireTime = &v
}

// GetSourceKey returns the SourceKey field value if set, zero value otherwise.
func (o *Order) GetSourceKey() string {
	if o == nil || IsNil(o.SourceKey) {
		var ret string
		return ret
	}
	return *o.SourceKey
}

// GetSourceKeyOk returns a tuple with the SourceKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetSourceKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SourceKey) {
		return nil, false
	}
	return o.SourceKey, true
}

// HasSourceKey returns a boolean if a field has been set.
func (o *Order) HasSourceKey() bool {
	if o != nil && !IsNil(o.SourceKey) {
		return true
	}

	return false
}

// SetSourceKey gets a reference to the given string and assigns it to the SourceKey field.
func (o *Order) SetSourceKey(v string) {
	o.SourceKey = &v
}

// GetIsPositionTpsl returns the IsPositionTpsl field value if set, zero value otherwise.
func (o *Order) GetIsPositionTpsl() bool {
	if o == nil || IsNil(o.IsPositionTpsl) {
		var ret bool
		return ret
	}
	return *o.IsPositionTpsl
}

// GetIsPositionTpslOk returns a tuple with the IsPositionTpsl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetIsPositionTpslOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPositionTpsl) {
		return nil, false
	}
	return o.IsPositionTpsl, true
}

// HasIsPositionTpsl returns a boolean if a field has been set.
func (o *Order) HasIsPositionTpsl() bool {
	if o != nil && !IsNil(o.IsPositionTpsl) {
		return true
	}

	return false
}

// SetIsPositionTpsl gets a reference to the given bool and assigns it to the IsPositionTpsl field.
func (o *Order) SetIsPositionTpsl(v bool) {
	o.IsPositionTpsl = &v
}

// GetIsLiquidate returns the IsLiquidate field value if set, zero value otherwise.
func (o *Order) GetIsLiquidate() bool {
	if o == nil || IsNil(o.IsLiquidate) {
		var ret bool
		return ret
	}
	return *o.IsLiquidate
}

// GetIsLiquidateOk returns a tuple with the IsLiquidate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetIsLiquidateOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLiquidate) {
		return nil, false
	}
	return o.IsLiquidate, true
}

// HasIsLiquidate returns a boolean if a field has been set.
func (o *Order) HasIsLiquidate() bool {
	if o != nil && !IsNil(o.IsLiquidate) {
		return true
	}

	return false
}

// SetIsLiquidate gets a reference to the given bool and assigns it to the IsLiquidate field.
func (o *Order) SetIsLiquidate(v bool) {
	o.IsLiquidate = &v
}

// GetIsDeleverage returns the IsDeleverage field value if set, zero value otherwise.
func (o *Order) GetIsDeleverage() bool {
	if o == nil || IsNil(o.IsDeleverage) {
		var ret bool
		return ret
	}
	return *o.IsDeleverage
}

// GetIsDeleverageOk returns a tuple with the IsDeleverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetIsDeleverageOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleverage) {
		return nil, false
	}
	return o.IsDeleverage, true
}

// HasIsDeleverage returns a boolean if a field has been set.
func (o *Order) HasIsDeleverage() bool {
	if o != nil && !IsNil(o.IsDeleverage) {
		return true
	}

	return false
}

// SetIsDeleverage gets a reference to the given bool and assigns it to the IsDeleverage field.
func (o *Order) SetIsDeleverage(v bool) {
	o.IsDeleverage = &v
}

// GetOpenTpslParentOrderId returns the OpenTpslParentOrderId field value if set, zero value otherwise.
func (o *Order) GetOpenTpslParentOrderId() string {
	if o == nil || IsNil(o.OpenTpslParentOrderId) {
		var ret string
		return ret
	}
	return *o.OpenTpslParentOrderId
}

// GetOpenTpslParentOrderIdOk returns a tuple with the OpenTpslParentOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetOpenTpslParentOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenTpslParentOrderId) {
		return nil, false
	}
	return o.OpenTpslParentOrderId, true
}

// HasOpenTpslParentOrderId returns a boolean if a field has been set.
func (o *Order) HasOpenTpslParentOrderId() bool {
	if o != nil && !IsNil(o.OpenTpslParentOrderId) {
		return true
	}

	return false
}

// SetOpenTpslParentOrderId gets a reference to the given string and assigns it to the OpenTpslParentOrderId field.
func (o *Order) SetOpenTpslParentOrderId(v string) {
	o.OpenTpslParentOrderId = &v
}

// GetIsSetOpenTp returns the IsSetOpenTp field value if set, zero value otherwise.
func (o *Order) GetIsSetOpenTp() bool {
	if o == nil || IsNil(o.IsSetOpenTp) {
		var ret bool
		return ret
	}
	return *o.IsSetOpenTp
}

// GetIsSetOpenTpOk returns a tuple with the IsSetOpenTp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetIsSetOpenTpOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSetOpenTp) {
		return nil, false
	}
	return o.IsSetOpenTp, true
}

// HasIsSetOpenTp returns a boolean if a field has been set.
func (o *Order) HasIsSetOpenTp() bool {
	if o != nil && !IsNil(o.IsSetOpenTp) {
		return true
	}

	return false
}

// SetIsSetOpenTp gets a reference to the given bool and assigns it to the IsSetOpenTp field.
func (o *Order) SetIsSetOpenTp(v bool) {
	o.IsSetOpenTp = &v
}

// GetOpenTp returns the OpenTp field value if set, zero value otherwise.
func (o *Order) GetOpenTp() OpenTpSl {
	if o == nil || IsNil(o.OpenTp) {
		var ret OpenTpSl
		return ret
	}
	return *o.OpenTp
}

// GetOpenTpOk returns a tuple with the OpenTp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetOpenTpOk() (*OpenTpSl, bool) {
	if o == nil || IsNil(o.OpenTp) {
		return nil, false
	}
	return o.OpenTp, true
}

// HasOpenTp returns a boolean if a field has been set.
func (o *Order) HasOpenTp() bool {
	if o != nil && !IsNil(o.OpenTp) {
		return true
	}

	return false
}

// SetOpenTp gets a reference to the given OpenTpSl and assigns it to the OpenTp field.
func (o *Order) SetOpenTp(v OpenTpSl) {
	o.OpenTp = &v
}

// GetIsSetOpenSl returns the IsSetOpenSl field value if set, zero value otherwise.
func (o *Order) GetIsSetOpenSl() bool {
	if o == nil || IsNil(o.IsSetOpenSl) {
		var ret bool
		return ret
	}
	return *o.IsSetOpenSl
}

// GetIsSetOpenSlOk returns a tuple with the IsSetOpenSl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetIsSetOpenSlOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSetOpenSl) {
		return nil, false
	}
	return o.IsSetOpenSl, true
}

// HasIsSetOpenSl returns a boolean if a field has been set.
func (o *Order) HasIsSetOpenSl() bool {
	if o != nil && !IsNil(o.IsSetOpenSl) {
		return true
	}

	return false
}

// SetIsSetOpenSl gets a reference to the given bool and assigns it to the IsSetOpenSl field.
func (o *Order) SetIsSetOpenSl(v bool) {
	o.IsSetOpenSl = &v
}

// GetOpenSl returns the OpenSl field value if set, zero value otherwise.
func (o *Order) GetOpenSl() OpenTpSl {
	if o == nil || IsNil(o.OpenSl) {
		var ret OpenTpSl
		return ret
	}
	return *o.OpenSl
}

// GetOpenSlOk returns a tuple with the OpenSl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetOpenSlOk() (*OpenTpSl, bool) {
	if o == nil || IsNil(o.OpenSl) {
		return nil, false
	}
	return o.OpenSl, true
}

// HasOpenSl returns a boolean if a field has been set.
func (o *Order) HasOpenSl() bool {
	if o != nil && !IsNil(o.OpenSl) {
		return true
	}

	return false
}

// SetOpenSl gets a reference to the given OpenTpSl and assigns it to the OpenSl field.
func (o *Order) SetOpenSl(v OpenTpSl) {
	o.OpenSl = &v
}

// GetIsWithoutMatch returns the IsWithoutMatch field value if set, zero value otherwise.
func (o *Order) GetIsWithoutMatch() bool {
	if o == nil || IsNil(o.IsWithoutMatch) {
		var ret bool
		return ret
	}
	return *o.IsWithoutMatch
}

// GetIsWithoutMatchOk returns a tuple with the IsWithoutMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetIsWithoutMatchOk() (*bool, bool) {
	if o == nil || IsNil(o.IsWithoutMatch) {
		return nil, false
	}
	return o.IsWithoutMatch, true
}

// HasIsWithoutMatch returns a boolean if a field has been set.
func (o *Order) HasIsWithoutMatch() bool {
	if o != nil && !IsNil(o.IsWithoutMatch) {
		return true
	}

	return false
}

// SetIsWithoutMatch gets a reference to the given bool and assigns it to the IsWithoutMatch field.
func (o *Order) SetIsWithoutMatch(v bool) {
	o.IsWithoutMatch = &v
}

// GetWithoutMatchFillSize returns the WithoutMatchFillSize field value if set, zero value otherwise.
func (o *Order) GetWithoutMatchFillSize() string {
	if o == nil || IsNil(o.WithoutMatchFillSize) {
		var ret string
		return ret
	}
	return *o.WithoutMatchFillSize
}

// GetWithoutMatchFillSizeOk returns a tuple with the WithoutMatchFillSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetWithoutMatchFillSizeOk() (*string, bool) {
	if o == nil || IsNil(o.WithoutMatchFillSize) {
		return nil, false
	}
	return o.WithoutMatchFillSize, true
}

// HasWithoutMatchFillSize returns a boolean if a field has been set.
func (o *Order) HasWithoutMatchFillSize() bool {
	if o != nil && !IsNil(o.WithoutMatchFillSize) {
		return true
	}

	return false
}

// SetWithoutMatchFillSize gets a reference to the given string and assigns it to the WithoutMatchFillSize field.
func (o *Order) SetWithoutMatchFillSize(v string) {
	o.WithoutMatchFillSize = &v
}

// GetWithoutMatchFillValue returns the WithoutMatchFillValue field value if set, zero value otherwise.
func (o *Order) GetWithoutMatchFillValue() string {
	if o == nil || IsNil(o.WithoutMatchFillValue) {
		var ret string
		return ret
	}
	return *o.WithoutMatchFillValue
}

// GetWithoutMatchFillValueOk returns a tuple with the WithoutMatchFillValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetWithoutMatchFillValueOk() (*string, bool) {
	if o == nil || IsNil(o.WithoutMatchFillValue) {
		return nil, false
	}
	return o.WithoutMatchFillValue, true
}

// HasWithoutMatchFillValue returns a boolean if a field has been set.
func (o *Order) HasWithoutMatchFillValue() bool {
	if o != nil && !IsNil(o.WithoutMatchFillValue) {
		return true
	}

	return false
}

// SetWithoutMatchFillValue gets a reference to the given string and assigns it to the WithoutMatchFillValue field.
func (o *Order) SetWithoutMatchFillValue(v string) {
	o.WithoutMatchFillValue = &v
}

// GetWithoutMatchPeerAccountId returns the WithoutMatchPeerAccountId field value if set, zero value otherwise.
func (o *Order) GetWithoutMatchPeerAccountId() string {
	if o == nil || IsNil(o.WithoutMatchPeerAccountId) {
		var ret string
		return ret
	}
	return *o.WithoutMatchPeerAccountId
}

// GetWithoutMatchPeerAccountIdOk returns a tuple with the WithoutMatchPeerAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetWithoutMatchPeerAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.WithoutMatchPeerAccountId) {
		return nil, false
	}
	return o.WithoutMatchPeerAccountId, true
}

// HasWithoutMatchPeerAccountId returns a boolean if a field has been set.
func (o *Order) HasWithoutMatchPeerAccountId() bool {
	if o != nil && !IsNil(o.WithoutMatchPeerAccountId) {
		return true
	}

	return false
}

// SetWithoutMatchPeerAccountId gets a reference to the given string and assigns it to the WithoutMatchPeerAccountId field.
func (o *Order) SetWithoutMatchPeerAccountId(v string) {
	o.WithoutMatchPeerAccountId = &v
}

// GetWithoutMatchPeerOrderId returns the WithoutMatchPeerOrderId field value if set, zero value otherwise.
func (o *Order) GetWithoutMatchPeerOrderId() string {
	if o == nil || IsNil(o.WithoutMatchPeerOrderId) {
		var ret string
		return ret
	}
	return *o.WithoutMatchPeerOrderId
}

// GetWithoutMatchPeerOrderIdOk returns a tuple with the WithoutMatchPeerOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetWithoutMatchPeerOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.WithoutMatchPeerOrderId) {
		return nil, false
	}
	return o.WithoutMatchPeerOrderId, true
}

// HasWithoutMatchPeerOrderId returns a boolean if a field has been set.
func (o *Order) HasWithoutMatchPeerOrderId() bool {
	if o != nil && !IsNil(o.WithoutMatchPeerOrderId) {
		return true
	}

	return false
}

// SetWithoutMatchPeerOrderId gets a reference to the given string and assigns it to the WithoutMatchPeerOrderId field.
func (o *Order) SetWithoutMatchPeerOrderId(v string) {
	o.WithoutMatchPeerOrderId = &v
}

// GetMaxLeverage returns the MaxLeverage field value if set, zero value otherwise.
func (o *Order) GetMaxLeverage() string {
	if o == nil || IsNil(o.MaxLeverage) {
		var ret string
		return ret
	}
	return *o.MaxLeverage
}

// GetMaxLeverageOk returns a tuple with the MaxLeverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetMaxLeverageOk() (*string, bool) {
	if o == nil || IsNil(o.MaxLeverage) {
		return nil, false
	}
	return o.MaxLeverage, true
}

// HasMaxLeverage returns a boolean if a field has been set.
func (o *Order) HasMaxLeverage() bool {
	if o != nil && !IsNil(o.MaxLeverage) {
		return true
	}

	return false
}

// SetMaxLeverage gets a reference to the given string and assigns it to the MaxLeverage field.
func (o *Order) SetMaxLeverage(v string) {
	o.MaxLeverage = &v
}

// GetTakerFeeRate returns the TakerFeeRate field value if set, zero value otherwise.
func (o *Order) GetTakerFeeRate() string {
	if o == nil || IsNil(o.TakerFeeRate) {
		var ret string
		return ret
	}
	return *o.TakerFeeRate
}

// GetTakerFeeRateOk returns a tuple with the TakerFeeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetTakerFeeRateOk() (*string, bool) {
	if o == nil || IsNil(o.TakerFeeRate) {
		return nil, false
	}
	return o.TakerFeeRate, true
}

// HasTakerFeeRate returns a boolean if a field has been set.
func (o *Order) HasTakerFeeRate() bool {
	if o != nil && !IsNil(o.TakerFeeRate) {
		return true
	}

	return false
}

// SetTakerFeeRate gets a reference to the given string and assigns it to the TakerFeeRate field.
func (o *Order) SetTakerFeeRate(v string) {
	o.TakerFeeRate = &v
}

// GetMakerFeeRate returns the MakerFeeRate field value if set, zero value otherwise.
func (o *Order) GetMakerFeeRate() string {
	if o == nil || IsNil(o.MakerFeeRate) {
		var ret string
		return ret
	}
	return *o.MakerFeeRate
}

// GetMakerFeeRateOk returns a tuple with the MakerFeeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetMakerFeeRateOk() (*string, bool) {
	if o == nil || IsNil(o.MakerFeeRate) {
		return nil, false
	}
	return o.MakerFeeRate, true
}

// HasMakerFeeRate returns a boolean if a field has been set.
func (o *Order) HasMakerFeeRate() bool {
	if o != nil && !IsNil(o.MakerFeeRate) {
		return true
	}

	return false
}

// SetMakerFeeRate gets a reference to the given string and assigns it to the MakerFeeRate field.
func (o *Order) SetMakerFeeRate(v string) {
	o.MakerFeeRate = &v
}

// GetLiquidateFeeRate returns the LiquidateFeeRate field value if set, zero value otherwise.
func (o *Order) GetLiquidateFeeRate() string {
	if o == nil || IsNil(o.LiquidateFeeRate) {
		var ret string
		return ret
	}
	return *o.LiquidateFeeRate
}

// GetLiquidateFeeRateOk returns a tuple with the LiquidateFeeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetLiquidateFeeRateOk() (*string, bool) {
	if o == nil || IsNil(o.LiquidateFeeRate) {
		return nil, false
	}
	return o.LiquidateFeeRate, true
}

// HasLiquidateFeeRate returns a boolean if a field has been set.
func (o *Order) HasLiquidateFeeRate() bool {
	if o != nil && !IsNil(o.LiquidateFeeRate) {
		return true
	}

	return false
}

// SetLiquidateFeeRate gets a reference to the given string and assigns it to the LiquidateFeeRate field.
func (o *Order) SetLiquidateFeeRate(v string) {
	o.LiquidateFeeRate = &v
}

// GetMarketLimitPrice returns the MarketLimitPrice field value if set, zero value otherwise.
func (o *Order) GetMarketLimitPrice() string {
	if o == nil || IsNil(o.MarketLimitPrice) {
		var ret string
		return ret
	}
	return *o.MarketLimitPrice
}

// GetMarketLimitPriceOk returns a tuple with the MarketLimitPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetMarketLimitPriceOk() (*string, bool) {
	if o == nil || IsNil(o.MarketLimitPrice) {
		return nil, false
	}
	return o.MarketLimitPrice, true
}

// HasMarketLimitPrice returns a boolean if a field has been set.
func (o *Order) HasMarketLimitPrice() bool {
	if o != nil && !IsNil(o.MarketLimitPrice) {
		return true
	}

	return false
}

// SetMarketLimitPrice gets a reference to the given string and assigns it to the MarketLimitPrice field.
func (o *Order) SetMarketLimitPrice(v string) {
	o.MarketLimitPrice = &v
}

// GetMarketLimitValue returns the MarketLimitValue field value if set, zero value otherwise.
func (o *Order) GetMarketLimitValue() string {
	if o == nil || IsNil(o.MarketLimitValue) {
		var ret string
		return ret
	}
	return *o.MarketLimitValue
}

// GetMarketLimitValueOk returns a tuple with the MarketLimitValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetMarketLimitValueOk() (*string, bool) {
	if o == nil || IsNil(o.MarketLimitValue) {
		return nil, false
	}
	return o.MarketLimitValue, true
}

// HasMarketLimitValue returns a boolean if a field has been set.
func (o *Order) HasMarketLimitValue() bool {
	if o != nil && !IsNil(o.MarketLimitValue) {
		return true
	}

	return false
}

// SetMarketLimitValue gets a reference to the given string and assigns it to the MarketLimitValue field.
func (o *Order) SetMarketLimitValue(v string) {
	o.MarketLimitValue = &v
}

// GetL2Nonce returns the L2Nonce field value if set, zero value otherwise.
func (o *Order) GetL2Nonce() string {
	if o == nil || IsNil(o.L2Nonce) {
		var ret string
		return ret
	}
	return *o.L2Nonce
}

// GetL2NonceOk returns a tuple with the L2Nonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetL2NonceOk() (*string, bool) {
	if o == nil || IsNil(o.L2Nonce) {
		return nil, false
	}
	return o.L2Nonce, true
}

// HasL2Nonce returns a boolean if a field has been set.
func (o *Order) HasL2Nonce() bool {
	if o != nil && !IsNil(o.L2Nonce) {
		return true
	}

	return false
}

// SetL2Nonce gets a reference to the given string and assigns it to the L2Nonce field.
func (o *Order) SetL2Nonce(v string) {
	o.L2Nonce = &v
}

// GetL2Value returns the L2Value field value if set, zero value otherwise.
func (o *Order) GetL2Value() string {
	if o == nil || IsNil(o.L2Value) {
		var ret string
		return ret
	}
	return *o.L2Value
}

// GetL2ValueOk returns a tuple with the L2Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetL2ValueOk() (*string, bool) {
	if o == nil || IsNil(o.L2Value) {
		return nil, false
	}
	return o.L2Value, true
}

// HasL2Value returns a boolean if a field has been set.
func (o *Order) HasL2Value() bool {
	if o != nil && !IsNil(o.L2Value) {
		return true
	}

	return false
}

// SetL2Value gets a reference to the given string and assigns it to the L2Value field.
func (o *Order) SetL2Value(v string) {
	o.L2Value = &v
}

// GetL2Size returns the L2Size field value if set, zero value otherwise.
func (o *Order) GetL2Size() string {
	if o == nil || IsNil(o.L2Size) {
		var ret string
		return ret
	}
	return *o.L2Size
}

// GetL2SizeOk returns a tuple with the L2Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetL2SizeOk() (*string, bool) {
	if o == nil || IsNil(o.L2Size) {
		return nil, false
	}
	return o.L2Size, true
}

// HasL2Size returns a boolean if a field has been set.
func (o *Order) HasL2Size() bool {
	if o != nil && !IsNil(o.L2Size) {
		return true
	}

	return false
}

// SetL2Size gets a reference to the given string and assigns it to the L2Size field.
func (o *Order) SetL2Size(v string) {
	o.L2Size = &v
}

// GetL2LimitFee returns the L2LimitFee field value if set, zero value otherwise.
func (o *Order) GetL2LimitFee() string {
	if o == nil || IsNil(o.L2LimitFee) {
		var ret string
		return ret
	}
	return *o.L2LimitFee
}

// GetL2LimitFeeOk returns a tuple with the L2LimitFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetL2LimitFeeOk() (*string, bool) {
	if o == nil || IsNil(o.L2LimitFee) {
		return nil, false
	}
	return o.L2LimitFee, true
}

// HasL2LimitFee returns a boolean if a field has been set.
func (o *Order) HasL2LimitFee() bool {
	if o != nil && !IsNil(o.L2LimitFee) {
		return true
	}

	return false
}

// SetL2LimitFee gets a reference to the given string and assigns it to the L2LimitFee field.
func (o *Order) SetL2LimitFee(v string) {
	o.L2LimitFee = &v
}

// GetL2ExpireTime returns the L2ExpireTime field value if set, zero value otherwise.
func (o *Order) GetL2ExpireTime() string {
	if o == nil || IsNil(o.L2ExpireTime) {
		var ret string
		return ret
	}
	return *o.L2ExpireTime
}

// GetL2ExpireTimeOk returns a tuple with the L2ExpireTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetL2ExpireTimeOk() (*string, bool) {
	if o == nil || IsNil(o.L2ExpireTime) {
		return nil, false
	}
	return o.L2ExpireTime, true
}

// HasL2ExpireTime returns a boolean if a field has been set.
func (o *Order) HasL2ExpireTime() bool {
	if o != nil && !IsNil(o.L2ExpireTime) {
		return true
	}

	return false
}

// SetL2ExpireTime gets a reference to the given string and assigns it to the L2ExpireTime field.
func (o *Order) SetL2ExpireTime(v string) {
	o.L2ExpireTime = &v
}

// GetL2Signature returns the L2Signature field value if set, zero value otherwise.
func (o *Order) GetL2Signature() L2Signature {
	if o == nil || IsNil(o.L2Signature) {
		var ret L2Signature
		return ret
	}
	return *o.L2Signature
}

// GetL2SignatureOk returns a tuple with the L2Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetL2SignatureOk() (*L2Signature, bool) {
	if o == nil || IsNil(o.L2Signature) {
		return nil, false
	}
	return o.L2Signature, true
}

// HasL2Signature returns a boolean if a field has been set.
func (o *Order) HasL2Signature() bool {
	if o != nil && !IsNil(o.L2Signature) {
		return true
	}

	return false
}

// SetL2Signature gets a reference to the given L2Signature and assigns it to the L2Signature field.
func (o *Order) SetL2Signature(v L2Signature) {
	o.L2Signature = &v
}

// GetExtraType returns the ExtraType field value if set, zero value otherwise.
func (o *Order) GetExtraType() string {
	if o == nil || IsNil(o.ExtraType) {
		var ret string
		return ret
	}
	return *o.ExtraType
}

// GetExtraTypeOk returns a tuple with the ExtraType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetExtraTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraType) {
		return nil, false
	}
	return o.ExtraType, true
}

// HasExtraType returns a boolean if a field has been set.
func (o *Order) HasExtraType() bool {
	if o != nil && !IsNil(o.ExtraType) {
		return true
	}

	return false
}

// SetExtraType gets a reference to the given string and assigns it to the ExtraType field.
func (o *Order) SetExtraType(v string) {
	o.ExtraType = &v
}

// GetExtraDataJson returns the ExtraDataJson field value if set, zero value otherwise.
func (o *Order) GetExtraDataJson() string {
	if o == nil || IsNil(o.ExtraDataJson) {
		var ret string
		return ret
	}
	return *o.ExtraDataJson
}

// GetExtraDataJsonOk returns a tuple with the ExtraDataJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetExtraDataJsonOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraDataJson) {
		return nil, false
	}
	return o.ExtraDataJson, true
}

// HasExtraDataJson returns a boolean if a field has been set.
func (o *Order) HasExtraDataJson() bool {
	if o != nil && !IsNil(o.ExtraDataJson) {
		return true
	}

	return false
}

// SetExtraDataJson gets a reference to the given string and assigns it to the ExtraDataJson field.
func (o *Order) SetExtraDataJson(v string) {
	o.ExtraDataJson = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Order) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Order) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Order) SetStatus(v string) {
	o.Status = &v
}

// GetMatchSequenceId returns the MatchSequenceId field value if set, zero value otherwise.
func (o *Order) GetMatchSequenceId() string {
	if o == nil || IsNil(o.MatchSequenceId) {
		var ret string
		return ret
	}
	return *o.MatchSequenceId
}

// GetMatchSequenceIdOk returns a tuple with the MatchSequenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetMatchSequenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.MatchSequenceId) {
		return nil, false
	}
	return o.MatchSequenceId, true
}

// HasMatchSequenceId returns a boolean if a field has been set.
func (o *Order) HasMatchSequenceId() bool {
	if o != nil && !IsNil(o.MatchSequenceId) {
		return true
	}

	return false
}

// SetMatchSequenceId gets a reference to the given string and assigns it to the MatchSequenceId field.
func (o *Order) SetMatchSequenceId(v string) {
	o.MatchSequenceId = &v
}

// GetTriggerTime returns the TriggerTime field value if set, zero value otherwise.
func (o *Order) GetTriggerTime() string {
	if o == nil || IsNil(o.TriggerTime) {
		var ret string
		return ret
	}
	return *o.TriggerTime
}

// GetTriggerTimeOk returns a tuple with the TriggerTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetTriggerTimeOk() (*string, bool) {
	if o == nil || IsNil(o.TriggerTime) {
		return nil, false
	}
	return o.TriggerTime, true
}

// HasTriggerTime returns a boolean if a field has been set.
func (o *Order) HasTriggerTime() bool {
	if o != nil && !IsNil(o.TriggerTime) {
		return true
	}

	return false
}

// SetTriggerTime gets a reference to the given string and assigns it to the TriggerTime field.
func (o *Order) SetTriggerTime(v string) {
	o.TriggerTime = &v
}

// GetTriggerPriceTime returns the TriggerPriceTime field value if set, zero value otherwise.
func (o *Order) GetTriggerPriceTime() string {
	if o == nil || IsNil(o.TriggerPriceTime) {
		var ret string
		return ret
	}
	return *o.TriggerPriceTime
}

// GetTriggerPriceTimeOk returns a tuple with the TriggerPriceTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetTriggerPriceTimeOk() (*string, bool) {
	if o == nil || IsNil(o.TriggerPriceTime) {
		return nil, false
	}
	return o.TriggerPriceTime, true
}

// HasTriggerPriceTime returns a boolean if a field has been set.
func (o *Order) HasTriggerPriceTime() bool {
	if o != nil && !IsNil(o.TriggerPriceTime) {
		return true
	}

	return false
}

// SetTriggerPriceTime gets a reference to the given string and assigns it to the TriggerPriceTime field.
func (o *Order) SetTriggerPriceTime(v string) {
	o.TriggerPriceTime = &v
}

// GetTriggerPriceValue returns the TriggerPriceValue field value if set, zero value otherwise.
func (o *Order) GetTriggerPriceValue() string {
	if o == nil || IsNil(o.TriggerPriceValue) {
		var ret string
		return ret
	}
	return *o.TriggerPriceValue
}

// GetTriggerPriceValueOk returns a tuple with the TriggerPriceValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetTriggerPriceValueOk() (*string, bool) {
	if o == nil || IsNil(o.TriggerPriceValue) {
		return nil, false
	}
	return o.TriggerPriceValue, true
}

// HasTriggerPriceValue returns a boolean if a field has been set.
func (o *Order) HasTriggerPriceValue() bool {
	if o != nil && !IsNil(o.TriggerPriceValue) {
		return true
	}

	return false
}

// SetTriggerPriceValue gets a reference to the given string and assigns it to the TriggerPriceValue field.
func (o *Order) SetTriggerPriceValue(v string) {
	o.TriggerPriceValue = &v
}

// GetCancelReason returns the CancelReason field value if set, zero value otherwise.
func (o *Order) GetCancelReason() string {
	if o == nil || IsNil(o.CancelReason) {
		var ret string
		return ret
	}
	return *o.CancelReason
}

// GetCancelReasonOk returns a tuple with the CancelReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCancelReasonOk() (*string, bool) {
	if o == nil || IsNil(o.CancelReason) {
		return nil, false
	}
	return o.CancelReason, true
}

// HasCancelReason returns a boolean if a field has been set.
func (o *Order) HasCancelReason() bool {
	if o != nil && !IsNil(o.CancelReason) {
		return true
	}

	return false
}

// SetCancelReason gets a reference to the given string and assigns it to the CancelReason field.
func (o *Order) SetCancelReason(v string) {
	o.CancelReason = &v
}

// GetCumFillSize returns the CumFillSize field value if set, zero value otherwise.
func (o *Order) GetCumFillSize() string {
	if o == nil || IsNil(o.CumFillSize) {
		var ret string
		return ret
	}
	return *o.CumFillSize
}

// GetCumFillSizeOk returns a tuple with the CumFillSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCumFillSizeOk() (*string, bool) {
	if o == nil || IsNil(o.CumFillSize) {
		return nil, false
	}
	return o.CumFillSize, true
}

// HasCumFillSize returns a boolean if a field has been set.
func (o *Order) HasCumFillSize() bool {
	if o != nil && !IsNil(o.CumFillSize) {
		return true
	}

	return false
}

// SetCumFillSize gets a reference to the given string and assigns it to the CumFillSize field.
func (o *Order) SetCumFillSize(v string) {
	o.CumFillSize = &v
}

// GetCumFillValue returns the CumFillValue field value if set, zero value otherwise.
func (o *Order) GetCumFillValue() string {
	if o == nil || IsNil(o.CumFillValue) {
		var ret string
		return ret
	}
	return *o.CumFillValue
}

// GetCumFillValueOk returns a tuple with the CumFillValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCumFillValueOk() (*string, bool) {
	if o == nil || IsNil(o.CumFillValue) {
		return nil, false
	}
	return o.CumFillValue, true
}

// HasCumFillValue returns a boolean if a field has been set.
func (o *Order) HasCumFillValue() bool {
	if o != nil && !IsNil(o.CumFillValue) {
		return true
	}

	return false
}

// SetCumFillValue gets a reference to the given string and assigns it to the CumFillValue field.
func (o *Order) SetCumFillValue(v string) {
	o.CumFillValue = &v
}

// GetCumFillFee returns the CumFillFee field value if set, zero value otherwise.
func (o *Order) GetCumFillFee() string {
	if o == nil || IsNil(o.CumFillFee) {
		var ret string
		return ret
	}
	return *o.CumFillFee
}

// GetCumFillFeeOk returns a tuple with the CumFillFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCumFillFeeOk() (*string, bool) {
	if o == nil || IsNil(o.CumFillFee) {
		return nil, false
	}
	return o.CumFillFee, true
}

// HasCumFillFee returns a boolean if a field has been set.
func (o *Order) HasCumFillFee() bool {
	if o != nil && !IsNil(o.CumFillFee) {
		return true
	}

	return false
}

// SetCumFillFee gets a reference to the given string and assigns it to the CumFillFee field.
func (o *Order) SetCumFillFee(v string) {
	o.CumFillFee = &v
}

// GetMaxFillPrice returns the MaxFillPrice field value if set, zero value otherwise.
func (o *Order) GetMaxFillPrice() string {
	if o == nil || IsNil(o.MaxFillPrice) {
		var ret string
		return ret
	}
	return *o.MaxFillPrice
}

// GetMaxFillPriceOk returns a tuple with the MaxFillPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetMaxFillPriceOk() (*string, bool) {
	if o == nil || IsNil(o.MaxFillPrice) {
		return nil, false
	}
	return o.MaxFillPrice, true
}

// HasMaxFillPrice returns a boolean if a field has been set.
func (o *Order) HasMaxFillPrice() bool {
	if o != nil && !IsNil(o.MaxFillPrice) {
		return true
	}

	return false
}

// SetMaxFillPrice gets a reference to the given string and assigns it to the MaxFillPrice field.
func (o *Order) SetMaxFillPrice(v string) {
	o.MaxFillPrice = &v
}

// GetMinFillPrice returns the MinFillPrice field value if set, zero value otherwise.
func (o *Order) GetMinFillPrice() string {
	if o == nil || IsNil(o.MinFillPrice) {
		var ret string
		return ret
	}
	return *o.MinFillPrice
}

// GetMinFillPriceOk returns a tuple with the MinFillPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetMinFillPriceOk() (*string, bool) {
	if o == nil || IsNil(o.MinFillPrice) {
		return nil, false
	}
	return o.MinFillPrice, true
}

// HasMinFillPrice returns a boolean if a field has been set.
func (o *Order) HasMinFillPrice() bool {
	if o != nil && !IsNil(o.MinFillPrice) {
		return true
	}

	return false
}

// SetMinFillPrice gets a reference to the given string and assigns it to the MinFillPrice field.
func (o *Order) SetMinFillPrice(v string) {
	o.MinFillPrice = &v
}

// GetCumLiquidateFee returns the CumLiquidateFee field value if set, zero value otherwise.
func (o *Order) GetCumLiquidateFee() string {
	if o == nil || IsNil(o.CumLiquidateFee) {
		var ret string
		return ret
	}
	return *o.CumLiquidateFee
}

// GetCumLiquidateFeeOk returns a tuple with the CumLiquidateFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCumLiquidateFeeOk() (*string, bool) {
	if o == nil || IsNil(o.CumLiquidateFee) {
		return nil, false
	}
	return o.CumLiquidateFee, true
}

// HasCumLiquidateFee returns a boolean if a field has been set.
func (o *Order) HasCumLiquidateFee() bool {
	if o != nil && !IsNil(o.CumLiquidateFee) {
		return true
	}

	return false
}

// SetCumLiquidateFee gets a reference to the given string and assigns it to the CumLiquidateFee field.
func (o *Order) SetCumLiquidateFee(v string) {
	o.CumLiquidateFee = &v
}

// GetCumRealizePnl returns the CumRealizePnl field value if set, zero value otherwise.
func (o *Order) GetCumRealizePnl() string {
	if o == nil || IsNil(o.CumRealizePnl) {
		var ret string
		return ret
	}
	return *o.CumRealizePnl
}

// GetCumRealizePnlOk returns a tuple with the CumRealizePnl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCumRealizePnlOk() (*string, bool) {
	if o == nil || IsNil(o.CumRealizePnl) {
		return nil, false
	}
	return o.CumRealizePnl, true
}

// HasCumRealizePnl returns a boolean if a field has been set.
func (o *Order) HasCumRealizePnl() bool {
	if o != nil && !IsNil(o.CumRealizePnl) {
		return true
	}

	return false
}

// SetCumRealizePnl gets a reference to the given string and assigns it to the CumRealizePnl field.
func (o *Order) SetCumRealizePnl(v string) {
	o.CumRealizePnl = &v
}

// GetCumMatchSize returns the CumMatchSize field value if set, zero value otherwise.
func (o *Order) GetCumMatchSize() string {
	if o == nil || IsNil(o.CumMatchSize) {
		var ret string
		return ret
	}
	return *o.CumMatchSize
}

// GetCumMatchSizeOk returns a tuple with the CumMatchSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCumMatchSizeOk() (*string, bool) {
	if o == nil || IsNil(o.CumMatchSize) {
		return nil, false
	}
	return o.CumMatchSize, true
}

// HasCumMatchSize returns a boolean if a field has been set.
func (o *Order) HasCumMatchSize() bool {
	if o != nil && !IsNil(o.CumMatchSize) {
		return true
	}

	return false
}

// SetCumMatchSize gets a reference to the given string and assigns it to the CumMatchSize field.
func (o *Order) SetCumMatchSize(v string) {
	o.CumMatchSize = &v
}

// GetCumMatchValue returns the CumMatchValue field value if set, zero value otherwise.
func (o *Order) GetCumMatchValue() string {
	if o == nil || IsNil(o.CumMatchValue) {
		var ret string
		return ret
	}
	return *o.CumMatchValue
}

// GetCumMatchValueOk returns a tuple with the CumMatchValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCumMatchValueOk() (*string, bool) {
	if o == nil || IsNil(o.CumMatchValue) {
		return nil, false
	}
	return o.CumMatchValue, true
}

// HasCumMatchValue returns a boolean if a field has been set.
func (o *Order) HasCumMatchValue() bool {
	if o != nil && !IsNil(o.CumMatchValue) {
		return true
	}

	return false
}

// SetCumMatchValue gets a reference to the given string and assigns it to the CumMatchValue field.
func (o *Order) SetCumMatchValue(v string) {
	o.CumMatchValue = &v
}

// GetCumMatchFee returns the CumMatchFee field value if set, zero value otherwise.
func (o *Order) GetCumMatchFee() string {
	if o == nil || IsNil(o.CumMatchFee) {
		var ret string
		return ret
	}
	return *o.CumMatchFee
}

// GetCumMatchFeeOk returns a tuple with the CumMatchFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCumMatchFeeOk() (*string, bool) {
	if o == nil || IsNil(o.CumMatchFee) {
		return nil, false
	}
	return o.CumMatchFee, true
}

// HasCumMatchFee returns a boolean if a field has been set.
func (o *Order) HasCumMatchFee() bool {
	if o != nil && !IsNil(o.CumMatchFee) {
		return true
	}

	return false
}

// SetCumMatchFee gets a reference to the given string and assigns it to the CumMatchFee field.
func (o *Order) SetCumMatchFee(v string) {
	o.CumMatchFee = &v
}

// GetCumFailSize returns the CumFailSize field value if set, zero value otherwise.
func (o *Order) GetCumFailSize() string {
	if o == nil || IsNil(o.CumFailSize) {
		var ret string
		return ret
	}
	return *o.CumFailSize
}

// GetCumFailSizeOk returns a tuple with the CumFailSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCumFailSizeOk() (*string, bool) {
	if o == nil || IsNil(o.CumFailSize) {
		return nil, false
	}
	return o.CumFailSize, true
}

// HasCumFailSize returns a boolean if a field has been set.
func (o *Order) HasCumFailSize() bool {
	if o != nil && !IsNil(o.CumFailSize) {
		return true
	}

	return false
}

// SetCumFailSize gets a reference to the given string and assigns it to the CumFailSize field.
func (o *Order) SetCumFailSize(v string) {
	o.CumFailSize = &v
}

// GetCumFailValue returns the CumFailValue field value if set, zero value otherwise.
func (o *Order) GetCumFailValue() string {
	if o == nil || IsNil(o.CumFailValue) {
		var ret string
		return ret
	}
	return *o.CumFailValue
}

// GetCumFailValueOk returns a tuple with the CumFailValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCumFailValueOk() (*string, bool) {
	if o == nil || IsNil(o.CumFailValue) {
		return nil, false
	}
	return o.CumFailValue, true
}

// HasCumFailValue returns a boolean if a field has been set.
func (o *Order) HasCumFailValue() bool {
	if o != nil && !IsNil(o.CumFailValue) {
		return true
	}

	return false
}

// SetCumFailValue gets a reference to the given string and assigns it to the CumFailValue field.
func (o *Order) SetCumFailValue(v string) {
	o.CumFailValue = &v
}

// GetCumFailFee returns the CumFailFee field value if set, zero value otherwise.
func (o *Order) GetCumFailFee() string {
	if o == nil || IsNil(o.CumFailFee) {
		var ret string
		return ret
	}
	return *o.CumFailFee
}

// GetCumFailFeeOk returns a tuple with the CumFailFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCumFailFeeOk() (*string, bool) {
	if o == nil || IsNil(o.CumFailFee) {
		return nil, false
	}
	return o.CumFailFee, true
}

// HasCumFailFee returns a boolean if a field has been set.
func (o *Order) HasCumFailFee() bool {
	if o != nil && !IsNil(o.CumFailFee) {
		return true
	}

	return false
}

// SetCumFailFee gets a reference to the given string and assigns it to the CumFailFee field.
func (o *Order) SetCumFailFee(v string) {
	o.CumFailFee = &v
}

// GetCumApprovedSize returns the CumApprovedSize field value if set, zero value otherwise.
func (o *Order) GetCumApprovedSize() string {
	if o == nil || IsNil(o.CumApprovedSize) {
		var ret string
		return ret
	}
	return *o.CumApprovedSize
}

// GetCumApprovedSizeOk returns a tuple with the CumApprovedSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCumApprovedSizeOk() (*string, bool) {
	if o == nil || IsNil(o.CumApprovedSize) {
		return nil, false
	}
	return o.CumApprovedSize, true
}

// HasCumApprovedSize returns a boolean if a field has been set.
func (o *Order) HasCumApprovedSize() bool {
	if o != nil && !IsNil(o.CumApprovedSize) {
		return true
	}

	return false
}

// SetCumApprovedSize gets a reference to the given string and assigns it to the CumApprovedSize field.
func (o *Order) SetCumApprovedSize(v string) {
	o.CumApprovedSize = &v
}

// GetCumApprovedValue returns the CumApprovedValue field value if set, zero value otherwise.
func (o *Order) GetCumApprovedValue() string {
	if o == nil || IsNil(o.CumApprovedValue) {
		var ret string
		return ret
	}
	return *o.CumApprovedValue
}

// GetCumApprovedValueOk returns a tuple with the CumApprovedValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCumApprovedValueOk() (*string, bool) {
	if o == nil || IsNil(o.CumApprovedValue) {
		return nil, false
	}
	return o.CumApprovedValue, true
}

// HasCumApprovedValue returns a boolean if a field has been set.
func (o *Order) HasCumApprovedValue() bool {
	if o != nil && !IsNil(o.CumApprovedValue) {
		return true
	}

	return false
}

// SetCumApprovedValue gets a reference to the given string and assigns it to the CumApprovedValue field.
func (o *Order) SetCumApprovedValue(v string) {
	o.CumApprovedValue = &v
}

// GetCumApprovedFee returns the CumApprovedFee field value if set, zero value otherwise.
func (o *Order) GetCumApprovedFee() string {
	if o == nil || IsNil(o.CumApprovedFee) {
		var ret string
		return ret
	}
	return *o.CumApprovedFee
}

// GetCumApprovedFeeOk returns a tuple with the CumApprovedFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCumApprovedFeeOk() (*string, bool) {
	if o == nil || IsNil(o.CumApprovedFee) {
		return nil, false
	}
	return o.CumApprovedFee, true
}

// HasCumApprovedFee returns a boolean if a field has been set.
func (o *Order) HasCumApprovedFee() bool {
	if o != nil && !IsNil(o.CumApprovedFee) {
		return true
	}

	return false
}

// SetCumApprovedFee gets a reference to the given string and assigns it to the CumApprovedFee field.
func (o *Order) SetCumApprovedFee(v string) {
	o.CumApprovedFee = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *Order) GetCreatedTime() string {
	if o == nil || IsNil(o.CreatedTime) {
		var ret string
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCreatedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *Order) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given string and assigns it to the CreatedTime field.
func (o *Order) SetCreatedTime(v string) {
	o.CreatedTime = &v
}

// GetUpdatedTime returns the UpdatedTime field value if set, zero value otherwise.
func (o *Order) GetUpdatedTime() string {
	if o == nil || IsNil(o.UpdatedTime) {
		var ret string
		return ret
	}
	return *o.UpdatedTime
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetUpdatedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedTime) {
		return nil, false
	}
	return o.UpdatedTime, true
}

// HasUpdatedTime returns a boolean if a field has been set.
func (o *Order) HasUpdatedTime() bool {
	if o != nil && !IsNil(o.UpdatedTime) {
		return true
	}

	return false
}

// SetUpdatedTime gets a reference to the given string and assigns it to the UpdatedTime field.
func (o *Order) SetUpdatedTime(v string) {
	o.UpdatedTime = &v
}

func (o Order) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Order) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.CoinId) {
		toSerialize["coinId"] = o.CoinId
	}
	if !IsNil(o.ContractId) {
		toSerialize["contractId"] = o.ContractId
	}
	if !IsNil(o.Side) {
		toSerialize["side"] = o.Side
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.ClientOrderId) {
		toSerialize["clientOrderId"] = o.ClientOrderId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.TimeInForce) {
		toSerialize["timeInForce"] = o.TimeInForce
	}
	if !IsNil(o.ReduceOnly) {
		toSerialize["reduceOnly"] = o.ReduceOnly
	}
	if !IsNil(o.TriggerPrice) {
		toSerialize["triggerPrice"] = o.TriggerPrice
	}
	if !IsNil(o.TriggerPriceType) {
		toSerialize["triggerPriceType"] = o.TriggerPriceType
	}
	if !IsNil(o.ExpireTime) {
		toSerialize["expireTime"] = o.ExpireTime
	}
	if !IsNil(o.SourceKey) {
		toSerialize["sourceKey"] = o.SourceKey
	}
	if !IsNil(o.IsPositionTpsl) {
		toSerialize["isPositionTpsl"] = o.IsPositionTpsl
	}
	if !IsNil(o.IsLiquidate) {
		toSerialize["isLiquidate"] = o.IsLiquidate
	}
	if !IsNil(o.IsDeleverage) {
		toSerialize["isDeleverage"] = o.IsDeleverage
	}
	if !IsNil(o.OpenTpslParentOrderId) {
		toSerialize["openTpslParentOrderId"] = o.OpenTpslParentOrderId
	}
	if !IsNil(o.IsSetOpenTp) {
		toSerialize["isSetOpenTp"] = o.IsSetOpenTp
	}
	if !IsNil(o.OpenTp) {
		toSerialize["openTp"] = o.OpenTp
	}
	if !IsNil(o.IsSetOpenSl) {
		toSerialize["isSetOpenSl"] = o.IsSetOpenSl
	}
	if !IsNil(o.OpenSl) {
		toSerialize["openSl"] = o.OpenSl
	}
	if !IsNil(o.IsWithoutMatch) {
		toSerialize["isWithoutMatch"] = o.IsWithoutMatch
	}
	if !IsNil(o.WithoutMatchFillSize) {
		toSerialize["withoutMatchFillSize"] = o.WithoutMatchFillSize
	}
	if !IsNil(o.WithoutMatchFillValue) {
		toSerialize["withoutMatchFillValue"] = o.WithoutMatchFillValue
	}
	if !IsNil(o.WithoutMatchPeerAccountId) {
		toSerialize["withoutMatchPeerAccountId"] = o.WithoutMatchPeerAccountId
	}
	if !IsNil(o.WithoutMatchPeerOrderId) {
		toSerialize["withoutMatchPeerOrderId"] = o.WithoutMatchPeerOrderId
	}
	if !IsNil(o.MaxLeverage) {
		toSerialize["maxLeverage"] = o.MaxLeverage
	}
	if !IsNil(o.TakerFeeRate) {
		toSerialize["takerFeeRate"] = o.TakerFeeRate
	}
	if !IsNil(o.MakerFeeRate) {
		toSerialize["makerFeeRate"] = o.MakerFeeRate
	}
	if !IsNil(o.LiquidateFeeRate) {
		toSerialize["liquidateFeeRate"] = o.LiquidateFeeRate
	}
	if !IsNil(o.MarketLimitPrice) {
		toSerialize["marketLimitPrice"] = o.MarketLimitPrice
	}
	if !IsNil(o.MarketLimitValue) {
		toSerialize["marketLimitValue"] = o.MarketLimitValue
	}
	if !IsNil(o.L2Nonce) {
		toSerialize["l2Nonce"] = o.L2Nonce
	}
	if !IsNil(o.L2Value) {
		toSerialize["l2Value"] = o.L2Value
	}
	if !IsNil(o.L2Size) {
		toSerialize["l2Size"] = o.L2Size
	}
	if !IsNil(o.L2LimitFee) {
		toSerialize["l2LimitFee"] = o.L2LimitFee
	}
	if !IsNil(o.L2ExpireTime) {
		toSerialize["l2ExpireTime"] = o.L2ExpireTime
	}
	if !IsNil(o.L2Signature) {
		toSerialize["l2Signature"] = o.L2Signature
	}
	if !IsNil(o.ExtraType) {
		toSerialize["extraType"] = o.ExtraType
	}
	if !IsNil(o.ExtraDataJson) {
		toSerialize["extraDataJson"] = o.ExtraDataJson
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.MatchSequenceId) {
		toSerialize["matchSequenceId"] = o.MatchSequenceId
	}
	if !IsNil(o.TriggerTime) {
		toSerialize["triggerTime"] = o.TriggerTime
	}
	if !IsNil(o.TriggerPriceTime) {
		toSerialize["triggerPriceTime"] = o.TriggerPriceTime
	}
	if !IsNil(o.TriggerPriceValue) {
		toSerialize["triggerPriceValue"] = o.TriggerPriceValue
	}
	if !IsNil(o.CancelReason) {
		toSerialize["cancelReason"] = o.CancelReason
	}
	if !IsNil(o.CumFillSize) {
		toSerialize["cumFillSize"] = o.CumFillSize
	}
	if !IsNil(o.CumFillValue) {
		toSerialize["cumFillValue"] = o.CumFillValue
	}
	if !IsNil(o.CumFillFee) {
		toSerialize["cumFillFee"] = o.CumFillFee
	}
	if !IsNil(o.MaxFillPrice) {
		toSerialize["maxFillPrice"] = o.MaxFillPrice
	}
	if !IsNil(o.MinFillPrice) {
		toSerialize["minFillPrice"] = o.MinFillPrice
	}
	if !IsNil(o.CumLiquidateFee) {
		toSerialize["cumLiquidateFee"] = o.CumLiquidateFee
	}
	if !IsNil(o.CumRealizePnl) {
		toSerialize["cumRealizePnl"] = o.CumRealizePnl
	}
	if !IsNil(o.CumMatchSize) {
		toSerialize["cumMatchSize"] = o.CumMatchSize
	}
	if !IsNil(o.CumMatchValue) {
		toSerialize["cumMatchValue"] = o.CumMatchValue
	}
	if !IsNil(o.CumMatchFee) {
		toSerialize["cumMatchFee"] = o.CumMatchFee
	}
	if !IsNil(o.CumFailSize) {
		toSerialize["cumFailSize"] = o.CumFailSize
	}
	if !IsNil(o.CumFailValue) {
		toSerialize["cumFailValue"] = o.CumFailValue
	}
	if !IsNil(o.CumFailFee) {
		toSerialize["cumFailFee"] = o.CumFailFee
	}
	if !IsNil(o.CumApprovedSize) {
		toSerialize["cumApprovedSize"] = o.CumApprovedSize
	}
	if !IsNil(o.CumApprovedValue) {
		toSerialize["cumApprovedValue"] = o.CumApprovedValue
	}
	if !IsNil(o.CumApprovedFee) {
		toSerialize["cumApprovedFee"] = o.CumApprovedFee
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["createdTime"] = o.CreatedTime
	}
	if !IsNil(o.UpdatedTime) {
		toSerialize["updatedTime"] = o.UpdatedTime
	}
	return toSerialize, nil
}

type NullableOrder struct {
	value *Order
	isSet bool
}

func (v NullableOrder) Get() *Order {
	return v.value
}

func (v *NullableOrder) Set(val *Order) {
	v.value = val
	v.isSet = true
}

func (v NullableOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrder(val *Order) *NullableOrder {
	return &NullableOrder{value: val, isSet: true}
}

func (v NullableOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


