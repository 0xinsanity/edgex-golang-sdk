/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetAccountDeleverageLight type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAccountDeleverageLight{}

// GetAccountDeleverageLight 获取账户下所有仓位减仓ADL灯-响应
type GetAccountDeleverageLight struct {
	// 仓位合约id到灯的映射。light_number 取值 1-5，代表1-5盏灯
	PositionContractIdToLightNumberMap *map[string]int32 `json:"positionContractIdToLightNumberMap,omitempty"`
}

// NewGetAccountDeleverageLight instantiates a new GetAccountDeleverageLight object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAccountDeleverageLight() *GetAccountDeleverageLight {
	this := GetAccountDeleverageLight{}
	return &this
}

// NewGetAccountDeleverageLightWithDefaults instantiates a new GetAccountDeleverageLight object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAccountDeleverageLightWithDefaults() *GetAccountDeleverageLight {
	this := GetAccountDeleverageLight{}
	return &this
}

// GetPositionContractIdToLightNumberMap returns the PositionContractIdToLightNumberMap field value if set, zero value otherwise.
func (o *GetAccountDeleverageLight) GetPositionContractIdToLightNumberMap() map[string]int32 {
	if o == nil || IsNil(o.PositionContractIdToLightNumberMap) {
		var ret map[string]int32
		return ret
	}
	return *o.PositionContractIdToLightNumberMap
}

// GetPositionContractIdToLightNumberMapOk returns a tuple with the PositionContractIdToLightNumberMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountDeleverageLight) GetPositionContractIdToLightNumberMapOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.PositionContractIdToLightNumberMap) {
		return nil, false
	}
	return o.PositionContractIdToLightNumberMap, true
}

// HasPositionContractIdToLightNumberMap returns a boolean if a field has been set.
func (o *GetAccountDeleverageLight) HasPositionContractIdToLightNumberMap() bool {
	if o != nil && !IsNil(o.PositionContractIdToLightNumberMap) {
		return true
	}

	return false
}

// SetPositionContractIdToLightNumberMap gets a reference to the given map[string]int32 and assigns it to the PositionContractIdToLightNumberMap field.
func (o *GetAccountDeleverageLight) SetPositionContractIdToLightNumberMap(v map[string]int32) {
	o.PositionContractIdToLightNumberMap = &v
}

func (o GetAccountDeleverageLight) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAccountDeleverageLight) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PositionContractIdToLightNumberMap) {
		toSerialize["positionContractIdToLightNumberMap"] = o.PositionContractIdToLightNumberMap
	}
	return toSerialize, nil
}

type NullableGetAccountDeleverageLight struct {
	value *GetAccountDeleverageLight
	isSet bool
}

func (v NullableGetAccountDeleverageLight) Get() *GetAccountDeleverageLight {
	return v.value
}

func (v *NullableGetAccountDeleverageLight) Set(val *GetAccountDeleverageLight) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAccountDeleverageLight) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAccountDeleverageLight) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAccountDeleverageLight(val *GetAccountDeleverageLight) *NullableGetAccountDeleverageLight {
	return &NullableGetAccountDeleverageLight{value: val, isSet: true}
}

func (v NullableGetAccountDeleverageLight) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAccountDeleverageLight) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


