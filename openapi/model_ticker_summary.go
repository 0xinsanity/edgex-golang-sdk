/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TickerSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TickerSummary{}

// TickerSummary 行情汇总
type TickerSummary struct {
	// 汇总周期
	Period *string `json:"period,omitempty"`
	// 交易所总交易笔数
	Trades *string `json:"trades,omitempty"`
	// 总成交金额
	Value *string `json:"value,omitempty"`
	// 当前总未平仓额
	OpenInterest *string `json:"openInterest,omitempty"`
}

// NewTickerSummary instantiates a new TickerSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTickerSummary() *TickerSummary {
	this := TickerSummary{}
	return &this
}

// NewTickerSummaryWithDefaults instantiates a new TickerSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTickerSummaryWithDefaults() *TickerSummary {
	this := TickerSummary{}
	return &this
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *TickerSummary) GetPeriod() string {
	if o == nil || IsNil(o.Period) {
		var ret string
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TickerSummary) GetPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.Period) {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *TickerSummary) HasPeriod() bool {
	if o != nil && !IsNil(o.Period) {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given string and assigns it to the Period field.
func (o *TickerSummary) SetPeriod(v string) {
	o.Period = &v
}

// GetTrades returns the Trades field value if set, zero value otherwise.
func (o *TickerSummary) GetTrades() string {
	if o == nil || IsNil(o.Trades) {
		var ret string
		return ret
	}
	return *o.Trades
}

// GetTradesOk returns a tuple with the Trades field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TickerSummary) GetTradesOk() (*string, bool) {
	if o == nil || IsNil(o.Trades) {
		return nil, false
	}
	return o.Trades, true
}

// HasTrades returns a boolean if a field has been set.
func (o *TickerSummary) HasTrades() bool {
	if o != nil && !IsNil(o.Trades) {
		return true
	}

	return false
}

// SetTrades gets a reference to the given string and assigns it to the Trades field.
func (o *TickerSummary) SetTrades(v string) {
	o.Trades = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *TickerSummary) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TickerSummary) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *TickerSummary) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *TickerSummary) SetValue(v string) {
	o.Value = &v
}

// GetOpenInterest returns the OpenInterest field value if set, zero value otherwise.
func (o *TickerSummary) GetOpenInterest() string {
	if o == nil || IsNil(o.OpenInterest) {
		var ret string
		return ret
	}
	return *o.OpenInterest
}

// GetOpenInterestOk returns a tuple with the OpenInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TickerSummary) GetOpenInterestOk() (*string, bool) {
	if o == nil || IsNil(o.OpenInterest) {
		return nil, false
	}
	return o.OpenInterest, true
}

// HasOpenInterest returns a boolean if a field has been set.
func (o *TickerSummary) HasOpenInterest() bool {
	if o != nil && !IsNil(o.OpenInterest) {
		return true
	}

	return false
}

// SetOpenInterest gets a reference to the given string and assigns it to the OpenInterest field.
func (o *TickerSummary) SetOpenInterest(v string) {
	o.OpenInterest = &v
}

func (o TickerSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TickerSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Period) {
		toSerialize["period"] = o.Period
	}
	if !IsNil(o.Trades) {
		toSerialize["trades"] = o.Trades
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.OpenInterest) {
		toSerialize["openInterest"] = o.OpenInterest
	}
	return toSerialize, nil
}

type NullableTickerSummary struct {
	value *TickerSummary
	isSet bool
}

func (v NullableTickerSummary) Get() *TickerSummary {
	return v.value
}

func (v *NullableTickerSummary) Set(val *TickerSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableTickerSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableTickerSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTickerSummary(val *TickerSummary) *NullableTickerSummary {
	return &NullableTickerSummary{value: val, isSet: true}
}

func (v NullableTickerSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTickerSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


