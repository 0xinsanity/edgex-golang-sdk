/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MultiChainToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiChainToken{}

// MultiChainToken 跨链相关币种类
type MultiChainToken struct {
	// token合约地址
	TokenAddress *string `json:"tokenAddress,omitempty"`
	// token精度
	Decimals *string `json:"decimals,omitempty"`
	// token图标url
	IconUrl *string `json:"iconUrl,omitempty"`
	// token name
	Token *string `json:"token,omitempty"`
	// 是否下架，默认false
	PullOff *bool `json:"pullOff,omitempty"`
	// 是否支持提现该类型资产
	WithdrawEnable *bool `json:"withdrawEnable,omitempty"`
	// 是否使用固定汇率
	UseFixedRate *bool `json:"useFixedRate,omitempty"`
	// 固定汇率
	FixedRate *string `json:"fixedRate,omitempty"`
}

// NewMultiChainToken instantiates a new MultiChainToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiChainToken() *MultiChainToken {
	this := MultiChainToken{}
	return &this
}

// NewMultiChainTokenWithDefaults instantiates a new MultiChainToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiChainTokenWithDefaults() *MultiChainToken {
	this := MultiChainToken{}
	return &this
}

// GetTokenAddress returns the TokenAddress field value if set, zero value otherwise.
func (o *MultiChainToken) GetTokenAddress() string {
	if o == nil || IsNil(o.TokenAddress) {
		var ret string
		return ret
	}
	return *o.TokenAddress
}

// GetTokenAddressOk returns a tuple with the TokenAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiChainToken) GetTokenAddressOk() (*string, bool) {
	if o == nil || IsNil(o.TokenAddress) {
		return nil, false
	}
	return o.TokenAddress, true
}

// HasTokenAddress returns a boolean if a field has been set.
func (o *MultiChainToken) HasTokenAddress() bool {
	if o != nil && !IsNil(o.TokenAddress) {
		return true
	}

	return false
}

// SetTokenAddress gets a reference to the given string and assigns it to the TokenAddress field.
func (o *MultiChainToken) SetTokenAddress(v string) {
	o.TokenAddress = &v
}

// GetDecimals returns the Decimals field value if set, zero value otherwise.
func (o *MultiChainToken) GetDecimals() string {
	if o == nil || IsNil(o.Decimals) {
		var ret string
		return ret
	}
	return *o.Decimals
}

// GetDecimalsOk returns a tuple with the Decimals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiChainToken) GetDecimalsOk() (*string, bool) {
	if o == nil || IsNil(o.Decimals) {
		return nil, false
	}
	return o.Decimals, true
}

// HasDecimals returns a boolean if a field has been set.
func (o *MultiChainToken) HasDecimals() bool {
	if o != nil && !IsNil(o.Decimals) {
		return true
	}

	return false
}

// SetDecimals gets a reference to the given string and assigns it to the Decimals field.
func (o *MultiChainToken) SetDecimals(v string) {
	o.Decimals = &v
}

// GetIconUrl returns the IconUrl field value if set, zero value otherwise.
func (o *MultiChainToken) GetIconUrl() string {
	if o == nil || IsNil(o.IconUrl) {
		var ret string
		return ret
	}
	return *o.IconUrl
}

// GetIconUrlOk returns a tuple with the IconUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiChainToken) GetIconUrlOk() (*string, bool) {
	if o == nil || IsNil(o.IconUrl) {
		return nil, false
	}
	return o.IconUrl, true
}

// HasIconUrl returns a boolean if a field has been set.
func (o *MultiChainToken) HasIconUrl() bool {
	if o != nil && !IsNil(o.IconUrl) {
		return true
	}

	return false
}

// SetIconUrl gets a reference to the given string and assigns it to the IconUrl field.
func (o *MultiChainToken) SetIconUrl(v string) {
	o.IconUrl = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *MultiChainToken) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiChainToken) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *MultiChainToken) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *MultiChainToken) SetToken(v string) {
	o.Token = &v
}

// GetPullOff returns the PullOff field value if set, zero value otherwise.
func (o *MultiChainToken) GetPullOff() bool {
	if o == nil || IsNil(o.PullOff) {
		var ret bool
		return ret
	}
	return *o.PullOff
}

// GetPullOffOk returns a tuple with the PullOff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiChainToken) GetPullOffOk() (*bool, bool) {
	if o == nil || IsNil(o.PullOff) {
		return nil, false
	}
	return o.PullOff, true
}

// HasPullOff returns a boolean if a field has been set.
func (o *MultiChainToken) HasPullOff() bool {
	if o != nil && !IsNil(o.PullOff) {
		return true
	}

	return false
}

// SetPullOff gets a reference to the given bool and assigns it to the PullOff field.
func (o *MultiChainToken) SetPullOff(v bool) {
	o.PullOff = &v
}

// GetWithdrawEnable returns the WithdrawEnable field value if set, zero value otherwise.
func (o *MultiChainToken) GetWithdrawEnable() bool {
	if o == nil || IsNil(o.WithdrawEnable) {
		var ret bool
		return ret
	}
	return *o.WithdrawEnable
}

// GetWithdrawEnableOk returns a tuple with the WithdrawEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiChainToken) GetWithdrawEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.WithdrawEnable) {
		return nil, false
	}
	return o.WithdrawEnable, true
}

// HasWithdrawEnable returns a boolean if a field has been set.
func (o *MultiChainToken) HasWithdrawEnable() bool {
	if o != nil && !IsNil(o.WithdrawEnable) {
		return true
	}

	return false
}

// SetWithdrawEnable gets a reference to the given bool and assigns it to the WithdrawEnable field.
func (o *MultiChainToken) SetWithdrawEnable(v bool) {
	o.WithdrawEnable = &v
}

// GetUseFixedRate returns the UseFixedRate field value if set, zero value otherwise.
func (o *MultiChainToken) GetUseFixedRate() bool {
	if o == nil || IsNil(o.UseFixedRate) {
		var ret bool
		return ret
	}
	return *o.UseFixedRate
}

// GetUseFixedRateOk returns a tuple with the UseFixedRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiChainToken) GetUseFixedRateOk() (*bool, bool) {
	if o == nil || IsNil(o.UseFixedRate) {
		return nil, false
	}
	return o.UseFixedRate, true
}

// HasUseFixedRate returns a boolean if a field has been set.
func (o *MultiChainToken) HasUseFixedRate() bool {
	if o != nil && !IsNil(o.UseFixedRate) {
		return true
	}

	return false
}

// SetUseFixedRate gets a reference to the given bool and assigns it to the UseFixedRate field.
func (o *MultiChainToken) SetUseFixedRate(v bool) {
	o.UseFixedRate = &v
}

// GetFixedRate returns the FixedRate field value if set, zero value otherwise.
func (o *MultiChainToken) GetFixedRate() string {
	if o == nil || IsNil(o.FixedRate) {
		var ret string
		return ret
	}
	return *o.FixedRate
}

// GetFixedRateOk returns a tuple with the FixedRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiChainToken) GetFixedRateOk() (*string, bool) {
	if o == nil || IsNil(o.FixedRate) {
		return nil, false
	}
	return o.FixedRate, true
}

// HasFixedRate returns a boolean if a field has been set.
func (o *MultiChainToken) HasFixedRate() bool {
	if o != nil && !IsNil(o.FixedRate) {
		return true
	}

	return false
}

// SetFixedRate gets a reference to the given string and assigns it to the FixedRate field.
func (o *MultiChainToken) SetFixedRate(v string) {
	o.FixedRate = &v
}

func (o MultiChainToken) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiChainToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TokenAddress) {
		toSerialize["tokenAddress"] = o.TokenAddress
	}
	if !IsNil(o.Decimals) {
		toSerialize["decimals"] = o.Decimals
	}
	if !IsNil(o.IconUrl) {
		toSerialize["iconUrl"] = o.IconUrl
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.PullOff) {
		toSerialize["pullOff"] = o.PullOff
	}
	if !IsNil(o.WithdrawEnable) {
		toSerialize["withdrawEnable"] = o.WithdrawEnable
	}
	if !IsNil(o.UseFixedRate) {
		toSerialize["useFixedRate"] = o.UseFixedRate
	}
	if !IsNil(o.FixedRate) {
		toSerialize["fixedRate"] = o.FixedRate
	}
	return toSerialize, nil
}

type NullableMultiChainToken struct {
	value *MultiChainToken
	isSet bool
}

func (v NullableMultiChainToken) Get() *MultiChainToken {
	return v.value
}

func (v *NullableMultiChainToken) Set(val *MultiChainToken) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiChainToken) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiChainToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiChainToken(val *MultiChainToken) *NullableMultiChainToken {
	return &NullableMultiChainToken{value: val, isSet: true}
}

func (v NullableMultiChainToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiChainToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


