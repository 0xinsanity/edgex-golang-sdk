/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Account type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Account{}

// Account 账户信息数据
type Account struct {
	// 账户id。取值大于0
	Id *string `json:"id,omitempty"`
	// 所属用户id
	UserId *string `json:"userId,omitempty"`
	// 钱包eth地址
	EthAddress *string `json:"ethAddress,omitempty"`
	// L2上的账户key。对应starkEx中的starkKey。bigint for hex str
	L2Key *string `json:"l2Key,omitempty"`
	// 只用于验证 l2Signature 是否ok。不返回给C端用户。bigint for hex str
	L2KeyYCoordinate *string `json:"l2KeyYCoordinate,omitempty"`
	// 客户端账户id, 用于幂等性校验
	ClientAccountId *string `json:"clientAccountId,omitempty"`
	// 是否为系统账号 (系统账户不受合约相关风险设置限制,使用单独的mq发送trade消息)
	IsSystemAccount *bool `json:"isSystemAccount,omitempty"`
	DefaultTradeSetting *TradeSetting `json:"defaultTradeSetting,omitempty"`
	// 账户合约级别交易设置
	ContractIdToTradeSetting *map[string]TradeSetting `json:"contractIdToTradeSetting,omitempty"`
	// 用户可设置的最大开仓杠杆限制，如果为0则使用对应交易合约的杠杆限制
	MaxLeverageLimit *string `json:"maxLeverageLimit,omitempty"`
	// 下单频率每分钟限制，如果为0使用默认频率限制，如果<0则不限制下单频率
	CreateOrderPerMinuteLimit *int32 `json:"createOrderPerMinuteLimit,omitempty"`
	// 下单延迟毫秒，必须大于等于0
	CreateOrderDelayMillis *int32 `json:"createOrderDelayMillis,omitempty"`
	// 附加类型，供上层业务使用
	ExtraType *string `json:"extraType,omitempty"`
	// 附加数据，json格式，默认为空串
	ExtraDataJson *string `json:"extraDataJson,omitempty"`
	// 账户状态
	Status *string `json:"status,omitempty"`
	// 是否清算中
	IsLiquidating *bool `json:"isLiquidating,omitempty"`
	// 创建时间
	CreatedTime *string `json:"createdTime,omitempty"`
	// 更新时间
	UpdatedTime *string `json:"updatedTime,omitempty"`
}

// NewAccount instantiates a new Account object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccount() *Account {
	this := Account{}
	return &this
}

// NewAccountWithDefaults instantiates a new Account object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountWithDefaults() *Account {
	this := Account{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Account) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Account) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Account) SetId(v string) {
	o.Id = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *Account) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *Account) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *Account) SetUserId(v string) {
	o.UserId = &v
}

// GetEthAddress returns the EthAddress field value if set, zero value otherwise.
func (o *Account) GetEthAddress() string {
	if o == nil || IsNil(o.EthAddress) {
		var ret string
		return ret
	}
	return *o.EthAddress
}

// GetEthAddressOk returns a tuple with the EthAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetEthAddressOk() (*string, bool) {
	if o == nil || IsNil(o.EthAddress) {
		return nil, false
	}
	return o.EthAddress, true
}

// HasEthAddress returns a boolean if a field has been set.
func (o *Account) HasEthAddress() bool {
	if o != nil && !IsNil(o.EthAddress) {
		return true
	}

	return false
}

// SetEthAddress gets a reference to the given string and assigns it to the EthAddress field.
func (o *Account) SetEthAddress(v string) {
	o.EthAddress = &v
}

// GetL2Key returns the L2Key field value if set, zero value otherwise.
func (o *Account) GetL2Key() string {
	if o == nil || IsNil(o.L2Key) {
		var ret string
		return ret
	}
	return *o.L2Key
}

// GetL2KeyOk returns a tuple with the L2Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetL2KeyOk() (*string, bool) {
	if o == nil || IsNil(o.L2Key) {
		return nil, false
	}
	return o.L2Key, true
}

// HasL2Key returns a boolean if a field has been set.
func (o *Account) HasL2Key() bool {
	if o != nil && !IsNil(o.L2Key) {
		return true
	}

	return false
}

// SetL2Key gets a reference to the given string and assigns it to the L2Key field.
func (o *Account) SetL2Key(v string) {
	o.L2Key = &v
}

// GetL2KeyYCoordinate returns the L2KeyYCoordinate field value if set, zero value otherwise.
func (o *Account) GetL2KeyYCoordinate() string {
	if o == nil || IsNil(o.L2KeyYCoordinate) {
		var ret string
		return ret
	}
	return *o.L2KeyYCoordinate
}

// GetL2KeyYCoordinateOk returns a tuple with the L2KeyYCoordinate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetL2KeyYCoordinateOk() (*string, bool) {
	if o == nil || IsNil(o.L2KeyYCoordinate) {
		return nil, false
	}
	return o.L2KeyYCoordinate, true
}

// HasL2KeyYCoordinate returns a boolean if a field has been set.
func (o *Account) HasL2KeyYCoordinate() bool {
	if o != nil && !IsNil(o.L2KeyYCoordinate) {
		return true
	}

	return false
}

// SetL2KeyYCoordinate gets a reference to the given string and assigns it to the L2KeyYCoordinate field.
func (o *Account) SetL2KeyYCoordinate(v string) {
	o.L2KeyYCoordinate = &v
}

// GetClientAccountId returns the ClientAccountId field value if set, zero value otherwise.
func (o *Account) GetClientAccountId() string {
	if o == nil || IsNil(o.ClientAccountId) {
		var ret string
		return ret
	}
	return *o.ClientAccountId
}

// GetClientAccountIdOk returns a tuple with the ClientAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetClientAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientAccountId) {
		return nil, false
	}
	return o.ClientAccountId, true
}

// HasClientAccountId returns a boolean if a field has been set.
func (o *Account) HasClientAccountId() bool {
	if o != nil && !IsNil(o.ClientAccountId) {
		return true
	}

	return false
}

// SetClientAccountId gets a reference to the given string and assigns it to the ClientAccountId field.
func (o *Account) SetClientAccountId(v string) {
	o.ClientAccountId = &v
}

// GetIsSystemAccount returns the IsSystemAccount field value if set, zero value otherwise.
func (o *Account) GetIsSystemAccount() bool {
	if o == nil || IsNil(o.IsSystemAccount) {
		var ret bool
		return ret
	}
	return *o.IsSystemAccount
}

// GetIsSystemAccountOk returns a tuple with the IsSystemAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetIsSystemAccountOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSystemAccount) {
		return nil, false
	}
	return o.IsSystemAccount, true
}

// HasIsSystemAccount returns a boolean if a field has been set.
func (o *Account) HasIsSystemAccount() bool {
	if o != nil && !IsNil(o.IsSystemAccount) {
		return true
	}

	return false
}

// SetIsSystemAccount gets a reference to the given bool and assigns it to the IsSystemAccount field.
func (o *Account) SetIsSystemAccount(v bool) {
	o.IsSystemAccount = &v
}

// GetDefaultTradeSetting returns the DefaultTradeSetting field value if set, zero value otherwise.
func (o *Account) GetDefaultTradeSetting() TradeSetting {
	if o == nil || IsNil(o.DefaultTradeSetting) {
		var ret TradeSetting
		return ret
	}
	return *o.DefaultTradeSetting
}

// GetDefaultTradeSettingOk returns a tuple with the DefaultTradeSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetDefaultTradeSettingOk() (*TradeSetting, bool) {
	if o == nil || IsNil(o.DefaultTradeSetting) {
		return nil, false
	}
	return o.DefaultTradeSetting, true
}

// HasDefaultTradeSetting returns a boolean if a field has been set.
func (o *Account) HasDefaultTradeSetting() bool {
	if o != nil && !IsNil(o.DefaultTradeSetting) {
		return true
	}

	return false
}

// SetDefaultTradeSetting gets a reference to the given TradeSetting and assigns it to the DefaultTradeSetting field.
func (o *Account) SetDefaultTradeSetting(v TradeSetting) {
	o.DefaultTradeSetting = &v
}

// GetContractIdToTradeSetting returns the ContractIdToTradeSetting field value if set, zero value otherwise.
func (o *Account) GetContractIdToTradeSetting() map[string]TradeSetting {
	if o == nil || IsNil(o.ContractIdToTradeSetting) {
		var ret map[string]TradeSetting
		return ret
	}
	return *o.ContractIdToTradeSetting
}

// GetContractIdToTradeSettingOk returns a tuple with the ContractIdToTradeSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetContractIdToTradeSettingOk() (*map[string]TradeSetting, bool) {
	if o == nil || IsNil(o.ContractIdToTradeSetting) {
		return nil, false
	}
	return o.ContractIdToTradeSetting, true
}

// HasContractIdToTradeSetting returns a boolean if a field has been set.
func (o *Account) HasContractIdToTradeSetting() bool {
	if o != nil && !IsNil(o.ContractIdToTradeSetting) {
		return true
	}

	return false
}

// SetContractIdToTradeSetting gets a reference to the given map[string]TradeSetting and assigns it to the ContractIdToTradeSetting field.
func (o *Account) SetContractIdToTradeSetting(v map[string]TradeSetting) {
	o.ContractIdToTradeSetting = &v
}

// GetMaxLeverageLimit returns the MaxLeverageLimit field value if set, zero value otherwise.
func (o *Account) GetMaxLeverageLimit() string {
	if o == nil || IsNil(o.MaxLeverageLimit) {
		var ret string
		return ret
	}
	return *o.MaxLeverageLimit
}

// GetMaxLeverageLimitOk returns a tuple with the MaxLeverageLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetMaxLeverageLimitOk() (*string, bool) {
	if o == nil || IsNil(o.MaxLeverageLimit) {
		return nil, false
	}
	return o.MaxLeverageLimit, true
}

// HasMaxLeverageLimit returns a boolean if a field has been set.
func (o *Account) HasMaxLeverageLimit() bool {
	if o != nil && !IsNil(o.MaxLeverageLimit) {
		return true
	}

	return false
}

// SetMaxLeverageLimit gets a reference to the given string and assigns it to the MaxLeverageLimit field.
func (o *Account) SetMaxLeverageLimit(v string) {
	o.MaxLeverageLimit = &v
}

// GetCreateOrderPerMinuteLimit returns the CreateOrderPerMinuteLimit field value if set, zero value otherwise.
func (o *Account) GetCreateOrderPerMinuteLimit() int32 {
	if o == nil || IsNil(o.CreateOrderPerMinuteLimit) {
		var ret int32
		return ret
	}
	return *o.CreateOrderPerMinuteLimit
}

// GetCreateOrderPerMinuteLimitOk returns a tuple with the CreateOrderPerMinuteLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetCreateOrderPerMinuteLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.CreateOrderPerMinuteLimit) {
		return nil, false
	}
	return o.CreateOrderPerMinuteLimit, true
}

// HasCreateOrderPerMinuteLimit returns a boolean if a field has been set.
func (o *Account) HasCreateOrderPerMinuteLimit() bool {
	if o != nil && !IsNil(o.CreateOrderPerMinuteLimit) {
		return true
	}

	return false
}

// SetCreateOrderPerMinuteLimit gets a reference to the given int32 and assigns it to the CreateOrderPerMinuteLimit field.
func (o *Account) SetCreateOrderPerMinuteLimit(v int32) {
	o.CreateOrderPerMinuteLimit = &v
}

// GetCreateOrderDelayMillis returns the CreateOrderDelayMillis field value if set, zero value otherwise.
func (o *Account) GetCreateOrderDelayMillis() int32 {
	if o == nil || IsNil(o.CreateOrderDelayMillis) {
		var ret int32
		return ret
	}
	return *o.CreateOrderDelayMillis
}

// GetCreateOrderDelayMillisOk returns a tuple with the CreateOrderDelayMillis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetCreateOrderDelayMillisOk() (*int32, bool) {
	if o == nil || IsNil(o.CreateOrderDelayMillis) {
		return nil, false
	}
	return o.CreateOrderDelayMillis, true
}

// HasCreateOrderDelayMillis returns a boolean if a field has been set.
func (o *Account) HasCreateOrderDelayMillis() bool {
	if o != nil && !IsNil(o.CreateOrderDelayMillis) {
		return true
	}

	return false
}

// SetCreateOrderDelayMillis gets a reference to the given int32 and assigns it to the CreateOrderDelayMillis field.
func (o *Account) SetCreateOrderDelayMillis(v int32) {
	o.CreateOrderDelayMillis = &v
}

// GetExtraType returns the ExtraType field value if set, zero value otherwise.
func (o *Account) GetExtraType() string {
	if o == nil || IsNil(o.ExtraType) {
		var ret string
		return ret
	}
	return *o.ExtraType
}

// GetExtraTypeOk returns a tuple with the ExtraType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetExtraTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraType) {
		return nil, false
	}
	return o.ExtraType, true
}

// HasExtraType returns a boolean if a field has been set.
func (o *Account) HasExtraType() bool {
	if o != nil && !IsNil(o.ExtraType) {
		return true
	}

	return false
}

// SetExtraType gets a reference to the given string and assigns it to the ExtraType field.
func (o *Account) SetExtraType(v string) {
	o.ExtraType = &v
}

// GetExtraDataJson returns the ExtraDataJson field value if set, zero value otherwise.
func (o *Account) GetExtraDataJson() string {
	if o == nil || IsNil(o.ExtraDataJson) {
		var ret string
		return ret
	}
	return *o.ExtraDataJson
}

// GetExtraDataJsonOk returns a tuple with the ExtraDataJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetExtraDataJsonOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraDataJson) {
		return nil, false
	}
	return o.ExtraDataJson, true
}

// HasExtraDataJson returns a boolean if a field has been set.
func (o *Account) HasExtraDataJson() bool {
	if o != nil && !IsNil(o.ExtraDataJson) {
		return true
	}

	return false
}

// SetExtraDataJson gets a reference to the given string and assigns it to the ExtraDataJson field.
func (o *Account) SetExtraDataJson(v string) {
	o.ExtraDataJson = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Account) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Account) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Account) SetStatus(v string) {
	o.Status = &v
}

// GetIsLiquidating returns the IsLiquidating field value if set, zero value otherwise.
func (o *Account) GetIsLiquidating() bool {
	if o == nil || IsNil(o.IsLiquidating) {
		var ret bool
		return ret
	}
	return *o.IsLiquidating
}

// GetIsLiquidatingOk returns a tuple with the IsLiquidating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetIsLiquidatingOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLiquidating) {
		return nil, false
	}
	return o.IsLiquidating, true
}

// HasIsLiquidating returns a boolean if a field has been set.
func (o *Account) HasIsLiquidating() bool {
	if o != nil && !IsNil(o.IsLiquidating) {
		return true
	}

	return false
}

// SetIsLiquidating gets a reference to the given bool and assigns it to the IsLiquidating field.
func (o *Account) SetIsLiquidating(v bool) {
	o.IsLiquidating = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *Account) GetCreatedTime() string {
	if o == nil || IsNil(o.CreatedTime) {
		var ret string
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetCreatedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *Account) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given string and assigns it to the CreatedTime field.
func (o *Account) SetCreatedTime(v string) {
	o.CreatedTime = &v
}

// GetUpdatedTime returns the UpdatedTime field value if set, zero value otherwise.
func (o *Account) GetUpdatedTime() string {
	if o == nil || IsNil(o.UpdatedTime) {
		var ret string
		return ret
	}
	return *o.UpdatedTime
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetUpdatedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedTime) {
		return nil, false
	}
	return o.UpdatedTime, true
}

// HasUpdatedTime returns a boolean if a field has been set.
func (o *Account) HasUpdatedTime() bool {
	if o != nil && !IsNil(o.UpdatedTime) {
		return true
	}

	return false
}

// SetUpdatedTime gets a reference to the given string and assigns it to the UpdatedTime field.
func (o *Account) SetUpdatedTime(v string) {
	o.UpdatedTime = &v
}

func (o Account) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Account) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.EthAddress) {
		toSerialize["ethAddress"] = o.EthAddress
	}
	if !IsNil(o.L2Key) {
		toSerialize["l2Key"] = o.L2Key
	}
	if !IsNil(o.L2KeyYCoordinate) {
		toSerialize["l2KeyYCoordinate"] = o.L2KeyYCoordinate
	}
	if !IsNil(o.ClientAccountId) {
		toSerialize["clientAccountId"] = o.ClientAccountId
	}
	if !IsNil(o.IsSystemAccount) {
		toSerialize["isSystemAccount"] = o.IsSystemAccount
	}
	if !IsNil(o.DefaultTradeSetting) {
		toSerialize["defaultTradeSetting"] = o.DefaultTradeSetting
	}
	if !IsNil(o.ContractIdToTradeSetting) {
		toSerialize["contractIdToTradeSetting"] = o.ContractIdToTradeSetting
	}
	if !IsNil(o.MaxLeverageLimit) {
		toSerialize["maxLeverageLimit"] = o.MaxLeverageLimit
	}
	if !IsNil(o.CreateOrderPerMinuteLimit) {
		toSerialize["createOrderPerMinuteLimit"] = o.CreateOrderPerMinuteLimit
	}
	if !IsNil(o.CreateOrderDelayMillis) {
		toSerialize["createOrderDelayMillis"] = o.CreateOrderDelayMillis
	}
	if !IsNil(o.ExtraType) {
		toSerialize["extraType"] = o.ExtraType
	}
	if !IsNil(o.ExtraDataJson) {
		toSerialize["extraDataJson"] = o.ExtraDataJson
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.IsLiquidating) {
		toSerialize["isLiquidating"] = o.IsLiquidating
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["createdTime"] = o.CreatedTime
	}
	if !IsNil(o.UpdatedTime) {
		toSerialize["updatedTime"] = o.UpdatedTime
	}
	return toSerialize, nil
}

type NullableAccount struct {
	value *Account
	isSet bool
}

func (v NullableAccount) Get() *Account {
	return v.value
}

func (v *NullableAccount) Set(val *Account) {
	v.value = val
	v.isSet = true
}

func (v NullableAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccount(val *Account) *NullableAccount {
	return &NullableAccount{value: val, isSet: true}
}

func (v NullableAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


