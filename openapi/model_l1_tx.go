/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the L1Tx type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &L1Tx{}

// L1Tx L1交易信息
type L1Tx struct {
	// tx hash
	Hash *string `json:"hash,omitempty"`
	// tx hash 所属index
	Index *int32 `json:"index,omitempty"`
	// tx 链上时间戳，单位毫秒
	Time *string `json:"time,omitempty"`
	// tx所在区块高度
	BlockHeight *string `json:"blockHeight,omitempty"`
}

// NewL1Tx instantiates a new L1Tx object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewL1Tx() *L1Tx {
	this := L1Tx{}
	return &this
}

// NewL1TxWithDefaults instantiates a new L1Tx object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewL1TxWithDefaults() *L1Tx {
	this := L1Tx{}
	return &this
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *L1Tx) GetHash() string {
	if o == nil || IsNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *L1Tx) GetHashOk() (*string, bool) {
	if o == nil || IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *L1Tx) HasHash() bool {
	if o != nil && !IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *L1Tx) SetHash(v string) {
	o.Hash = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *L1Tx) GetIndex() int32 {
	if o == nil || IsNil(o.Index) {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *L1Tx) GetIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *L1Tx) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *L1Tx) SetIndex(v int32) {
	o.Index = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *L1Tx) GetTime() string {
	if o == nil || IsNil(o.Time) {
		var ret string
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *L1Tx) GetTimeOk() (*string, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *L1Tx) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given string and assigns it to the Time field.
func (o *L1Tx) SetTime(v string) {
	o.Time = &v
}

// GetBlockHeight returns the BlockHeight field value if set, zero value otherwise.
func (o *L1Tx) GetBlockHeight() string {
	if o == nil || IsNil(o.BlockHeight) {
		var ret string
		return ret
	}
	return *o.BlockHeight
}

// GetBlockHeightOk returns a tuple with the BlockHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *L1Tx) GetBlockHeightOk() (*string, bool) {
	if o == nil || IsNil(o.BlockHeight) {
		return nil, false
	}
	return o.BlockHeight, true
}

// HasBlockHeight returns a boolean if a field has been set.
func (o *L1Tx) HasBlockHeight() bool {
	if o != nil && !IsNil(o.BlockHeight) {
		return true
	}

	return false
}

// SetBlockHeight gets a reference to the given string and assigns it to the BlockHeight field.
func (o *L1Tx) SetBlockHeight(v string) {
	o.BlockHeight = &v
}

func (o L1Tx) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o L1Tx) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.BlockHeight) {
		toSerialize["blockHeight"] = o.BlockHeight
	}
	return toSerialize, nil
}

type NullableL1Tx struct {
	value *L1Tx
	isSet bool
}

func (v NullableL1Tx) Get() *L1Tx {
	return v.value
}

func (v *NullableL1Tx) Set(val *L1Tx) {
	v.value = val
	v.isSet = true
}

func (v NullableL1Tx) IsSet() bool {
	return v.isSet
}

func (v *NullableL1Tx) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableL1Tx(val *L1Tx) *NullableL1Tx {
	return &NullableL1Tx{value: val, isSet: true}
}

func (v NullableL1Tx) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableL1Tx) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


