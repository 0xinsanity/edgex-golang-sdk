/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CancelOrderByClientOrderId type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CancelOrderByClientOrderId{}

// CancelOrderByClientOrderId 根据ClientOrderId撤销订单响应
type CancelOrderByClientOrderId struct {
	CancelResultMap *map[string]string `json:"cancelResultMap,omitempty"`
}

// NewCancelOrderByClientOrderId instantiates a new CancelOrderByClientOrderId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancelOrderByClientOrderId() *CancelOrderByClientOrderId {
	this := CancelOrderByClientOrderId{}
	return &this
}

// NewCancelOrderByClientOrderIdWithDefaults instantiates a new CancelOrderByClientOrderId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancelOrderByClientOrderIdWithDefaults() *CancelOrderByClientOrderId {
	this := CancelOrderByClientOrderId{}
	return &this
}

// GetCancelResultMap returns the CancelResultMap field value if set, zero value otherwise.
func (o *CancelOrderByClientOrderId) GetCancelResultMap() map[string]string {
	if o == nil || IsNil(o.CancelResultMap) {
		var ret map[string]string
		return ret
	}
	return *o.CancelResultMap
}

// GetCancelResultMapOk returns a tuple with the CancelResultMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelOrderByClientOrderId) GetCancelResultMapOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.CancelResultMap) {
		return nil, false
	}
	return o.CancelResultMap, true
}

// HasCancelResultMap returns a boolean if a field has been set.
func (o *CancelOrderByClientOrderId) HasCancelResultMap() bool {
	if o != nil && !IsNil(o.CancelResultMap) {
		return true
	}

	return false
}

// SetCancelResultMap gets a reference to the given map[string]string and assigns it to the CancelResultMap field.
func (o *CancelOrderByClientOrderId) SetCancelResultMap(v map[string]string) {
	o.CancelResultMap = &v
}

func (o CancelOrderByClientOrderId) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CancelOrderByClientOrderId) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CancelResultMap) {
		toSerialize["cancelResultMap"] = o.CancelResultMap
	}
	return toSerialize, nil
}

type NullableCancelOrderByClientOrderId struct {
	value *CancelOrderByClientOrderId
	isSet bool
}

func (v NullableCancelOrderByClientOrderId) Get() *CancelOrderByClientOrderId {
	return v.value
}

func (v *NullableCancelOrderByClientOrderId) Set(val *CancelOrderByClientOrderId) {
	v.value = val
	v.isSet = true
}

func (v NullableCancelOrderByClientOrderId) IsSet() bool {
	return v.isSet
}

func (v *NullableCancelOrderByClientOrderId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancelOrderByClientOrderId(val *CancelOrderByClientOrderId) *NullableCancelOrderByClientOrderId {
	return &NullableCancelOrderByClientOrderId{value: val, isSet: true}
}

func (v NullableCancelOrderByClientOrderId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancelOrderByClientOrderId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


