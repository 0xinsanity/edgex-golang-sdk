/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IndexPriceExchangeInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndexPriceExchangeInfo{}

// IndexPriceExchangeInfo 指数价格配置信息（交易所）
type IndexPriceExchangeInfo struct {
	// 交易所
	ExchangeName *string `json:"exchangeName,omitempty"`
	// 交易所币对
	ExchangeQuote *string `json:"exchangeQuote,omitempty"`
	// 权重
	Weight *string `json:"weight,omitempty"`
}

// NewIndexPriceExchangeInfo instantiates a new IndexPriceExchangeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndexPriceExchangeInfo() *IndexPriceExchangeInfo {
	this := IndexPriceExchangeInfo{}
	return &this
}

// NewIndexPriceExchangeInfoWithDefaults instantiates a new IndexPriceExchangeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndexPriceExchangeInfoWithDefaults() *IndexPriceExchangeInfo {
	this := IndexPriceExchangeInfo{}
	return &this
}

// GetExchangeName returns the ExchangeName field value if set, zero value otherwise.
func (o *IndexPriceExchangeInfo) GetExchangeName() string {
	if o == nil || IsNil(o.ExchangeName) {
		var ret string
		return ret
	}
	return *o.ExchangeName
}

// GetExchangeNameOk returns a tuple with the ExchangeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexPriceExchangeInfo) GetExchangeNameOk() (*string, bool) {
	if o == nil || IsNil(o.ExchangeName) {
		return nil, false
	}
	return o.ExchangeName, true
}

// HasExchangeName returns a boolean if a field has been set.
func (o *IndexPriceExchangeInfo) HasExchangeName() bool {
	if o != nil && !IsNil(o.ExchangeName) {
		return true
	}

	return false
}

// SetExchangeName gets a reference to the given string and assigns it to the ExchangeName field.
func (o *IndexPriceExchangeInfo) SetExchangeName(v string) {
	o.ExchangeName = &v
}

// GetExchangeQuote returns the ExchangeQuote field value if set, zero value otherwise.
func (o *IndexPriceExchangeInfo) GetExchangeQuote() string {
	if o == nil || IsNil(o.ExchangeQuote) {
		var ret string
		return ret
	}
	return *o.ExchangeQuote
}

// GetExchangeQuoteOk returns a tuple with the ExchangeQuote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexPriceExchangeInfo) GetExchangeQuoteOk() (*string, bool) {
	if o == nil || IsNil(o.ExchangeQuote) {
		return nil, false
	}
	return o.ExchangeQuote, true
}

// HasExchangeQuote returns a boolean if a field has been set.
func (o *IndexPriceExchangeInfo) HasExchangeQuote() bool {
	if o != nil && !IsNil(o.ExchangeQuote) {
		return true
	}

	return false
}

// SetExchangeQuote gets a reference to the given string and assigns it to the ExchangeQuote field.
func (o *IndexPriceExchangeInfo) SetExchangeQuote(v string) {
	o.ExchangeQuote = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *IndexPriceExchangeInfo) GetWeight() string {
	if o == nil || IsNil(o.Weight) {
		var ret string
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexPriceExchangeInfo) GetWeightOk() (*string, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *IndexPriceExchangeInfo) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given string and assigns it to the Weight field.
func (o *IndexPriceExchangeInfo) SetWeight(v string) {
	o.Weight = &v
}

func (o IndexPriceExchangeInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndexPriceExchangeInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExchangeName) {
		toSerialize["exchangeName"] = o.ExchangeName
	}
	if !IsNil(o.ExchangeQuote) {
		toSerialize["exchangeQuote"] = o.ExchangeQuote
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	return toSerialize, nil
}

type NullableIndexPriceExchangeInfo struct {
	value *IndexPriceExchangeInfo
	isSet bool
}

func (v NullableIndexPriceExchangeInfo) Get() *IndexPriceExchangeInfo {
	return v.value
}

func (v *NullableIndexPriceExchangeInfo) Set(val *IndexPriceExchangeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableIndexPriceExchangeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableIndexPriceExchangeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndexPriceExchangeInfo(val *IndexPriceExchangeInfo) *NullableIndexPriceExchangeInfo {
	return &NullableIndexPriceExchangeInfo{value: val, isSet: true}
}

func (v NullableIndexPriceExchangeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndexPriceExchangeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


