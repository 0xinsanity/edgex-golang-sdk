/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateTransferOutParam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTransferOutParam{}

// CreateTransferOutParam 创建转出单请求参数
type CreateTransferOutParam struct {
	// 账户id
	AccountId *string `json:"accountId,omitempty"`
	// 充提资产id
	CoinId *string `json:"coinId,omitempty"`
	// 转账数量
	Amount *string `json:"amount,omitempty"`
	// 收款账户id
	ReceiverAccountId *string `json:"receiverAccountId,omitempty"`
	// 收款账户L2 key. bigint for hex str
	ReceiverL2Key *string `json:"receiverL2Key,omitempty"`
	// 客户自定义id，用于幂等校验和生成签名nonce
	ClientTransferId *string `json:"clientTransferId,omitempty"`
	// 转账原因
	TransferReason *string `json:"transferReason,omitempty"`
	// l2签名nonce。取sha256(client_withdraw_id) 前32个bit
	L2Nonce *string `json:"l2Nonce,omitempty"`
	// l2签名过期时间，单位毫秒。参与签名生成/校验时要取小时数，即 l2_expire_time / 3600000
	L2ExpireTime *string `json:"l2ExpireTime,omitempty"`
	// 提交l2的签名
	L2Signature *string `json:"l2Signature,omitempty"`
	// 附加类型，供上层业务使用
	ExtraType *string `json:"extraType,omitempty"`
	// 附加数据，json格式，默认为空串
	ExtraDataJson *string `json:"extraDataJson,omitempty"`
}

// NewCreateTransferOutParam instantiates a new CreateTransferOutParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTransferOutParam() *CreateTransferOutParam {
	this := CreateTransferOutParam{}
	return &this
}

// NewCreateTransferOutParamWithDefaults instantiates a new CreateTransferOutParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTransferOutParamWithDefaults() *CreateTransferOutParam {
	this := CreateTransferOutParam{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *CreateTransferOutParam) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransferOutParam) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *CreateTransferOutParam) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *CreateTransferOutParam) SetAccountId(v string) {
	o.AccountId = &v
}

// GetCoinId returns the CoinId field value if set, zero value otherwise.
func (o *CreateTransferOutParam) GetCoinId() string {
	if o == nil || IsNil(o.CoinId) {
		var ret string
		return ret
	}
	return *o.CoinId
}

// GetCoinIdOk returns a tuple with the CoinId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransferOutParam) GetCoinIdOk() (*string, bool) {
	if o == nil || IsNil(o.CoinId) {
		return nil, false
	}
	return o.CoinId, true
}

// HasCoinId returns a boolean if a field has been set.
func (o *CreateTransferOutParam) HasCoinId() bool {
	if o != nil && !IsNil(o.CoinId) {
		return true
	}

	return false
}

// SetCoinId gets a reference to the given string and assigns it to the CoinId field.
func (o *CreateTransferOutParam) SetCoinId(v string) {
	o.CoinId = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *CreateTransferOutParam) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransferOutParam) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *CreateTransferOutParam) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *CreateTransferOutParam) SetAmount(v string) {
	o.Amount = &v
}

// GetReceiverAccountId returns the ReceiverAccountId field value if set, zero value otherwise.
func (o *CreateTransferOutParam) GetReceiverAccountId() string {
	if o == nil || IsNil(o.ReceiverAccountId) {
		var ret string
		return ret
	}
	return *o.ReceiverAccountId
}

// GetReceiverAccountIdOk returns a tuple with the ReceiverAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransferOutParam) GetReceiverAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReceiverAccountId) {
		return nil, false
	}
	return o.ReceiverAccountId, true
}

// HasReceiverAccountId returns a boolean if a field has been set.
func (o *CreateTransferOutParam) HasReceiverAccountId() bool {
	if o != nil && !IsNil(o.ReceiverAccountId) {
		return true
	}

	return false
}

// SetReceiverAccountId gets a reference to the given string and assigns it to the ReceiverAccountId field.
func (o *CreateTransferOutParam) SetReceiverAccountId(v string) {
	o.ReceiverAccountId = &v
}

// GetReceiverL2Key returns the ReceiverL2Key field value if set, zero value otherwise.
func (o *CreateTransferOutParam) GetReceiverL2Key() string {
	if o == nil || IsNil(o.ReceiverL2Key) {
		var ret string
		return ret
	}
	return *o.ReceiverL2Key
}

// GetReceiverL2KeyOk returns a tuple with the ReceiverL2Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransferOutParam) GetReceiverL2KeyOk() (*string, bool) {
	if o == nil || IsNil(o.ReceiverL2Key) {
		return nil, false
	}
	return o.ReceiverL2Key, true
}

// HasReceiverL2Key returns a boolean if a field has been set.
func (o *CreateTransferOutParam) HasReceiverL2Key() bool {
	if o != nil && !IsNil(o.ReceiverL2Key) {
		return true
	}

	return false
}

// SetReceiverL2Key gets a reference to the given string and assigns it to the ReceiverL2Key field.
func (o *CreateTransferOutParam) SetReceiverL2Key(v string) {
	o.ReceiverL2Key = &v
}

// GetClientTransferId returns the ClientTransferId field value if set, zero value otherwise.
func (o *CreateTransferOutParam) GetClientTransferId() string {
	if o == nil || IsNil(o.ClientTransferId) {
		var ret string
		return ret
	}
	return *o.ClientTransferId
}

// GetClientTransferIdOk returns a tuple with the ClientTransferId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransferOutParam) GetClientTransferIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientTransferId) {
		return nil, false
	}
	return o.ClientTransferId, true
}

// HasClientTransferId returns a boolean if a field has been set.
func (o *CreateTransferOutParam) HasClientTransferId() bool {
	if o != nil && !IsNil(o.ClientTransferId) {
		return true
	}

	return false
}

// SetClientTransferId gets a reference to the given string and assigns it to the ClientTransferId field.
func (o *CreateTransferOutParam) SetClientTransferId(v string) {
	o.ClientTransferId = &v
}

// GetTransferReason returns the TransferReason field value if set, zero value otherwise.
func (o *CreateTransferOutParam) GetTransferReason() string {
	if o == nil || IsNil(o.TransferReason) {
		var ret string
		return ret
	}
	return *o.TransferReason
}

// GetTransferReasonOk returns a tuple with the TransferReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransferOutParam) GetTransferReasonOk() (*string, bool) {
	if o == nil || IsNil(o.TransferReason) {
		return nil, false
	}
	return o.TransferReason, true
}

// HasTransferReason returns a boolean if a field has been set.
func (o *CreateTransferOutParam) HasTransferReason() bool {
	if o != nil && !IsNil(o.TransferReason) {
		return true
	}

	return false
}

// SetTransferReason gets a reference to the given string and assigns it to the TransferReason field.
func (o *CreateTransferOutParam) SetTransferReason(v string) {
	o.TransferReason = &v
}

// GetL2Nonce returns the L2Nonce field value if set, zero value otherwise.
func (o *CreateTransferOutParam) GetL2Nonce() string {
	if o == nil || IsNil(o.L2Nonce) {
		var ret string
		return ret
	}
	return *o.L2Nonce
}

// GetL2NonceOk returns a tuple with the L2Nonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransferOutParam) GetL2NonceOk() (*string, bool) {
	if o == nil || IsNil(o.L2Nonce) {
		return nil, false
	}
	return o.L2Nonce, true
}

// HasL2Nonce returns a boolean if a field has been set.
func (o *CreateTransferOutParam) HasL2Nonce() bool {
	if o != nil && !IsNil(o.L2Nonce) {
		return true
	}

	return false
}

// SetL2Nonce gets a reference to the given string and assigns it to the L2Nonce field.
func (o *CreateTransferOutParam) SetL2Nonce(v string) {
	o.L2Nonce = &v
}

// GetL2ExpireTime returns the L2ExpireTime field value if set, zero value otherwise.
func (o *CreateTransferOutParam) GetL2ExpireTime() string {
	if o == nil || IsNil(o.L2ExpireTime) {
		var ret string
		return ret
	}
	return *o.L2ExpireTime
}

// GetL2ExpireTimeOk returns a tuple with the L2ExpireTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransferOutParam) GetL2ExpireTimeOk() (*string, bool) {
	if o == nil || IsNil(o.L2ExpireTime) {
		return nil, false
	}
	return o.L2ExpireTime, true
}

// HasL2ExpireTime returns a boolean if a field has been set.
func (o *CreateTransferOutParam) HasL2ExpireTime() bool {
	if o != nil && !IsNil(o.L2ExpireTime) {
		return true
	}

	return false
}

// SetL2ExpireTime gets a reference to the given string and assigns it to the L2ExpireTime field.
func (o *CreateTransferOutParam) SetL2ExpireTime(v string) {
	o.L2ExpireTime = &v
}

// GetL2Signature returns the L2Signature field value if set, zero value otherwise.
func (o *CreateTransferOutParam) GetL2Signature() string {
	if o == nil || IsNil(o.L2Signature) {
		var ret string
		return ret
	}
	return *o.L2Signature
}

// GetL2SignatureOk returns a tuple with the L2Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransferOutParam) GetL2SignatureOk() (*string, bool) {
	if o == nil || IsNil(o.L2Signature) {
		return nil, false
	}
	return o.L2Signature, true
}

// HasL2Signature returns a boolean if a field has been set.
func (o *CreateTransferOutParam) HasL2Signature() bool {
	if o != nil && !IsNil(o.L2Signature) {
		return true
	}

	return false
}

// SetL2Signature gets a reference to the given string and assigns it to the L2Signature field.
func (o *CreateTransferOutParam) SetL2Signature(v string) {
	o.L2Signature = &v
}

// GetExtraType returns the ExtraType field value if set, zero value otherwise.
func (o *CreateTransferOutParam) GetExtraType() string {
	if o == nil || IsNil(o.ExtraType) {
		var ret string
		return ret
	}
	return *o.ExtraType
}

// GetExtraTypeOk returns a tuple with the ExtraType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransferOutParam) GetExtraTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraType) {
		return nil, false
	}
	return o.ExtraType, true
}

// HasExtraType returns a boolean if a field has been set.
func (o *CreateTransferOutParam) HasExtraType() bool {
	if o != nil && !IsNil(o.ExtraType) {
		return true
	}

	return false
}

// SetExtraType gets a reference to the given string and assigns it to the ExtraType field.
func (o *CreateTransferOutParam) SetExtraType(v string) {
	o.ExtraType = &v
}

// GetExtraDataJson returns the ExtraDataJson field value if set, zero value otherwise.
func (o *CreateTransferOutParam) GetExtraDataJson() string {
	if o == nil || IsNil(o.ExtraDataJson) {
		var ret string
		return ret
	}
	return *o.ExtraDataJson
}

// GetExtraDataJsonOk returns a tuple with the ExtraDataJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransferOutParam) GetExtraDataJsonOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraDataJson) {
		return nil, false
	}
	return o.ExtraDataJson, true
}

// HasExtraDataJson returns a boolean if a field has been set.
func (o *CreateTransferOutParam) HasExtraDataJson() bool {
	if o != nil && !IsNil(o.ExtraDataJson) {
		return true
	}

	return false
}

// SetExtraDataJson gets a reference to the given string and assigns it to the ExtraDataJson field.
func (o *CreateTransferOutParam) SetExtraDataJson(v string) {
	o.ExtraDataJson = &v
}

func (o CreateTransferOutParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTransferOutParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.CoinId) {
		toSerialize["coinId"] = o.CoinId
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.ReceiverAccountId) {
		toSerialize["receiverAccountId"] = o.ReceiverAccountId
	}
	if !IsNil(o.ReceiverL2Key) {
		toSerialize["receiverL2Key"] = o.ReceiverL2Key
	}
	if !IsNil(o.ClientTransferId) {
		toSerialize["clientTransferId"] = o.ClientTransferId
	}
	if !IsNil(o.TransferReason) {
		toSerialize["transferReason"] = o.TransferReason
	}
	if !IsNil(o.L2Nonce) {
		toSerialize["l2Nonce"] = o.L2Nonce
	}
	if !IsNil(o.L2ExpireTime) {
		toSerialize["l2ExpireTime"] = o.L2ExpireTime
	}
	if !IsNil(o.L2Signature) {
		toSerialize["l2Signature"] = o.L2Signature
	}
	if !IsNil(o.ExtraType) {
		toSerialize["extraType"] = o.ExtraType
	}
	if !IsNil(o.ExtraDataJson) {
		toSerialize["extraDataJson"] = o.ExtraDataJson
	}
	return toSerialize, nil
}

type NullableCreateTransferOutParam struct {
	value *CreateTransferOutParam
	isSet bool
}

func (v NullableCreateTransferOutParam) Get() *CreateTransferOutParam {
	return v.value
}

func (v *NullableCreateTransferOutParam) Set(val *CreateTransferOutParam) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTransferOutParam) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTransferOutParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTransferOutParam(val *CreateTransferOutParam) *NullableCreateTransferOutParam {
	return &NullableCreateTransferOutParam{value: val, isSet: true}
}

func (v NullableCreateTransferOutParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTransferOutParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


