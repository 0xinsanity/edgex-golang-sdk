/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Deposit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Deposit{}

// Deposit 充值单
type Deposit struct {
	// 充值单id
	Id *string `json:"id,omitempty"`
	// 所属用户id
	UserId *string `json:"userId,omitempty"`
	// 账户id
	AccountId *string `json:"accountId,omitempty"`
	// 所属抵押品币种id
	CoinId *string `json:"coinId,omitempty"`
	// 充值数量
	Amount *string `json:"amount,omitempty"`
	// 充值的eth地址，可能与账户里的eth地址不一样
	EthAddress *string `json:"ethAddress,omitempty"`
	// 充值的币种合约地址
	Erc20Address *string `json:"erc20Address,omitempty"`
	// 客户自定义id，用于幂等校验
	ClientDepositId *string `json:"clientDepositId,omitempty"`
	L1Tx *L1Tx `json:"l1Tx,omitempty"`
	RiskSignature *L2Signature `json:"riskSignature,omitempty"`
	// L2上的收款账户key
	L2Key *string `json:"l2Key,omitempty"`
	// 附加类型，供上层业务使用
	ExtraType *string `json:"extraType,omitempty"`
	// 额外数据，json格式，默认为空串
	ExtraDataJson *string `json:"extraDataJson,omitempty"`
	// 充值单状态
	Status *string `json:"status,omitempty"`
	// 关联的抵押品明细id。当 status=SUCCESS_XXX/FAILED_L2_REJECT/FAILED_L2_REJECT_APPROVED 时存在
	CollateralTransactionId *string `json:"collateralTransactionId,omitempty"`
	// 审查处理序号。当 status=SUCCESS_XXX/FAILED_XXX 时存在
	CensorTxId *string `json:"censorTxId,omitempty"`
	// 审查处理时间。当 status=SUCCESS_XXX/FAILED_XXX
	CensorTime *string `json:"censorTime,omitempty"`
	// 审查失败错误码。当 status=FAILED_CENSOR_FAILURE 时存在
	CensorFailCode *string `json:"censorFailCode,omitempty"`
	// 审查失败原因。当 status=FAILED_CENSOR_FAILURE 时存在
	CensorFailReason *string `json:"censorFailReason,omitempty"`
	// l2推送交易id。当 status=SUCCESS_XXX/FAILED_L2_REJECT/FAILED_L2_REJECT_APPROVED 时存在
	L2TxId *string `json:"l2TxId,omitempty"`
	// l2拒绝时间。当 status=FAILED_L2_REJECT/FAILED_L2_REJECT_APPROVED 时存在
	L2RejectTime *string `json:"l2RejectTime,omitempty"`
	// l2拒绝错误码。当 status=FAILED_L2_REJECT/FAILED_L2_REJECT_APPROVED 时存在
	L2RejectCode *string `json:"l2RejectCode,omitempty"`
	// l2拒绝原因。当 status=FAILED_L2_REJECT/FAILED_L2_REJECT_APPROVED 时存在
	L2RejectReason *string `json:"l2RejectReason,omitempty"`
	// l2批次验证时间。当 status=SUCCESS_L2_APPROVED/FAILED_L2_REJECT_APPROVED 时存在
	L2ApprovedTime *string `json:"l2ApprovedTime,omitempty"`
	// 创建时间
	CreatedTime *string `json:"createdTime,omitempty"`
	// 更新时间
	UpdatedTime *string `json:"updatedTime,omitempty"`
}

// NewDeposit instantiates a new Deposit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeposit() *Deposit {
	this := Deposit{}
	return &this
}

// NewDepositWithDefaults instantiates a new Deposit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepositWithDefaults() *Deposit {
	this := Deposit{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Deposit) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Deposit) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Deposit) SetId(v string) {
	o.Id = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *Deposit) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *Deposit) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *Deposit) SetUserId(v string) {
	o.UserId = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *Deposit) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *Deposit) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *Deposit) SetAccountId(v string) {
	o.AccountId = &v
}

// GetCoinId returns the CoinId field value if set, zero value otherwise.
func (o *Deposit) GetCoinId() string {
	if o == nil || IsNil(o.CoinId) {
		var ret string
		return ret
	}
	return *o.CoinId
}

// GetCoinIdOk returns a tuple with the CoinId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetCoinIdOk() (*string, bool) {
	if o == nil || IsNil(o.CoinId) {
		return nil, false
	}
	return o.CoinId, true
}

// HasCoinId returns a boolean if a field has been set.
func (o *Deposit) HasCoinId() bool {
	if o != nil && !IsNil(o.CoinId) {
		return true
	}

	return false
}

// SetCoinId gets a reference to the given string and assigns it to the CoinId field.
func (o *Deposit) SetCoinId(v string) {
	o.CoinId = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *Deposit) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *Deposit) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *Deposit) SetAmount(v string) {
	o.Amount = &v
}

// GetEthAddress returns the EthAddress field value if set, zero value otherwise.
func (o *Deposit) GetEthAddress() string {
	if o == nil || IsNil(o.EthAddress) {
		var ret string
		return ret
	}
	return *o.EthAddress
}

// GetEthAddressOk returns a tuple with the EthAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetEthAddressOk() (*string, bool) {
	if o == nil || IsNil(o.EthAddress) {
		return nil, false
	}
	return o.EthAddress, true
}

// HasEthAddress returns a boolean if a field has been set.
func (o *Deposit) HasEthAddress() bool {
	if o != nil && !IsNil(o.EthAddress) {
		return true
	}

	return false
}

// SetEthAddress gets a reference to the given string and assigns it to the EthAddress field.
func (o *Deposit) SetEthAddress(v string) {
	o.EthAddress = &v
}

// GetErc20Address returns the Erc20Address field value if set, zero value otherwise.
func (o *Deposit) GetErc20Address() string {
	if o == nil || IsNil(o.Erc20Address) {
		var ret string
		return ret
	}
	return *o.Erc20Address
}

// GetErc20AddressOk returns a tuple with the Erc20Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetErc20AddressOk() (*string, bool) {
	if o == nil || IsNil(o.Erc20Address) {
		return nil, false
	}
	return o.Erc20Address, true
}

// HasErc20Address returns a boolean if a field has been set.
func (o *Deposit) HasErc20Address() bool {
	if o != nil && !IsNil(o.Erc20Address) {
		return true
	}

	return false
}

// SetErc20Address gets a reference to the given string and assigns it to the Erc20Address field.
func (o *Deposit) SetErc20Address(v string) {
	o.Erc20Address = &v
}

// GetClientDepositId returns the ClientDepositId field value if set, zero value otherwise.
func (o *Deposit) GetClientDepositId() string {
	if o == nil || IsNil(o.ClientDepositId) {
		var ret string
		return ret
	}
	return *o.ClientDepositId
}

// GetClientDepositIdOk returns a tuple with the ClientDepositId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetClientDepositIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientDepositId) {
		return nil, false
	}
	return o.ClientDepositId, true
}

// HasClientDepositId returns a boolean if a field has been set.
func (o *Deposit) HasClientDepositId() bool {
	if o != nil && !IsNil(o.ClientDepositId) {
		return true
	}

	return false
}

// SetClientDepositId gets a reference to the given string and assigns it to the ClientDepositId field.
func (o *Deposit) SetClientDepositId(v string) {
	o.ClientDepositId = &v
}

// GetL1Tx returns the L1Tx field value if set, zero value otherwise.
func (o *Deposit) GetL1Tx() L1Tx {
	if o == nil || IsNil(o.L1Tx) {
		var ret L1Tx
		return ret
	}
	return *o.L1Tx
}

// GetL1TxOk returns a tuple with the L1Tx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetL1TxOk() (*L1Tx, bool) {
	if o == nil || IsNil(o.L1Tx) {
		return nil, false
	}
	return o.L1Tx, true
}

// HasL1Tx returns a boolean if a field has been set.
func (o *Deposit) HasL1Tx() bool {
	if o != nil && !IsNil(o.L1Tx) {
		return true
	}

	return false
}

// SetL1Tx gets a reference to the given L1Tx and assigns it to the L1Tx field.
func (o *Deposit) SetL1Tx(v L1Tx) {
	o.L1Tx = &v
}

// GetRiskSignature returns the RiskSignature field value if set, zero value otherwise.
func (o *Deposit) GetRiskSignature() L2Signature {
	if o == nil || IsNil(o.RiskSignature) {
		var ret L2Signature
		return ret
	}
	return *o.RiskSignature
}

// GetRiskSignatureOk returns a tuple with the RiskSignature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetRiskSignatureOk() (*L2Signature, bool) {
	if o == nil || IsNil(o.RiskSignature) {
		return nil, false
	}
	return o.RiskSignature, true
}

// HasRiskSignature returns a boolean if a field has been set.
func (o *Deposit) HasRiskSignature() bool {
	if o != nil && !IsNil(o.RiskSignature) {
		return true
	}

	return false
}

// SetRiskSignature gets a reference to the given L2Signature and assigns it to the RiskSignature field.
func (o *Deposit) SetRiskSignature(v L2Signature) {
	o.RiskSignature = &v
}

// GetL2Key returns the L2Key field value if set, zero value otherwise.
func (o *Deposit) GetL2Key() string {
	if o == nil || IsNil(o.L2Key) {
		var ret string
		return ret
	}
	return *o.L2Key
}

// GetL2KeyOk returns a tuple with the L2Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetL2KeyOk() (*string, bool) {
	if o == nil || IsNil(o.L2Key) {
		return nil, false
	}
	return o.L2Key, true
}

// HasL2Key returns a boolean if a field has been set.
func (o *Deposit) HasL2Key() bool {
	if o != nil && !IsNil(o.L2Key) {
		return true
	}

	return false
}

// SetL2Key gets a reference to the given string and assigns it to the L2Key field.
func (o *Deposit) SetL2Key(v string) {
	o.L2Key = &v
}

// GetExtraType returns the ExtraType field value if set, zero value otherwise.
func (o *Deposit) GetExtraType() string {
	if o == nil || IsNil(o.ExtraType) {
		var ret string
		return ret
	}
	return *o.ExtraType
}

// GetExtraTypeOk returns a tuple with the ExtraType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetExtraTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraType) {
		return nil, false
	}
	return o.ExtraType, true
}

// HasExtraType returns a boolean if a field has been set.
func (o *Deposit) HasExtraType() bool {
	if o != nil && !IsNil(o.ExtraType) {
		return true
	}

	return false
}

// SetExtraType gets a reference to the given string and assigns it to the ExtraType field.
func (o *Deposit) SetExtraType(v string) {
	o.ExtraType = &v
}

// GetExtraDataJson returns the ExtraDataJson field value if set, zero value otherwise.
func (o *Deposit) GetExtraDataJson() string {
	if o == nil || IsNil(o.ExtraDataJson) {
		var ret string
		return ret
	}
	return *o.ExtraDataJson
}

// GetExtraDataJsonOk returns a tuple with the ExtraDataJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetExtraDataJsonOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraDataJson) {
		return nil, false
	}
	return o.ExtraDataJson, true
}

// HasExtraDataJson returns a boolean if a field has been set.
func (o *Deposit) HasExtraDataJson() bool {
	if o != nil && !IsNil(o.ExtraDataJson) {
		return true
	}

	return false
}

// SetExtraDataJson gets a reference to the given string and assigns it to the ExtraDataJson field.
func (o *Deposit) SetExtraDataJson(v string) {
	o.ExtraDataJson = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Deposit) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Deposit) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Deposit) SetStatus(v string) {
	o.Status = &v
}

// GetCollateralTransactionId returns the CollateralTransactionId field value if set, zero value otherwise.
func (o *Deposit) GetCollateralTransactionId() string {
	if o == nil || IsNil(o.CollateralTransactionId) {
		var ret string
		return ret
	}
	return *o.CollateralTransactionId
}

// GetCollateralTransactionIdOk returns a tuple with the CollateralTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetCollateralTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.CollateralTransactionId) {
		return nil, false
	}
	return o.CollateralTransactionId, true
}

// HasCollateralTransactionId returns a boolean if a field has been set.
func (o *Deposit) HasCollateralTransactionId() bool {
	if o != nil && !IsNil(o.CollateralTransactionId) {
		return true
	}

	return false
}

// SetCollateralTransactionId gets a reference to the given string and assigns it to the CollateralTransactionId field.
func (o *Deposit) SetCollateralTransactionId(v string) {
	o.CollateralTransactionId = &v
}

// GetCensorTxId returns the CensorTxId field value if set, zero value otherwise.
func (o *Deposit) GetCensorTxId() string {
	if o == nil || IsNil(o.CensorTxId) {
		var ret string
		return ret
	}
	return *o.CensorTxId
}

// GetCensorTxIdOk returns a tuple with the CensorTxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetCensorTxIdOk() (*string, bool) {
	if o == nil || IsNil(o.CensorTxId) {
		return nil, false
	}
	return o.CensorTxId, true
}

// HasCensorTxId returns a boolean if a field has been set.
func (o *Deposit) HasCensorTxId() bool {
	if o != nil && !IsNil(o.CensorTxId) {
		return true
	}

	return false
}

// SetCensorTxId gets a reference to the given string and assigns it to the CensorTxId field.
func (o *Deposit) SetCensorTxId(v string) {
	o.CensorTxId = &v
}

// GetCensorTime returns the CensorTime field value if set, zero value otherwise.
func (o *Deposit) GetCensorTime() string {
	if o == nil || IsNil(o.CensorTime) {
		var ret string
		return ret
	}
	return *o.CensorTime
}

// GetCensorTimeOk returns a tuple with the CensorTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetCensorTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CensorTime) {
		return nil, false
	}
	return o.CensorTime, true
}

// HasCensorTime returns a boolean if a field has been set.
func (o *Deposit) HasCensorTime() bool {
	if o != nil && !IsNil(o.CensorTime) {
		return true
	}

	return false
}

// SetCensorTime gets a reference to the given string and assigns it to the CensorTime field.
func (o *Deposit) SetCensorTime(v string) {
	o.CensorTime = &v
}

// GetCensorFailCode returns the CensorFailCode field value if set, zero value otherwise.
func (o *Deposit) GetCensorFailCode() string {
	if o == nil || IsNil(o.CensorFailCode) {
		var ret string
		return ret
	}
	return *o.CensorFailCode
}

// GetCensorFailCodeOk returns a tuple with the CensorFailCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetCensorFailCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CensorFailCode) {
		return nil, false
	}
	return o.CensorFailCode, true
}

// HasCensorFailCode returns a boolean if a field has been set.
func (o *Deposit) HasCensorFailCode() bool {
	if o != nil && !IsNil(o.CensorFailCode) {
		return true
	}

	return false
}

// SetCensorFailCode gets a reference to the given string and assigns it to the CensorFailCode field.
func (o *Deposit) SetCensorFailCode(v string) {
	o.CensorFailCode = &v
}

// GetCensorFailReason returns the CensorFailReason field value if set, zero value otherwise.
func (o *Deposit) GetCensorFailReason() string {
	if o == nil || IsNil(o.CensorFailReason) {
		var ret string
		return ret
	}
	return *o.CensorFailReason
}

// GetCensorFailReasonOk returns a tuple with the CensorFailReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetCensorFailReasonOk() (*string, bool) {
	if o == nil || IsNil(o.CensorFailReason) {
		return nil, false
	}
	return o.CensorFailReason, true
}

// HasCensorFailReason returns a boolean if a field has been set.
func (o *Deposit) HasCensorFailReason() bool {
	if o != nil && !IsNil(o.CensorFailReason) {
		return true
	}

	return false
}

// SetCensorFailReason gets a reference to the given string and assigns it to the CensorFailReason field.
func (o *Deposit) SetCensorFailReason(v string) {
	o.CensorFailReason = &v
}

// GetL2TxId returns the L2TxId field value if set, zero value otherwise.
func (o *Deposit) GetL2TxId() string {
	if o == nil || IsNil(o.L2TxId) {
		var ret string
		return ret
	}
	return *o.L2TxId
}

// GetL2TxIdOk returns a tuple with the L2TxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetL2TxIdOk() (*string, bool) {
	if o == nil || IsNil(o.L2TxId) {
		return nil, false
	}
	return o.L2TxId, true
}

// HasL2TxId returns a boolean if a field has been set.
func (o *Deposit) HasL2TxId() bool {
	if o != nil && !IsNil(o.L2TxId) {
		return true
	}

	return false
}

// SetL2TxId gets a reference to the given string and assigns it to the L2TxId field.
func (o *Deposit) SetL2TxId(v string) {
	o.L2TxId = &v
}

// GetL2RejectTime returns the L2RejectTime field value if set, zero value otherwise.
func (o *Deposit) GetL2RejectTime() string {
	if o == nil || IsNil(o.L2RejectTime) {
		var ret string
		return ret
	}
	return *o.L2RejectTime
}

// GetL2RejectTimeOk returns a tuple with the L2RejectTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetL2RejectTimeOk() (*string, bool) {
	if o == nil || IsNil(o.L2RejectTime) {
		return nil, false
	}
	return o.L2RejectTime, true
}

// HasL2RejectTime returns a boolean if a field has been set.
func (o *Deposit) HasL2RejectTime() bool {
	if o != nil && !IsNil(o.L2RejectTime) {
		return true
	}

	return false
}

// SetL2RejectTime gets a reference to the given string and assigns it to the L2RejectTime field.
func (o *Deposit) SetL2RejectTime(v string) {
	o.L2RejectTime = &v
}

// GetL2RejectCode returns the L2RejectCode field value if set, zero value otherwise.
func (o *Deposit) GetL2RejectCode() string {
	if o == nil || IsNil(o.L2RejectCode) {
		var ret string
		return ret
	}
	return *o.L2RejectCode
}

// GetL2RejectCodeOk returns a tuple with the L2RejectCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetL2RejectCodeOk() (*string, bool) {
	if o == nil || IsNil(o.L2RejectCode) {
		return nil, false
	}
	return o.L2RejectCode, true
}

// HasL2RejectCode returns a boolean if a field has been set.
func (o *Deposit) HasL2RejectCode() bool {
	if o != nil && !IsNil(o.L2RejectCode) {
		return true
	}

	return false
}

// SetL2RejectCode gets a reference to the given string and assigns it to the L2RejectCode field.
func (o *Deposit) SetL2RejectCode(v string) {
	o.L2RejectCode = &v
}

// GetL2RejectReason returns the L2RejectReason field value if set, zero value otherwise.
func (o *Deposit) GetL2RejectReason() string {
	if o == nil || IsNil(o.L2RejectReason) {
		var ret string
		return ret
	}
	return *o.L2RejectReason
}

// GetL2RejectReasonOk returns a tuple with the L2RejectReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetL2RejectReasonOk() (*string, bool) {
	if o == nil || IsNil(o.L2RejectReason) {
		return nil, false
	}
	return o.L2RejectReason, true
}

// HasL2RejectReason returns a boolean if a field has been set.
func (o *Deposit) HasL2RejectReason() bool {
	if o != nil && !IsNil(o.L2RejectReason) {
		return true
	}

	return false
}

// SetL2RejectReason gets a reference to the given string and assigns it to the L2RejectReason field.
func (o *Deposit) SetL2RejectReason(v string) {
	o.L2RejectReason = &v
}

// GetL2ApprovedTime returns the L2ApprovedTime field value if set, zero value otherwise.
func (o *Deposit) GetL2ApprovedTime() string {
	if o == nil || IsNil(o.L2ApprovedTime) {
		var ret string
		return ret
	}
	return *o.L2ApprovedTime
}

// GetL2ApprovedTimeOk returns a tuple with the L2ApprovedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetL2ApprovedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.L2ApprovedTime) {
		return nil, false
	}
	return o.L2ApprovedTime, true
}

// HasL2ApprovedTime returns a boolean if a field has been set.
func (o *Deposit) HasL2ApprovedTime() bool {
	if o != nil && !IsNil(o.L2ApprovedTime) {
		return true
	}

	return false
}

// SetL2ApprovedTime gets a reference to the given string and assigns it to the L2ApprovedTime field.
func (o *Deposit) SetL2ApprovedTime(v string) {
	o.L2ApprovedTime = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *Deposit) GetCreatedTime() string {
	if o == nil || IsNil(o.CreatedTime) {
		var ret string
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetCreatedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *Deposit) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given string and assigns it to the CreatedTime field.
func (o *Deposit) SetCreatedTime(v string) {
	o.CreatedTime = &v
}

// GetUpdatedTime returns the UpdatedTime field value if set, zero value otherwise.
func (o *Deposit) GetUpdatedTime() string {
	if o == nil || IsNil(o.UpdatedTime) {
		var ret string
		return ret
	}
	return *o.UpdatedTime
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetUpdatedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedTime) {
		return nil, false
	}
	return o.UpdatedTime, true
}

// HasUpdatedTime returns a boolean if a field has been set.
func (o *Deposit) HasUpdatedTime() bool {
	if o != nil && !IsNil(o.UpdatedTime) {
		return true
	}

	return false
}

// SetUpdatedTime gets a reference to the given string and assigns it to the UpdatedTime field.
func (o *Deposit) SetUpdatedTime(v string) {
	o.UpdatedTime = &v
}

func (o Deposit) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Deposit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.CoinId) {
		toSerialize["coinId"] = o.CoinId
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.EthAddress) {
		toSerialize["ethAddress"] = o.EthAddress
	}
	if !IsNil(o.Erc20Address) {
		toSerialize["erc20Address"] = o.Erc20Address
	}
	if !IsNil(o.ClientDepositId) {
		toSerialize["clientDepositId"] = o.ClientDepositId
	}
	if !IsNil(o.L1Tx) {
		toSerialize["l1Tx"] = o.L1Tx
	}
	if !IsNil(o.RiskSignature) {
		toSerialize["riskSignature"] = o.RiskSignature
	}
	if !IsNil(o.L2Key) {
		toSerialize["l2Key"] = o.L2Key
	}
	if !IsNil(o.ExtraType) {
		toSerialize["extraType"] = o.ExtraType
	}
	if !IsNil(o.ExtraDataJson) {
		toSerialize["extraDataJson"] = o.ExtraDataJson
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CollateralTransactionId) {
		toSerialize["collateralTransactionId"] = o.CollateralTransactionId
	}
	if !IsNil(o.CensorTxId) {
		toSerialize["censorTxId"] = o.CensorTxId
	}
	if !IsNil(o.CensorTime) {
		toSerialize["censorTime"] = o.CensorTime
	}
	if !IsNil(o.CensorFailCode) {
		toSerialize["censorFailCode"] = o.CensorFailCode
	}
	if !IsNil(o.CensorFailReason) {
		toSerialize["censorFailReason"] = o.CensorFailReason
	}
	if !IsNil(o.L2TxId) {
		toSerialize["l2TxId"] = o.L2TxId
	}
	if !IsNil(o.L2RejectTime) {
		toSerialize["l2RejectTime"] = o.L2RejectTime
	}
	if !IsNil(o.L2RejectCode) {
		toSerialize["l2RejectCode"] = o.L2RejectCode
	}
	if !IsNil(o.L2RejectReason) {
		toSerialize["l2RejectReason"] = o.L2RejectReason
	}
	if !IsNil(o.L2ApprovedTime) {
		toSerialize["l2ApprovedTime"] = o.L2ApprovedTime
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["createdTime"] = o.CreatedTime
	}
	if !IsNil(o.UpdatedTime) {
		toSerialize["updatedTime"] = o.UpdatedTime
	}
	return toSerialize, nil
}

type NullableDeposit struct {
	value *Deposit
	isSet bool
}

func (v NullableDeposit) Get() *Deposit {
	return v.value
}

func (v *NullableDeposit) Set(val *Deposit) {
	v.value = val
	v.isSet = true
}

func (v NullableDeposit) IsSet() bool {
	return v.isSet
}

func (v *NullableDeposit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeposit(val *Deposit) *NullableDeposit {
	return &NullableDeposit{value: val, isSet: true}
}

func (v NullableDeposit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeposit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


