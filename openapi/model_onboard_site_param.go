/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OnboardSiteParam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OnboardSiteParam{}

// OnboardSiteParam 用户登录站点-请求
type OnboardSiteParam struct {
	// eth地址
	EthAddress *string `json:"ethAddress,omitempty"`
	// only_sign_on
	OnlySignOn *string `json:"onlySignOn,omitempty"`
	// 参数
	Param *string `json:"param,omitempty"`
	// 签名
	Signature *string `json:"signature,omitempty"`
	// 创建默认账户参数: L2上的账户key，保证全局唯一。对应starkEx中的starkKey。bigint for hex str
	L2Key *string `json:"l2Key,omitempty"`
	// 创建默认账户参数: 只用于验证 l2Signature 是否ok。不返回给C端用户。bigint for hex str
	L2KeyYCoordinate *string `json:"l2KeyYCoordinate,omitempty"`
	// 创建默认账户参数: 客户端账户id, 用于幂等性校验
	ClientAccountId *string `json:"clientAccountId,omitempty"`
}

// NewOnboardSiteParam instantiates a new OnboardSiteParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnboardSiteParam() *OnboardSiteParam {
	this := OnboardSiteParam{}
	return &this
}

// NewOnboardSiteParamWithDefaults instantiates a new OnboardSiteParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnboardSiteParamWithDefaults() *OnboardSiteParam {
	this := OnboardSiteParam{}
	return &this
}

// GetEthAddress returns the EthAddress field value if set, zero value otherwise.
func (o *OnboardSiteParam) GetEthAddress() string {
	if o == nil || IsNil(o.EthAddress) {
		var ret string
		return ret
	}
	return *o.EthAddress
}

// GetEthAddressOk returns a tuple with the EthAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnboardSiteParam) GetEthAddressOk() (*string, bool) {
	if o == nil || IsNil(o.EthAddress) {
		return nil, false
	}
	return o.EthAddress, true
}

// HasEthAddress returns a boolean if a field has been set.
func (o *OnboardSiteParam) HasEthAddress() bool {
	if o != nil && !IsNil(o.EthAddress) {
		return true
	}

	return false
}

// SetEthAddress gets a reference to the given string and assigns it to the EthAddress field.
func (o *OnboardSiteParam) SetEthAddress(v string) {
	o.EthAddress = &v
}

// GetOnlySignOn returns the OnlySignOn field value if set, zero value otherwise.
func (o *OnboardSiteParam) GetOnlySignOn() string {
	if o == nil || IsNil(o.OnlySignOn) {
		var ret string
		return ret
	}
	return *o.OnlySignOn
}

// GetOnlySignOnOk returns a tuple with the OnlySignOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnboardSiteParam) GetOnlySignOnOk() (*string, bool) {
	if o == nil || IsNil(o.OnlySignOn) {
		return nil, false
	}
	return o.OnlySignOn, true
}

// HasOnlySignOn returns a boolean if a field has been set.
func (o *OnboardSiteParam) HasOnlySignOn() bool {
	if o != nil && !IsNil(o.OnlySignOn) {
		return true
	}

	return false
}

// SetOnlySignOn gets a reference to the given string and assigns it to the OnlySignOn field.
func (o *OnboardSiteParam) SetOnlySignOn(v string) {
	o.OnlySignOn = &v
}

// GetParam returns the Param field value if set, zero value otherwise.
func (o *OnboardSiteParam) GetParam() string {
	if o == nil || IsNil(o.Param) {
		var ret string
		return ret
	}
	return *o.Param
}

// GetParamOk returns a tuple with the Param field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnboardSiteParam) GetParamOk() (*string, bool) {
	if o == nil || IsNil(o.Param) {
		return nil, false
	}
	return o.Param, true
}

// HasParam returns a boolean if a field has been set.
func (o *OnboardSiteParam) HasParam() bool {
	if o != nil && !IsNil(o.Param) {
		return true
	}

	return false
}

// SetParam gets a reference to the given string and assigns it to the Param field.
func (o *OnboardSiteParam) SetParam(v string) {
	o.Param = &v
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *OnboardSiteParam) GetSignature() string {
	if o == nil || IsNil(o.Signature) {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnboardSiteParam) GetSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.Signature) {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *OnboardSiteParam) HasSignature() bool {
	if o != nil && !IsNil(o.Signature) {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *OnboardSiteParam) SetSignature(v string) {
	o.Signature = &v
}

// GetL2Key returns the L2Key field value if set, zero value otherwise.
func (o *OnboardSiteParam) GetL2Key() string {
	if o == nil || IsNil(o.L2Key) {
		var ret string
		return ret
	}
	return *o.L2Key
}

// GetL2KeyOk returns a tuple with the L2Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnboardSiteParam) GetL2KeyOk() (*string, bool) {
	if o == nil || IsNil(o.L2Key) {
		return nil, false
	}
	return o.L2Key, true
}

// HasL2Key returns a boolean if a field has been set.
func (o *OnboardSiteParam) HasL2Key() bool {
	if o != nil && !IsNil(o.L2Key) {
		return true
	}

	return false
}

// SetL2Key gets a reference to the given string and assigns it to the L2Key field.
func (o *OnboardSiteParam) SetL2Key(v string) {
	o.L2Key = &v
}

// GetL2KeyYCoordinate returns the L2KeyYCoordinate field value if set, zero value otherwise.
func (o *OnboardSiteParam) GetL2KeyYCoordinate() string {
	if o == nil || IsNil(o.L2KeyYCoordinate) {
		var ret string
		return ret
	}
	return *o.L2KeyYCoordinate
}

// GetL2KeyYCoordinateOk returns a tuple with the L2KeyYCoordinate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnboardSiteParam) GetL2KeyYCoordinateOk() (*string, bool) {
	if o == nil || IsNil(o.L2KeyYCoordinate) {
		return nil, false
	}
	return o.L2KeyYCoordinate, true
}

// HasL2KeyYCoordinate returns a boolean if a field has been set.
func (o *OnboardSiteParam) HasL2KeyYCoordinate() bool {
	if o != nil && !IsNil(o.L2KeyYCoordinate) {
		return true
	}

	return false
}

// SetL2KeyYCoordinate gets a reference to the given string and assigns it to the L2KeyYCoordinate field.
func (o *OnboardSiteParam) SetL2KeyYCoordinate(v string) {
	o.L2KeyYCoordinate = &v
}

// GetClientAccountId returns the ClientAccountId field value if set, zero value otherwise.
func (o *OnboardSiteParam) GetClientAccountId() string {
	if o == nil || IsNil(o.ClientAccountId) {
		var ret string
		return ret
	}
	return *o.ClientAccountId
}

// GetClientAccountIdOk returns a tuple with the ClientAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnboardSiteParam) GetClientAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientAccountId) {
		return nil, false
	}
	return o.ClientAccountId, true
}

// HasClientAccountId returns a boolean if a field has been set.
func (o *OnboardSiteParam) HasClientAccountId() bool {
	if o != nil && !IsNil(o.ClientAccountId) {
		return true
	}

	return false
}

// SetClientAccountId gets a reference to the given string and assigns it to the ClientAccountId field.
func (o *OnboardSiteParam) SetClientAccountId(v string) {
	o.ClientAccountId = &v
}

func (o OnboardSiteParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OnboardSiteParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EthAddress) {
		toSerialize["ethAddress"] = o.EthAddress
	}
	if !IsNil(o.OnlySignOn) {
		toSerialize["onlySignOn"] = o.OnlySignOn
	}
	if !IsNil(o.Param) {
		toSerialize["param"] = o.Param
	}
	if !IsNil(o.Signature) {
		toSerialize["signature"] = o.Signature
	}
	if !IsNil(o.L2Key) {
		toSerialize["l2Key"] = o.L2Key
	}
	if !IsNil(o.L2KeyYCoordinate) {
		toSerialize["l2KeyYCoordinate"] = o.L2KeyYCoordinate
	}
	if !IsNil(o.ClientAccountId) {
		toSerialize["clientAccountId"] = o.ClientAccountId
	}
	return toSerialize, nil
}

type NullableOnboardSiteParam struct {
	value *OnboardSiteParam
	isSet bool
}

func (v NullableOnboardSiteParam) Get() *OnboardSiteParam {
	return v.value
}

func (v *NullableOnboardSiteParam) Set(val *OnboardSiteParam) {
	v.value = val
	v.isSet = true
}

func (v NullableOnboardSiteParam) IsSet() bool {
	return v.isSet
}

func (v *NullableOnboardSiteParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnboardSiteParam(val *OnboardSiteParam) *NullableOnboardSiteParam {
	return &NullableOnboardSiteParam{value: val, isSet: true}
}

func (v NullableOnboardSiteParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnboardSiteParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


