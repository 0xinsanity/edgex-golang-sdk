/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateFastWithdraw type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateFastWithdraw{}

// CreateFastWithdraw 创建快速提现单-相应
type CreateFastWithdraw struct {
	// 快速提现单Id
	FastWithdrawId *string `json:"fastWithdrawId,omitempty"`
}

// NewCreateFastWithdraw instantiates a new CreateFastWithdraw object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFastWithdraw() *CreateFastWithdraw {
	this := CreateFastWithdraw{}
	return &this
}

// NewCreateFastWithdrawWithDefaults instantiates a new CreateFastWithdraw object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFastWithdrawWithDefaults() *CreateFastWithdraw {
	this := CreateFastWithdraw{}
	return &this
}

// GetFastWithdrawId returns the FastWithdrawId field value if set, zero value otherwise.
func (o *CreateFastWithdraw) GetFastWithdrawId() string {
	if o == nil || IsNil(o.FastWithdrawId) {
		var ret string
		return ret
	}
	return *o.FastWithdrawId
}

// GetFastWithdrawIdOk returns a tuple with the FastWithdrawId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFastWithdraw) GetFastWithdrawIdOk() (*string, bool) {
	if o == nil || IsNil(o.FastWithdrawId) {
		return nil, false
	}
	return o.FastWithdrawId, true
}

// HasFastWithdrawId returns a boolean if a field has been set.
func (o *CreateFastWithdraw) HasFastWithdrawId() bool {
	if o != nil && !IsNil(o.FastWithdrawId) {
		return true
	}

	return false
}

// SetFastWithdrawId gets a reference to the given string and assigns it to the FastWithdrawId field.
func (o *CreateFastWithdraw) SetFastWithdrawId(v string) {
	o.FastWithdrawId = &v
}

func (o CreateFastWithdraw) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateFastWithdraw) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FastWithdrawId) {
		toSerialize["fastWithdrawId"] = o.FastWithdrawId
	}
	return toSerialize, nil
}

type NullableCreateFastWithdraw struct {
	value *CreateFastWithdraw
	isSet bool
}

func (v NullableCreateFastWithdraw) Get() *CreateFastWithdraw {
	return v.value
}

func (v *NullableCreateFastWithdraw) Set(val *CreateFastWithdraw) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFastWithdraw) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFastWithdraw) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFastWithdraw(val *CreateFastWithdraw) *NullableCreateFastWithdraw {
	return &NullableCreateFastWithdraw{value: val, isSet: true}
}

func (v NullableCreateFastWithdraw) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFastWithdraw) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


