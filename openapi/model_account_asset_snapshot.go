/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AccountAssetSnapshot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountAssetSnapshot{}

// AccountAssetSnapshot 账户历史资产快照信息数据
type AccountAssetSnapshot struct {
	// 所属用户id
	UserId *string `json:"userId,omitempty"`
	// 所属账户id
	AccountId *string `json:"accountId,omitempty"`
	// 所属抵押品币种id
	CoinId *string `json:"coinId,omitempty"`
	// 时间标记 1表示当前的快照时间为整天
	TimeTag *int32 `json:"timeTag,omitempty"`
	// 快照时间。这个数据每小时统计一次。小时整点时间戳
	SnapshotTime *string `json:"snapshotTime,omitempty"`
	// 当前抵押品总价值
	TotalEquity *string `json:"totalEquity,omitempty"`
	// term已实现盈亏
	TermRealizePnl *string `json:"termRealizePnl,omitempty"`
	// 未实现盈亏
	UnrealizePnl *string `json:"unrealizePnl,omitempty"`
	// 仓位total已实现盈亏
	TotalRealizePnl *string `json:"totalRealizePnl,omitempty"`
}

// NewAccountAssetSnapshot instantiates a new AccountAssetSnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountAssetSnapshot() *AccountAssetSnapshot {
	this := AccountAssetSnapshot{}
	return &this
}

// NewAccountAssetSnapshotWithDefaults instantiates a new AccountAssetSnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountAssetSnapshotWithDefaults() *AccountAssetSnapshot {
	this := AccountAssetSnapshot{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *AccountAssetSnapshot) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAssetSnapshot) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *AccountAssetSnapshot) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *AccountAssetSnapshot) SetUserId(v string) {
	o.UserId = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *AccountAssetSnapshot) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAssetSnapshot) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *AccountAssetSnapshot) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *AccountAssetSnapshot) SetAccountId(v string) {
	o.AccountId = &v
}

// GetCoinId returns the CoinId field value if set, zero value otherwise.
func (o *AccountAssetSnapshot) GetCoinId() string {
	if o == nil || IsNil(o.CoinId) {
		var ret string
		return ret
	}
	return *o.CoinId
}

// GetCoinIdOk returns a tuple with the CoinId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAssetSnapshot) GetCoinIdOk() (*string, bool) {
	if o == nil || IsNil(o.CoinId) {
		return nil, false
	}
	return o.CoinId, true
}

// HasCoinId returns a boolean if a field has been set.
func (o *AccountAssetSnapshot) HasCoinId() bool {
	if o != nil && !IsNil(o.CoinId) {
		return true
	}

	return false
}

// SetCoinId gets a reference to the given string and assigns it to the CoinId field.
func (o *AccountAssetSnapshot) SetCoinId(v string) {
	o.CoinId = &v
}

// GetTimeTag returns the TimeTag field value if set, zero value otherwise.
func (o *AccountAssetSnapshot) GetTimeTag() int32 {
	if o == nil || IsNil(o.TimeTag) {
		var ret int32
		return ret
	}
	return *o.TimeTag
}

// GetTimeTagOk returns a tuple with the TimeTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAssetSnapshot) GetTimeTagOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeTag) {
		return nil, false
	}
	return o.TimeTag, true
}

// HasTimeTag returns a boolean if a field has been set.
func (o *AccountAssetSnapshot) HasTimeTag() bool {
	if o != nil && !IsNil(o.TimeTag) {
		return true
	}

	return false
}

// SetTimeTag gets a reference to the given int32 and assigns it to the TimeTag field.
func (o *AccountAssetSnapshot) SetTimeTag(v int32) {
	o.TimeTag = &v
}

// GetSnapshotTime returns the SnapshotTime field value if set, zero value otherwise.
func (o *AccountAssetSnapshot) GetSnapshotTime() string {
	if o == nil || IsNil(o.SnapshotTime) {
		var ret string
		return ret
	}
	return *o.SnapshotTime
}

// GetSnapshotTimeOk returns a tuple with the SnapshotTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAssetSnapshot) GetSnapshotTimeOk() (*string, bool) {
	if o == nil || IsNil(o.SnapshotTime) {
		return nil, false
	}
	return o.SnapshotTime, true
}

// HasSnapshotTime returns a boolean if a field has been set.
func (o *AccountAssetSnapshot) HasSnapshotTime() bool {
	if o != nil && !IsNil(o.SnapshotTime) {
		return true
	}

	return false
}

// SetSnapshotTime gets a reference to the given string and assigns it to the SnapshotTime field.
func (o *AccountAssetSnapshot) SetSnapshotTime(v string) {
	o.SnapshotTime = &v
}

// GetTotalEquity returns the TotalEquity field value if set, zero value otherwise.
func (o *AccountAssetSnapshot) GetTotalEquity() string {
	if o == nil || IsNil(o.TotalEquity) {
		var ret string
		return ret
	}
	return *o.TotalEquity
}

// GetTotalEquityOk returns a tuple with the TotalEquity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAssetSnapshot) GetTotalEquityOk() (*string, bool) {
	if o == nil || IsNil(o.TotalEquity) {
		return nil, false
	}
	return o.TotalEquity, true
}

// HasTotalEquity returns a boolean if a field has been set.
func (o *AccountAssetSnapshot) HasTotalEquity() bool {
	if o != nil && !IsNil(o.TotalEquity) {
		return true
	}

	return false
}

// SetTotalEquity gets a reference to the given string and assigns it to the TotalEquity field.
func (o *AccountAssetSnapshot) SetTotalEquity(v string) {
	o.TotalEquity = &v
}

// GetTermRealizePnl returns the TermRealizePnl field value if set, zero value otherwise.
func (o *AccountAssetSnapshot) GetTermRealizePnl() string {
	if o == nil || IsNil(o.TermRealizePnl) {
		var ret string
		return ret
	}
	return *o.TermRealizePnl
}

// GetTermRealizePnlOk returns a tuple with the TermRealizePnl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAssetSnapshot) GetTermRealizePnlOk() (*string, bool) {
	if o == nil || IsNil(o.TermRealizePnl) {
		return nil, false
	}
	return o.TermRealizePnl, true
}

// HasTermRealizePnl returns a boolean if a field has been set.
func (o *AccountAssetSnapshot) HasTermRealizePnl() bool {
	if o != nil && !IsNil(o.TermRealizePnl) {
		return true
	}

	return false
}

// SetTermRealizePnl gets a reference to the given string and assigns it to the TermRealizePnl field.
func (o *AccountAssetSnapshot) SetTermRealizePnl(v string) {
	o.TermRealizePnl = &v
}

// GetUnrealizePnl returns the UnrealizePnl field value if set, zero value otherwise.
func (o *AccountAssetSnapshot) GetUnrealizePnl() string {
	if o == nil || IsNil(o.UnrealizePnl) {
		var ret string
		return ret
	}
	return *o.UnrealizePnl
}

// GetUnrealizePnlOk returns a tuple with the UnrealizePnl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAssetSnapshot) GetUnrealizePnlOk() (*string, bool) {
	if o == nil || IsNil(o.UnrealizePnl) {
		return nil, false
	}
	return o.UnrealizePnl, true
}

// HasUnrealizePnl returns a boolean if a field has been set.
func (o *AccountAssetSnapshot) HasUnrealizePnl() bool {
	if o != nil && !IsNil(o.UnrealizePnl) {
		return true
	}

	return false
}

// SetUnrealizePnl gets a reference to the given string and assigns it to the UnrealizePnl field.
func (o *AccountAssetSnapshot) SetUnrealizePnl(v string) {
	o.UnrealizePnl = &v
}

// GetTotalRealizePnl returns the TotalRealizePnl field value if set, zero value otherwise.
func (o *AccountAssetSnapshot) GetTotalRealizePnl() string {
	if o == nil || IsNil(o.TotalRealizePnl) {
		var ret string
		return ret
	}
	return *o.TotalRealizePnl
}

// GetTotalRealizePnlOk returns a tuple with the TotalRealizePnl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAssetSnapshot) GetTotalRealizePnlOk() (*string, bool) {
	if o == nil || IsNil(o.TotalRealizePnl) {
		return nil, false
	}
	return o.TotalRealizePnl, true
}

// HasTotalRealizePnl returns a boolean if a field has been set.
func (o *AccountAssetSnapshot) HasTotalRealizePnl() bool {
	if o != nil && !IsNil(o.TotalRealizePnl) {
		return true
	}

	return false
}

// SetTotalRealizePnl gets a reference to the given string and assigns it to the TotalRealizePnl field.
func (o *AccountAssetSnapshot) SetTotalRealizePnl(v string) {
	o.TotalRealizePnl = &v
}

func (o AccountAssetSnapshot) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountAssetSnapshot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.CoinId) {
		toSerialize["coinId"] = o.CoinId
	}
	if !IsNil(o.TimeTag) {
		toSerialize["timeTag"] = o.TimeTag
	}
	if !IsNil(o.SnapshotTime) {
		toSerialize["snapshotTime"] = o.SnapshotTime
	}
	if !IsNil(o.TotalEquity) {
		toSerialize["totalEquity"] = o.TotalEquity
	}
	if !IsNil(o.TermRealizePnl) {
		toSerialize["termRealizePnl"] = o.TermRealizePnl
	}
	if !IsNil(o.UnrealizePnl) {
		toSerialize["unrealizePnl"] = o.UnrealizePnl
	}
	if !IsNil(o.TotalRealizePnl) {
		toSerialize["totalRealizePnl"] = o.TotalRealizePnl
	}
	return toSerialize, nil
}

type NullableAccountAssetSnapshot struct {
	value *AccountAssetSnapshot
	isSet bool
}

func (v NullableAccountAssetSnapshot) Get() *AccountAssetSnapshot {
	return v.value
}

func (v *NullableAccountAssetSnapshot) Set(val *AccountAssetSnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountAssetSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountAssetSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountAssetSnapshot(val *AccountAssetSnapshot) *NullableAccountAssetSnapshot {
	return &NullableAccountAssetSnapshot{value: val, isSet: true}
}

func (v NullableAccountAssetSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountAssetSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


