/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PositionTerm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PositionTerm{}

// PositionTerm 仓位term信息
type PositionTerm struct {
	// 所属用户id
	UserId *string `json:"userId,omitempty"`
	// 所属账户id
	AccountId *string `json:"accountId,omitempty"`
	// 所属抵押品币种id
	CoinId *string `json:"coinId,omitempty"`
	// 所属合约id
	ContractId *string `json:"contractId,omitempty"`
	// term次数。从1开始，每次完全平仓后开仓会加一。
	TermCount *int32 `json:"termCount,omitempty"`
	// 累计开仓数量
	CumOpenSize *string `json:"cumOpenSize,omitempty"`
	// 累计开仓价值
	CumOpenValue *string `json:"cumOpenValue,omitempty"`
	// 累计开仓费用
	CumOpenFee *string `json:"cumOpenFee,omitempty"`
	// 累计平仓数量
	CumCloseSize *string `json:"cumCloseSize,omitempty"`
	// 累计平仓价值
	CumCloseValue *string `json:"cumCloseValue,omitempty"`
	// 累计平仓费用
	CumCloseFee *string `json:"cumCloseFee,omitempty"`
	// 累计已结算的资金费用
	CumFundingFee *string `json:"cumFundingFee,omitempty"`
	// 累计清算费用
	CumLiquidateFee *string `json:"cumLiquidateFee,omitempty"`
	// 创建时间
	CreatedTime *string `json:"createdTime,omitempty"`
	// 更新时间
	UpdatedTime *string `json:"updatedTime,omitempty"`
	// 平仓时杠杆倍数
	CurrentLeverage *string `json:"currentLeverage,omitempty"`
}

// NewPositionTerm instantiates a new PositionTerm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPositionTerm() *PositionTerm {
	this := PositionTerm{}
	return &this
}

// NewPositionTermWithDefaults instantiates a new PositionTerm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPositionTermWithDefaults() *PositionTerm {
	this := PositionTerm{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *PositionTerm) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionTerm) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *PositionTerm) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *PositionTerm) SetUserId(v string) {
	o.UserId = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *PositionTerm) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionTerm) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *PositionTerm) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *PositionTerm) SetAccountId(v string) {
	o.AccountId = &v
}

// GetCoinId returns the CoinId field value if set, zero value otherwise.
func (o *PositionTerm) GetCoinId() string {
	if o == nil || IsNil(o.CoinId) {
		var ret string
		return ret
	}
	return *o.CoinId
}

// GetCoinIdOk returns a tuple with the CoinId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionTerm) GetCoinIdOk() (*string, bool) {
	if o == nil || IsNil(o.CoinId) {
		return nil, false
	}
	return o.CoinId, true
}

// HasCoinId returns a boolean if a field has been set.
func (o *PositionTerm) HasCoinId() bool {
	if o != nil && !IsNil(o.CoinId) {
		return true
	}

	return false
}

// SetCoinId gets a reference to the given string and assigns it to the CoinId field.
func (o *PositionTerm) SetCoinId(v string) {
	o.CoinId = &v
}

// GetContractId returns the ContractId field value if set, zero value otherwise.
func (o *PositionTerm) GetContractId() string {
	if o == nil || IsNil(o.ContractId) {
		var ret string
		return ret
	}
	return *o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionTerm) GetContractIdOk() (*string, bool) {
	if o == nil || IsNil(o.ContractId) {
		return nil, false
	}
	return o.ContractId, true
}

// HasContractId returns a boolean if a field has been set.
func (o *PositionTerm) HasContractId() bool {
	if o != nil && !IsNil(o.ContractId) {
		return true
	}

	return false
}

// SetContractId gets a reference to the given string and assigns it to the ContractId field.
func (o *PositionTerm) SetContractId(v string) {
	o.ContractId = &v
}

// GetTermCount returns the TermCount field value if set, zero value otherwise.
func (o *PositionTerm) GetTermCount() int32 {
	if o == nil || IsNil(o.TermCount) {
		var ret int32
		return ret
	}
	return *o.TermCount
}

// GetTermCountOk returns a tuple with the TermCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionTerm) GetTermCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TermCount) {
		return nil, false
	}
	return o.TermCount, true
}

// HasTermCount returns a boolean if a field has been set.
func (o *PositionTerm) HasTermCount() bool {
	if o != nil && !IsNil(o.TermCount) {
		return true
	}

	return false
}

// SetTermCount gets a reference to the given int32 and assigns it to the TermCount field.
func (o *PositionTerm) SetTermCount(v int32) {
	o.TermCount = &v
}

// GetCumOpenSize returns the CumOpenSize field value if set, zero value otherwise.
func (o *PositionTerm) GetCumOpenSize() string {
	if o == nil || IsNil(o.CumOpenSize) {
		var ret string
		return ret
	}
	return *o.CumOpenSize
}

// GetCumOpenSizeOk returns a tuple with the CumOpenSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionTerm) GetCumOpenSizeOk() (*string, bool) {
	if o == nil || IsNil(o.CumOpenSize) {
		return nil, false
	}
	return o.CumOpenSize, true
}

// HasCumOpenSize returns a boolean if a field has been set.
func (o *PositionTerm) HasCumOpenSize() bool {
	if o != nil && !IsNil(o.CumOpenSize) {
		return true
	}

	return false
}

// SetCumOpenSize gets a reference to the given string and assigns it to the CumOpenSize field.
func (o *PositionTerm) SetCumOpenSize(v string) {
	o.CumOpenSize = &v
}

// GetCumOpenValue returns the CumOpenValue field value if set, zero value otherwise.
func (o *PositionTerm) GetCumOpenValue() string {
	if o == nil || IsNil(o.CumOpenValue) {
		var ret string
		return ret
	}
	return *o.CumOpenValue
}

// GetCumOpenValueOk returns a tuple with the CumOpenValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionTerm) GetCumOpenValueOk() (*string, bool) {
	if o == nil || IsNil(o.CumOpenValue) {
		return nil, false
	}
	return o.CumOpenValue, true
}

// HasCumOpenValue returns a boolean if a field has been set.
func (o *PositionTerm) HasCumOpenValue() bool {
	if o != nil && !IsNil(o.CumOpenValue) {
		return true
	}

	return false
}

// SetCumOpenValue gets a reference to the given string and assigns it to the CumOpenValue field.
func (o *PositionTerm) SetCumOpenValue(v string) {
	o.CumOpenValue = &v
}

// GetCumOpenFee returns the CumOpenFee field value if set, zero value otherwise.
func (o *PositionTerm) GetCumOpenFee() string {
	if o == nil || IsNil(o.CumOpenFee) {
		var ret string
		return ret
	}
	return *o.CumOpenFee
}

// GetCumOpenFeeOk returns a tuple with the CumOpenFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionTerm) GetCumOpenFeeOk() (*string, bool) {
	if o == nil || IsNil(o.CumOpenFee) {
		return nil, false
	}
	return o.CumOpenFee, true
}

// HasCumOpenFee returns a boolean if a field has been set.
func (o *PositionTerm) HasCumOpenFee() bool {
	if o != nil && !IsNil(o.CumOpenFee) {
		return true
	}

	return false
}

// SetCumOpenFee gets a reference to the given string and assigns it to the CumOpenFee field.
func (o *PositionTerm) SetCumOpenFee(v string) {
	o.CumOpenFee = &v
}

// GetCumCloseSize returns the CumCloseSize field value if set, zero value otherwise.
func (o *PositionTerm) GetCumCloseSize() string {
	if o == nil || IsNil(o.CumCloseSize) {
		var ret string
		return ret
	}
	return *o.CumCloseSize
}

// GetCumCloseSizeOk returns a tuple with the CumCloseSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionTerm) GetCumCloseSizeOk() (*string, bool) {
	if o == nil || IsNil(o.CumCloseSize) {
		return nil, false
	}
	return o.CumCloseSize, true
}

// HasCumCloseSize returns a boolean if a field has been set.
func (o *PositionTerm) HasCumCloseSize() bool {
	if o != nil && !IsNil(o.CumCloseSize) {
		return true
	}

	return false
}

// SetCumCloseSize gets a reference to the given string and assigns it to the CumCloseSize field.
func (o *PositionTerm) SetCumCloseSize(v string) {
	o.CumCloseSize = &v
}

// GetCumCloseValue returns the CumCloseValue field value if set, zero value otherwise.
func (o *PositionTerm) GetCumCloseValue() string {
	if o == nil || IsNil(o.CumCloseValue) {
		var ret string
		return ret
	}
	return *o.CumCloseValue
}

// GetCumCloseValueOk returns a tuple with the CumCloseValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionTerm) GetCumCloseValueOk() (*string, bool) {
	if o == nil || IsNil(o.CumCloseValue) {
		return nil, false
	}
	return o.CumCloseValue, true
}

// HasCumCloseValue returns a boolean if a field has been set.
func (o *PositionTerm) HasCumCloseValue() bool {
	if o != nil && !IsNil(o.CumCloseValue) {
		return true
	}

	return false
}

// SetCumCloseValue gets a reference to the given string and assigns it to the CumCloseValue field.
func (o *PositionTerm) SetCumCloseValue(v string) {
	o.CumCloseValue = &v
}

// GetCumCloseFee returns the CumCloseFee field value if set, zero value otherwise.
func (o *PositionTerm) GetCumCloseFee() string {
	if o == nil || IsNil(o.CumCloseFee) {
		var ret string
		return ret
	}
	return *o.CumCloseFee
}

// GetCumCloseFeeOk returns a tuple with the CumCloseFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionTerm) GetCumCloseFeeOk() (*string, bool) {
	if o == nil || IsNil(o.CumCloseFee) {
		return nil, false
	}
	return o.CumCloseFee, true
}

// HasCumCloseFee returns a boolean if a field has been set.
func (o *PositionTerm) HasCumCloseFee() bool {
	if o != nil && !IsNil(o.CumCloseFee) {
		return true
	}

	return false
}

// SetCumCloseFee gets a reference to the given string and assigns it to the CumCloseFee field.
func (o *PositionTerm) SetCumCloseFee(v string) {
	o.CumCloseFee = &v
}

// GetCumFundingFee returns the CumFundingFee field value if set, zero value otherwise.
func (o *PositionTerm) GetCumFundingFee() string {
	if o == nil || IsNil(o.CumFundingFee) {
		var ret string
		return ret
	}
	return *o.CumFundingFee
}

// GetCumFundingFeeOk returns a tuple with the CumFundingFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionTerm) GetCumFundingFeeOk() (*string, bool) {
	if o == nil || IsNil(o.CumFundingFee) {
		return nil, false
	}
	return o.CumFundingFee, true
}

// HasCumFundingFee returns a boolean if a field has been set.
func (o *PositionTerm) HasCumFundingFee() bool {
	if o != nil && !IsNil(o.CumFundingFee) {
		return true
	}

	return false
}

// SetCumFundingFee gets a reference to the given string and assigns it to the CumFundingFee field.
func (o *PositionTerm) SetCumFundingFee(v string) {
	o.CumFundingFee = &v
}

// GetCumLiquidateFee returns the CumLiquidateFee field value if set, zero value otherwise.
func (o *PositionTerm) GetCumLiquidateFee() string {
	if o == nil || IsNil(o.CumLiquidateFee) {
		var ret string
		return ret
	}
	return *o.CumLiquidateFee
}

// GetCumLiquidateFeeOk returns a tuple with the CumLiquidateFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionTerm) GetCumLiquidateFeeOk() (*string, bool) {
	if o == nil || IsNil(o.CumLiquidateFee) {
		return nil, false
	}
	return o.CumLiquidateFee, true
}

// HasCumLiquidateFee returns a boolean if a field has been set.
func (o *PositionTerm) HasCumLiquidateFee() bool {
	if o != nil && !IsNil(o.CumLiquidateFee) {
		return true
	}

	return false
}

// SetCumLiquidateFee gets a reference to the given string and assigns it to the CumLiquidateFee field.
func (o *PositionTerm) SetCumLiquidateFee(v string) {
	o.CumLiquidateFee = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *PositionTerm) GetCreatedTime() string {
	if o == nil || IsNil(o.CreatedTime) {
		var ret string
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionTerm) GetCreatedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *PositionTerm) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given string and assigns it to the CreatedTime field.
func (o *PositionTerm) SetCreatedTime(v string) {
	o.CreatedTime = &v
}

// GetUpdatedTime returns the UpdatedTime field value if set, zero value otherwise.
func (o *PositionTerm) GetUpdatedTime() string {
	if o == nil || IsNil(o.UpdatedTime) {
		var ret string
		return ret
	}
	return *o.UpdatedTime
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionTerm) GetUpdatedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedTime) {
		return nil, false
	}
	return o.UpdatedTime, true
}

// HasUpdatedTime returns a boolean if a field has been set.
func (o *PositionTerm) HasUpdatedTime() bool {
	if o != nil && !IsNil(o.UpdatedTime) {
		return true
	}

	return false
}

// SetUpdatedTime gets a reference to the given string and assigns it to the UpdatedTime field.
func (o *PositionTerm) SetUpdatedTime(v string) {
	o.UpdatedTime = &v
}

// GetCurrentLeverage returns the CurrentLeverage field value if set, zero value otherwise.
func (o *PositionTerm) GetCurrentLeverage() string {
	if o == nil || IsNil(o.CurrentLeverage) {
		var ret string
		return ret
	}
	return *o.CurrentLeverage
}

// GetCurrentLeverageOk returns a tuple with the CurrentLeverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionTerm) GetCurrentLeverageOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentLeverage) {
		return nil, false
	}
	return o.CurrentLeverage, true
}

// HasCurrentLeverage returns a boolean if a field has been set.
func (o *PositionTerm) HasCurrentLeverage() bool {
	if o != nil && !IsNil(o.CurrentLeverage) {
		return true
	}

	return false
}

// SetCurrentLeverage gets a reference to the given string and assigns it to the CurrentLeverage field.
func (o *PositionTerm) SetCurrentLeverage(v string) {
	o.CurrentLeverage = &v
}

func (o PositionTerm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PositionTerm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.CoinId) {
		toSerialize["coinId"] = o.CoinId
	}
	if !IsNil(o.ContractId) {
		toSerialize["contractId"] = o.ContractId
	}
	if !IsNil(o.TermCount) {
		toSerialize["termCount"] = o.TermCount
	}
	if !IsNil(o.CumOpenSize) {
		toSerialize["cumOpenSize"] = o.CumOpenSize
	}
	if !IsNil(o.CumOpenValue) {
		toSerialize["cumOpenValue"] = o.CumOpenValue
	}
	if !IsNil(o.CumOpenFee) {
		toSerialize["cumOpenFee"] = o.CumOpenFee
	}
	if !IsNil(o.CumCloseSize) {
		toSerialize["cumCloseSize"] = o.CumCloseSize
	}
	if !IsNil(o.CumCloseValue) {
		toSerialize["cumCloseValue"] = o.CumCloseValue
	}
	if !IsNil(o.CumCloseFee) {
		toSerialize["cumCloseFee"] = o.CumCloseFee
	}
	if !IsNil(o.CumFundingFee) {
		toSerialize["cumFundingFee"] = o.CumFundingFee
	}
	if !IsNil(o.CumLiquidateFee) {
		toSerialize["cumLiquidateFee"] = o.CumLiquidateFee
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["createdTime"] = o.CreatedTime
	}
	if !IsNil(o.UpdatedTime) {
		toSerialize["updatedTime"] = o.UpdatedTime
	}
	if !IsNil(o.CurrentLeverage) {
		toSerialize["currentLeverage"] = o.CurrentLeverage
	}
	return toSerialize, nil
}

type NullablePositionTerm struct {
	value *PositionTerm
	isSet bool
}

func (v NullablePositionTerm) Get() *PositionTerm {
	return v.value
}

func (v *NullablePositionTerm) Set(val *PositionTerm) {
	v.value = val
	v.isSet = true
}

func (v NullablePositionTerm) IsSet() bool {
	return v.isSet
}

func (v *NullablePositionTerm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePositionTerm(val *PositionTerm) *NullablePositionTerm {
	return &NullablePositionTerm{value: val, isSet: true}
}

func (v NullablePositionTerm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePositionTerm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


