/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Contract type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Contract{}

// Contract 永续合约元信息
type Contract struct {
	// 永续合约币对标识
	ContractId *string `json:"contractId,omitempty"`
	// 永续合约币对名称
	ContractName *string `json:"contractName,omitempty"`
	// 例如：10000001 (BTC)
	BaseCoinId *string `json:"baseCoinId,omitempty"`
	// 例如：1001 (USD/USDT)
	QuoteCoinId *string `json:"quoteCoinId,omitempty"`
	// 最小报价单位(quoteCoinId)
	TickSize *string `json:"tickSize,omitempty"`
	// 最小数量单位(baseCoinId)
	StepSize *string `json:"stepSize,omitempty"`
	// 最小委托单数量(baseCoinId)
	MinOrderSize *string `json:"minOrderSize,omitempty"`
	// 最大委托单数据(baseCoinId)
	MaxOrderSize *string `json:"maxOrderSize,omitempty"`
	// 最大委托单买价限价比例 (和预言机价格相比), decimal (quote_coin_id)
	MaxOrderBuyPriceRatio *string `json:"maxOrderBuyPriceRatio,omitempty"`
	// 最小委托单卖价限价比例 (和预言机价格相比), decimal (quote_coin_id)
	MinOrderSellPriceRatio *string `json:"minOrderSellPriceRatio,omitempty"`
	// 最大仓位数量(baseCoinId)
	MaxPositionSize *string `json:"maxPositionSize,omitempty"`
	// 风险限额档位列表
	RiskTierList []RiskTier `json:"riskTierList,omitempty"`
	// 合约默认的taker手续费率
	DefaultTakerFeeRate *string `json:"defaultTakerFeeRate,omitempty"`
	// 合约默认的maker手续费率
	DefaultMakerFeeRate *string `json:"defaultMakerFeeRate,omitempty"`
	// 用户没有设置交易杠杆时，初始的默认开仓杠杆倍数
	DefaultLeverage *string `json:"defaultLeverage,omitempty"`
	// 清算费率
	LiquidateFeeRate *string `json:"liquidateFeeRate,omitempty"`
	// 是否可以交易. true: 可以交易, false: 不可交易
	EnableTrade *bool `json:"enableTrade,omitempty"`
	// 是否可以展示. true: 可以展示, false: 隐藏
	EnableDisplay *bool `json:"enableDisplay,omitempty"`
	// 是否可以开仓. true: 可以开仓和平仓，false: 不可以开仓仅可平仓
	EnableOpenPosition *bool `json:"enableOpenPosition,omitempty"`
	// 综合利率默认值, 例如: 0.0003
	FundingInterestRate *string `json:"fundingInterestRate,omitempty"`
	//  深度加权买卖价计算数量, 例如: 8000
	FundingImpactMarginNotional *string `json:"fundingImpactMarginNotional,omitempty"`
	//  资金费率最大值, 例如: 0.000234
	FundingMaxRate *string `json:"fundingMaxRate,omitempty"`
	//  资金费率最小值, 例如: -0.000234
	FundingMinRate *string `json:"fundingMinRate,omitempty"`
	//  资金费率结算时间间隔(分钟，必须是60分钟的整数倍, 从UTC时间00:00开始结算) decimal
	FundingRateIntervalMin *string `json:"fundingRateIntervalMin,omitempty"`
	//  深度合并. 例如: \"1,0.1,0.001\"
	DisplayDigitMerge *string `json:"displayDigitMerge,omitempty"`
	//  展示杠杆最大倍数, decimal. 例如: 20
	DisplayMaxLeverage *string `json:"displayMaxLeverage,omitempty"`
	//  展示杠杆最小倍数, decimal. 例如: 1
	DisplayMinLeverage *string `json:"displayMinLeverage,omitempty"`
	// 是否为新上币对
	DisplayNewIcon *bool `json:"displayNewIcon,omitempty"`
	// 是否为热门币对
	DisplayHotIcon *bool `json:"displayHotIcon,omitempty"`
	//  处理撮合服务名, 例如：xxx-match-server-a。 这个值一旦配置就不能再更改了，要是改的话得做好数据迁移。
	MatchServerName *string `json:"matchServerName,omitempty"`
	// 当前币对对应的混合资产id, bigint for hex str.
	StarkExSyntheticAssetId *string `json:"starkExSyntheticAssetId,omitempty"`
	// 当前币对持有数量处理精度, bigint for hex str
	StarkExResolution *string `json:"starkExResolution,omitempty"`
	// 预言机价格法定数量，bigint for hex str
	StarkExOraclePriceQuorum *string `json:"starkExOraclePriceQuorum,omitempty"`
	// bigint for hex str
	StarkExOraclePriceSignedAssetId []string `json:"starkExOraclePriceSignedAssetId,omitempty"`
	// bigint for hex str
	StarkExOraclePriceSigner []string `json:"starkExOraclePriceSigner,omitempty"`
}

// NewContract instantiates a new Contract object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContract() *Contract {
	this := Contract{}
	return &this
}

// NewContractWithDefaults instantiates a new Contract object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractWithDefaults() *Contract {
	this := Contract{}
	return &this
}

// GetContractId returns the ContractId field value if set, zero value otherwise.
func (o *Contract) GetContractId() string {
	if o == nil || IsNil(o.ContractId) {
		var ret string
		return ret
	}
	return *o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetContractIdOk() (*string, bool) {
	if o == nil || IsNil(o.ContractId) {
		return nil, false
	}
	return o.ContractId, true
}

// HasContractId returns a boolean if a field has been set.
func (o *Contract) HasContractId() bool {
	if o != nil && !IsNil(o.ContractId) {
		return true
	}

	return false
}

// SetContractId gets a reference to the given string and assigns it to the ContractId field.
func (o *Contract) SetContractId(v string) {
	o.ContractId = &v
}

// GetContractName returns the ContractName field value if set, zero value otherwise.
func (o *Contract) GetContractName() string {
	if o == nil || IsNil(o.ContractName) {
		var ret string
		return ret
	}
	return *o.ContractName
}

// GetContractNameOk returns a tuple with the ContractName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetContractNameOk() (*string, bool) {
	if o == nil || IsNil(o.ContractName) {
		return nil, false
	}
	return o.ContractName, true
}

// HasContractName returns a boolean if a field has been set.
func (o *Contract) HasContractName() bool {
	if o != nil && !IsNil(o.ContractName) {
		return true
	}

	return false
}

// SetContractName gets a reference to the given string and assigns it to the ContractName field.
func (o *Contract) SetContractName(v string) {
	o.ContractName = &v
}

// GetBaseCoinId returns the BaseCoinId field value if set, zero value otherwise.
func (o *Contract) GetBaseCoinId() string {
	if o == nil || IsNil(o.BaseCoinId) {
		var ret string
		return ret
	}
	return *o.BaseCoinId
}

// GetBaseCoinIdOk returns a tuple with the BaseCoinId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetBaseCoinIdOk() (*string, bool) {
	if o == nil || IsNil(o.BaseCoinId) {
		return nil, false
	}
	return o.BaseCoinId, true
}

// HasBaseCoinId returns a boolean if a field has been set.
func (o *Contract) HasBaseCoinId() bool {
	if o != nil && !IsNil(o.BaseCoinId) {
		return true
	}

	return false
}

// SetBaseCoinId gets a reference to the given string and assigns it to the BaseCoinId field.
func (o *Contract) SetBaseCoinId(v string) {
	o.BaseCoinId = &v
}

// GetQuoteCoinId returns the QuoteCoinId field value if set, zero value otherwise.
func (o *Contract) GetQuoteCoinId() string {
	if o == nil || IsNil(o.QuoteCoinId) {
		var ret string
		return ret
	}
	return *o.QuoteCoinId
}

// GetQuoteCoinIdOk returns a tuple with the QuoteCoinId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetQuoteCoinIdOk() (*string, bool) {
	if o == nil || IsNil(o.QuoteCoinId) {
		return nil, false
	}
	return o.QuoteCoinId, true
}

// HasQuoteCoinId returns a boolean if a field has been set.
func (o *Contract) HasQuoteCoinId() bool {
	if o != nil && !IsNil(o.QuoteCoinId) {
		return true
	}

	return false
}

// SetQuoteCoinId gets a reference to the given string and assigns it to the QuoteCoinId field.
func (o *Contract) SetQuoteCoinId(v string) {
	o.QuoteCoinId = &v
}

// GetTickSize returns the TickSize field value if set, zero value otherwise.
func (o *Contract) GetTickSize() string {
	if o == nil || IsNil(o.TickSize) {
		var ret string
		return ret
	}
	return *o.TickSize
}

// GetTickSizeOk returns a tuple with the TickSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetTickSizeOk() (*string, bool) {
	if o == nil || IsNil(o.TickSize) {
		return nil, false
	}
	return o.TickSize, true
}

// HasTickSize returns a boolean if a field has been set.
func (o *Contract) HasTickSize() bool {
	if o != nil && !IsNil(o.TickSize) {
		return true
	}

	return false
}

// SetTickSize gets a reference to the given string and assigns it to the TickSize field.
func (o *Contract) SetTickSize(v string) {
	o.TickSize = &v
}

// GetStepSize returns the StepSize field value if set, zero value otherwise.
func (o *Contract) GetStepSize() string {
	if o == nil || IsNil(o.StepSize) {
		var ret string
		return ret
	}
	return *o.StepSize
}

// GetStepSizeOk returns a tuple with the StepSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetStepSizeOk() (*string, bool) {
	if o == nil || IsNil(o.StepSize) {
		return nil, false
	}
	return o.StepSize, true
}

// HasStepSize returns a boolean if a field has been set.
func (o *Contract) HasStepSize() bool {
	if o != nil && !IsNil(o.StepSize) {
		return true
	}

	return false
}

// SetStepSize gets a reference to the given string and assigns it to the StepSize field.
func (o *Contract) SetStepSize(v string) {
	o.StepSize = &v
}

// GetMinOrderSize returns the MinOrderSize field value if set, zero value otherwise.
func (o *Contract) GetMinOrderSize() string {
	if o == nil || IsNil(o.MinOrderSize) {
		var ret string
		return ret
	}
	return *o.MinOrderSize
}

// GetMinOrderSizeOk returns a tuple with the MinOrderSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetMinOrderSizeOk() (*string, bool) {
	if o == nil || IsNil(o.MinOrderSize) {
		return nil, false
	}
	return o.MinOrderSize, true
}

// HasMinOrderSize returns a boolean if a field has been set.
func (o *Contract) HasMinOrderSize() bool {
	if o != nil && !IsNil(o.MinOrderSize) {
		return true
	}

	return false
}

// SetMinOrderSize gets a reference to the given string and assigns it to the MinOrderSize field.
func (o *Contract) SetMinOrderSize(v string) {
	o.MinOrderSize = &v
}

// GetMaxOrderSize returns the MaxOrderSize field value if set, zero value otherwise.
func (o *Contract) GetMaxOrderSize() string {
	if o == nil || IsNil(o.MaxOrderSize) {
		var ret string
		return ret
	}
	return *o.MaxOrderSize
}

// GetMaxOrderSizeOk returns a tuple with the MaxOrderSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetMaxOrderSizeOk() (*string, bool) {
	if o == nil || IsNil(o.MaxOrderSize) {
		return nil, false
	}
	return o.MaxOrderSize, true
}

// HasMaxOrderSize returns a boolean if a field has been set.
func (o *Contract) HasMaxOrderSize() bool {
	if o != nil && !IsNil(o.MaxOrderSize) {
		return true
	}

	return false
}

// SetMaxOrderSize gets a reference to the given string and assigns it to the MaxOrderSize field.
func (o *Contract) SetMaxOrderSize(v string) {
	o.MaxOrderSize = &v
}

// GetMaxOrderBuyPriceRatio returns the MaxOrderBuyPriceRatio field value if set, zero value otherwise.
func (o *Contract) GetMaxOrderBuyPriceRatio() string {
	if o == nil || IsNil(o.MaxOrderBuyPriceRatio) {
		var ret string
		return ret
	}
	return *o.MaxOrderBuyPriceRatio
}

// GetMaxOrderBuyPriceRatioOk returns a tuple with the MaxOrderBuyPriceRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetMaxOrderBuyPriceRatioOk() (*string, bool) {
	if o == nil || IsNil(o.MaxOrderBuyPriceRatio) {
		return nil, false
	}
	return o.MaxOrderBuyPriceRatio, true
}

// HasMaxOrderBuyPriceRatio returns a boolean if a field has been set.
func (o *Contract) HasMaxOrderBuyPriceRatio() bool {
	if o != nil && !IsNil(o.MaxOrderBuyPriceRatio) {
		return true
	}

	return false
}

// SetMaxOrderBuyPriceRatio gets a reference to the given string and assigns it to the MaxOrderBuyPriceRatio field.
func (o *Contract) SetMaxOrderBuyPriceRatio(v string) {
	o.MaxOrderBuyPriceRatio = &v
}

// GetMinOrderSellPriceRatio returns the MinOrderSellPriceRatio field value if set, zero value otherwise.
func (o *Contract) GetMinOrderSellPriceRatio() string {
	if o == nil || IsNil(o.MinOrderSellPriceRatio) {
		var ret string
		return ret
	}
	return *o.MinOrderSellPriceRatio
}

// GetMinOrderSellPriceRatioOk returns a tuple with the MinOrderSellPriceRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetMinOrderSellPriceRatioOk() (*string, bool) {
	if o == nil || IsNil(o.MinOrderSellPriceRatio) {
		return nil, false
	}
	return o.MinOrderSellPriceRatio, true
}

// HasMinOrderSellPriceRatio returns a boolean if a field has been set.
func (o *Contract) HasMinOrderSellPriceRatio() bool {
	if o != nil && !IsNil(o.MinOrderSellPriceRatio) {
		return true
	}

	return false
}

// SetMinOrderSellPriceRatio gets a reference to the given string and assigns it to the MinOrderSellPriceRatio field.
func (o *Contract) SetMinOrderSellPriceRatio(v string) {
	o.MinOrderSellPriceRatio = &v
}

// GetMaxPositionSize returns the MaxPositionSize field value if set, zero value otherwise.
func (o *Contract) GetMaxPositionSize() string {
	if o == nil || IsNil(o.MaxPositionSize) {
		var ret string
		return ret
	}
	return *o.MaxPositionSize
}

// GetMaxPositionSizeOk returns a tuple with the MaxPositionSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetMaxPositionSizeOk() (*string, bool) {
	if o == nil || IsNil(o.MaxPositionSize) {
		return nil, false
	}
	return o.MaxPositionSize, true
}

// HasMaxPositionSize returns a boolean if a field has been set.
func (o *Contract) HasMaxPositionSize() bool {
	if o != nil && !IsNil(o.MaxPositionSize) {
		return true
	}

	return false
}

// SetMaxPositionSize gets a reference to the given string and assigns it to the MaxPositionSize field.
func (o *Contract) SetMaxPositionSize(v string) {
	o.MaxPositionSize = &v
}

// GetRiskTierList returns the RiskTierList field value if set, zero value otherwise.
func (o *Contract) GetRiskTierList() []RiskTier {
	if o == nil || IsNil(o.RiskTierList) {
		var ret []RiskTier
		return ret
	}
	return o.RiskTierList
}

// GetRiskTierListOk returns a tuple with the RiskTierList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetRiskTierListOk() ([]RiskTier, bool) {
	if o == nil || IsNil(o.RiskTierList) {
		return nil, false
	}
	return o.RiskTierList, true
}

// HasRiskTierList returns a boolean if a field has been set.
func (o *Contract) HasRiskTierList() bool {
	if o != nil && !IsNil(o.RiskTierList) {
		return true
	}

	return false
}

// SetRiskTierList gets a reference to the given []RiskTier and assigns it to the RiskTierList field.
func (o *Contract) SetRiskTierList(v []RiskTier) {
	o.RiskTierList = v
}

// GetDefaultTakerFeeRate returns the DefaultTakerFeeRate field value if set, zero value otherwise.
func (o *Contract) GetDefaultTakerFeeRate() string {
	if o == nil || IsNil(o.DefaultTakerFeeRate) {
		var ret string
		return ret
	}
	return *o.DefaultTakerFeeRate
}

// GetDefaultTakerFeeRateOk returns a tuple with the DefaultTakerFeeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetDefaultTakerFeeRateOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultTakerFeeRate) {
		return nil, false
	}
	return o.DefaultTakerFeeRate, true
}

// HasDefaultTakerFeeRate returns a boolean if a field has been set.
func (o *Contract) HasDefaultTakerFeeRate() bool {
	if o != nil && !IsNil(o.DefaultTakerFeeRate) {
		return true
	}

	return false
}

// SetDefaultTakerFeeRate gets a reference to the given string and assigns it to the DefaultTakerFeeRate field.
func (o *Contract) SetDefaultTakerFeeRate(v string) {
	o.DefaultTakerFeeRate = &v
}

// GetDefaultMakerFeeRate returns the DefaultMakerFeeRate field value if set, zero value otherwise.
func (o *Contract) GetDefaultMakerFeeRate() string {
	if o == nil || IsNil(o.DefaultMakerFeeRate) {
		var ret string
		return ret
	}
	return *o.DefaultMakerFeeRate
}

// GetDefaultMakerFeeRateOk returns a tuple with the DefaultMakerFeeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetDefaultMakerFeeRateOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultMakerFeeRate) {
		return nil, false
	}
	return o.DefaultMakerFeeRate, true
}

// HasDefaultMakerFeeRate returns a boolean if a field has been set.
func (o *Contract) HasDefaultMakerFeeRate() bool {
	if o != nil && !IsNil(o.DefaultMakerFeeRate) {
		return true
	}

	return false
}

// SetDefaultMakerFeeRate gets a reference to the given string and assigns it to the DefaultMakerFeeRate field.
func (o *Contract) SetDefaultMakerFeeRate(v string) {
	o.DefaultMakerFeeRate = &v
}

// GetDefaultLeverage returns the DefaultLeverage field value if set, zero value otherwise.
func (o *Contract) GetDefaultLeverage() string {
	if o == nil || IsNil(o.DefaultLeverage) {
		var ret string
		return ret
	}
	return *o.DefaultLeverage
}

// GetDefaultLeverageOk returns a tuple with the DefaultLeverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetDefaultLeverageOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultLeverage) {
		return nil, false
	}
	return o.DefaultLeverage, true
}

// HasDefaultLeverage returns a boolean if a field has been set.
func (o *Contract) HasDefaultLeverage() bool {
	if o != nil && !IsNil(o.DefaultLeverage) {
		return true
	}

	return false
}

// SetDefaultLeverage gets a reference to the given string and assigns it to the DefaultLeverage field.
func (o *Contract) SetDefaultLeverage(v string) {
	o.DefaultLeverage = &v
}

// GetLiquidateFeeRate returns the LiquidateFeeRate field value if set, zero value otherwise.
func (o *Contract) GetLiquidateFeeRate() string {
	if o == nil || IsNil(o.LiquidateFeeRate) {
		var ret string
		return ret
	}
	return *o.LiquidateFeeRate
}

// GetLiquidateFeeRateOk returns a tuple with the LiquidateFeeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetLiquidateFeeRateOk() (*string, bool) {
	if o == nil || IsNil(o.LiquidateFeeRate) {
		return nil, false
	}
	return o.LiquidateFeeRate, true
}

// HasLiquidateFeeRate returns a boolean if a field has been set.
func (o *Contract) HasLiquidateFeeRate() bool {
	if o != nil && !IsNil(o.LiquidateFeeRate) {
		return true
	}

	return false
}

// SetLiquidateFeeRate gets a reference to the given string and assigns it to the LiquidateFeeRate field.
func (o *Contract) SetLiquidateFeeRate(v string) {
	o.LiquidateFeeRate = &v
}

// GetEnableTrade returns the EnableTrade field value if set, zero value otherwise.
func (o *Contract) GetEnableTrade() bool {
	if o == nil || IsNil(o.EnableTrade) {
		var ret bool
		return ret
	}
	return *o.EnableTrade
}

// GetEnableTradeOk returns a tuple with the EnableTrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetEnableTradeOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableTrade) {
		return nil, false
	}
	return o.EnableTrade, true
}

// HasEnableTrade returns a boolean if a field has been set.
func (o *Contract) HasEnableTrade() bool {
	if o != nil && !IsNil(o.EnableTrade) {
		return true
	}

	return false
}

// SetEnableTrade gets a reference to the given bool and assigns it to the EnableTrade field.
func (o *Contract) SetEnableTrade(v bool) {
	o.EnableTrade = &v
}

// GetEnableDisplay returns the EnableDisplay field value if set, zero value otherwise.
func (o *Contract) GetEnableDisplay() bool {
	if o == nil || IsNil(o.EnableDisplay) {
		var ret bool
		return ret
	}
	return *o.EnableDisplay
}

// GetEnableDisplayOk returns a tuple with the EnableDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetEnableDisplayOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableDisplay) {
		return nil, false
	}
	return o.EnableDisplay, true
}

// HasEnableDisplay returns a boolean if a field has been set.
func (o *Contract) HasEnableDisplay() bool {
	if o != nil && !IsNil(o.EnableDisplay) {
		return true
	}

	return false
}

// SetEnableDisplay gets a reference to the given bool and assigns it to the EnableDisplay field.
func (o *Contract) SetEnableDisplay(v bool) {
	o.EnableDisplay = &v
}

// GetEnableOpenPosition returns the EnableOpenPosition field value if set, zero value otherwise.
func (o *Contract) GetEnableOpenPosition() bool {
	if o == nil || IsNil(o.EnableOpenPosition) {
		var ret bool
		return ret
	}
	return *o.EnableOpenPosition
}

// GetEnableOpenPositionOk returns a tuple with the EnableOpenPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetEnableOpenPositionOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableOpenPosition) {
		return nil, false
	}
	return o.EnableOpenPosition, true
}

// HasEnableOpenPosition returns a boolean if a field has been set.
func (o *Contract) HasEnableOpenPosition() bool {
	if o != nil && !IsNil(o.EnableOpenPosition) {
		return true
	}

	return false
}

// SetEnableOpenPosition gets a reference to the given bool and assigns it to the EnableOpenPosition field.
func (o *Contract) SetEnableOpenPosition(v bool) {
	o.EnableOpenPosition = &v
}

// GetFundingInterestRate returns the FundingInterestRate field value if set, zero value otherwise.
func (o *Contract) GetFundingInterestRate() string {
	if o == nil || IsNil(o.FundingInterestRate) {
		var ret string
		return ret
	}
	return *o.FundingInterestRate
}

// GetFundingInterestRateOk returns a tuple with the FundingInterestRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetFundingInterestRateOk() (*string, bool) {
	if o == nil || IsNil(o.FundingInterestRate) {
		return nil, false
	}
	return o.FundingInterestRate, true
}

// HasFundingInterestRate returns a boolean if a field has been set.
func (o *Contract) HasFundingInterestRate() bool {
	if o != nil && !IsNil(o.FundingInterestRate) {
		return true
	}

	return false
}

// SetFundingInterestRate gets a reference to the given string and assigns it to the FundingInterestRate field.
func (o *Contract) SetFundingInterestRate(v string) {
	o.FundingInterestRate = &v
}

// GetFundingImpactMarginNotional returns the FundingImpactMarginNotional field value if set, zero value otherwise.
func (o *Contract) GetFundingImpactMarginNotional() string {
	if o == nil || IsNil(o.FundingImpactMarginNotional) {
		var ret string
		return ret
	}
	return *o.FundingImpactMarginNotional
}

// GetFundingImpactMarginNotionalOk returns a tuple with the FundingImpactMarginNotional field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetFundingImpactMarginNotionalOk() (*string, bool) {
	if o == nil || IsNil(o.FundingImpactMarginNotional) {
		return nil, false
	}
	return o.FundingImpactMarginNotional, true
}

// HasFundingImpactMarginNotional returns a boolean if a field has been set.
func (o *Contract) HasFundingImpactMarginNotional() bool {
	if o != nil && !IsNil(o.FundingImpactMarginNotional) {
		return true
	}

	return false
}

// SetFundingImpactMarginNotional gets a reference to the given string and assigns it to the FundingImpactMarginNotional field.
func (o *Contract) SetFundingImpactMarginNotional(v string) {
	o.FundingImpactMarginNotional = &v
}

// GetFundingMaxRate returns the FundingMaxRate field value if set, zero value otherwise.
func (o *Contract) GetFundingMaxRate() string {
	if o == nil || IsNil(o.FundingMaxRate) {
		var ret string
		return ret
	}
	return *o.FundingMaxRate
}

// GetFundingMaxRateOk returns a tuple with the FundingMaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetFundingMaxRateOk() (*string, bool) {
	if o == nil || IsNil(o.FundingMaxRate) {
		return nil, false
	}
	return o.FundingMaxRate, true
}

// HasFundingMaxRate returns a boolean if a field has been set.
func (o *Contract) HasFundingMaxRate() bool {
	if o != nil && !IsNil(o.FundingMaxRate) {
		return true
	}

	return false
}

// SetFundingMaxRate gets a reference to the given string and assigns it to the FundingMaxRate field.
func (o *Contract) SetFundingMaxRate(v string) {
	o.FundingMaxRate = &v
}

// GetFundingMinRate returns the FundingMinRate field value if set, zero value otherwise.
func (o *Contract) GetFundingMinRate() string {
	if o == nil || IsNil(o.FundingMinRate) {
		var ret string
		return ret
	}
	return *o.FundingMinRate
}

// GetFundingMinRateOk returns a tuple with the FundingMinRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetFundingMinRateOk() (*string, bool) {
	if o == nil || IsNil(o.FundingMinRate) {
		return nil, false
	}
	return o.FundingMinRate, true
}

// HasFundingMinRate returns a boolean if a field has been set.
func (o *Contract) HasFundingMinRate() bool {
	if o != nil && !IsNil(o.FundingMinRate) {
		return true
	}

	return false
}

// SetFundingMinRate gets a reference to the given string and assigns it to the FundingMinRate field.
func (o *Contract) SetFundingMinRate(v string) {
	o.FundingMinRate = &v
}

// GetFundingRateIntervalMin returns the FundingRateIntervalMin field value if set, zero value otherwise.
func (o *Contract) GetFundingRateIntervalMin() string {
	if o == nil || IsNil(o.FundingRateIntervalMin) {
		var ret string
		return ret
	}
	return *o.FundingRateIntervalMin
}

// GetFundingRateIntervalMinOk returns a tuple with the FundingRateIntervalMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetFundingRateIntervalMinOk() (*string, bool) {
	if o == nil || IsNil(o.FundingRateIntervalMin) {
		return nil, false
	}
	return o.FundingRateIntervalMin, true
}

// HasFundingRateIntervalMin returns a boolean if a field has been set.
func (o *Contract) HasFundingRateIntervalMin() bool {
	if o != nil && !IsNil(o.FundingRateIntervalMin) {
		return true
	}

	return false
}

// SetFundingRateIntervalMin gets a reference to the given string and assigns it to the FundingRateIntervalMin field.
func (o *Contract) SetFundingRateIntervalMin(v string) {
	o.FundingRateIntervalMin = &v
}

// GetDisplayDigitMerge returns the DisplayDigitMerge field value if set, zero value otherwise.
func (o *Contract) GetDisplayDigitMerge() string {
	if o == nil || IsNil(o.DisplayDigitMerge) {
		var ret string
		return ret
	}
	return *o.DisplayDigitMerge
}

// GetDisplayDigitMergeOk returns a tuple with the DisplayDigitMerge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetDisplayDigitMergeOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayDigitMerge) {
		return nil, false
	}
	return o.DisplayDigitMerge, true
}

// HasDisplayDigitMerge returns a boolean if a field has been set.
func (o *Contract) HasDisplayDigitMerge() bool {
	if o != nil && !IsNil(o.DisplayDigitMerge) {
		return true
	}

	return false
}

// SetDisplayDigitMerge gets a reference to the given string and assigns it to the DisplayDigitMerge field.
func (o *Contract) SetDisplayDigitMerge(v string) {
	o.DisplayDigitMerge = &v
}

// GetDisplayMaxLeverage returns the DisplayMaxLeverage field value if set, zero value otherwise.
func (o *Contract) GetDisplayMaxLeverage() string {
	if o == nil || IsNil(o.DisplayMaxLeverage) {
		var ret string
		return ret
	}
	return *o.DisplayMaxLeverage
}

// GetDisplayMaxLeverageOk returns a tuple with the DisplayMaxLeverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetDisplayMaxLeverageOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayMaxLeverage) {
		return nil, false
	}
	return o.DisplayMaxLeverage, true
}

// HasDisplayMaxLeverage returns a boolean if a field has been set.
func (o *Contract) HasDisplayMaxLeverage() bool {
	if o != nil && !IsNil(o.DisplayMaxLeverage) {
		return true
	}

	return false
}

// SetDisplayMaxLeverage gets a reference to the given string and assigns it to the DisplayMaxLeverage field.
func (o *Contract) SetDisplayMaxLeverage(v string) {
	o.DisplayMaxLeverage = &v
}

// GetDisplayMinLeverage returns the DisplayMinLeverage field value if set, zero value otherwise.
func (o *Contract) GetDisplayMinLeverage() string {
	if o == nil || IsNil(o.DisplayMinLeverage) {
		var ret string
		return ret
	}
	return *o.DisplayMinLeverage
}

// GetDisplayMinLeverageOk returns a tuple with the DisplayMinLeverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetDisplayMinLeverageOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayMinLeverage) {
		return nil, false
	}
	return o.DisplayMinLeverage, true
}

// HasDisplayMinLeverage returns a boolean if a field has been set.
func (o *Contract) HasDisplayMinLeverage() bool {
	if o != nil && !IsNil(o.DisplayMinLeverage) {
		return true
	}

	return false
}

// SetDisplayMinLeverage gets a reference to the given string and assigns it to the DisplayMinLeverage field.
func (o *Contract) SetDisplayMinLeverage(v string) {
	o.DisplayMinLeverage = &v
}

// GetDisplayNewIcon returns the DisplayNewIcon field value if set, zero value otherwise.
func (o *Contract) GetDisplayNewIcon() bool {
	if o == nil || IsNil(o.DisplayNewIcon) {
		var ret bool
		return ret
	}
	return *o.DisplayNewIcon
}

// GetDisplayNewIconOk returns a tuple with the DisplayNewIcon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetDisplayNewIconOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplayNewIcon) {
		return nil, false
	}
	return o.DisplayNewIcon, true
}

// HasDisplayNewIcon returns a boolean if a field has been set.
func (o *Contract) HasDisplayNewIcon() bool {
	if o != nil && !IsNil(o.DisplayNewIcon) {
		return true
	}

	return false
}

// SetDisplayNewIcon gets a reference to the given bool and assigns it to the DisplayNewIcon field.
func (o *Contract) SetDisplayNewIcon(v bool) {
	o.DisplayNewIcon = &v
}

// GetDisplayHotIcon returns the DisplayHotIcon field value if set, zero value otherwise.
func (o *Contract) GetDisplayHotIcon() bool {
	if o == nil || IsNil(o.DisplayHotIcon) {
		var ret bool
		return ret
	}
	return *o.DisplayHotIcon
}

// GetDisplayHotIconOk returns a tuple with the DisplayHotIcon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetDisplayHotIconOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplayHotIcon) {
		return nil, false
	}
	return o.DisplayHotIcon, true
}

// HasDisplayHotIcon returns a boolean if a field has been set.
func (o *Contract) HasDisplayHotIcon() bool {
	if o != nil && !IsNil(o.DisplayHotIcon) {
		return true
	}

	return false
}

// SetDisplayHotIcon gets a reference to the given bool and assigns it to the DisplayHotIcon field.
func (o *Contract) SetDisplayHotIcon(v bool) {
	o.DisplayHotIcon = &v
}

// GetMatchServerName returns the MatchServerName field value if set, zero value otherwise.
func (o *Contract) GetMatchServerName() string {
	if o == nil || IsNil(o.MatchServerName) {
		var ret string
		return ret
	}
	return *o.MatchServerName
}

// GetMatchServerNameOk returns a tuple with the MatchServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetMatchServerNameOk() (*string, bool) {
	if o == nil || IsNil(o.MatchServerName) {
		return nil, false
	}
	return o.MatchServerName, true
}

// HasMatchServerName returns a boolean if a field has been set.
func (o *Contract) HasMatchServerName() bool {
	if o != nil && !IsNil(o.MatchServerName) {
		return true
	}

	return false
}

// SetMatchServerName gets a reference to the given string and assigns it to the MatchServerName field.
func (o *Contract) SetMatchServerName(v string) {
	o.MatchServerName = &v
}

// GetStarkExSyntheticAssetId returns the StarkExSyntheticAssetId field value if set, zero value otherwise.
func (o *Contract) GetStarkExSyntheticAssetId() string {
	if o == nil || IsNil(o.StarkExSyntheticAssetId) {
		var ret string
		return ret
	}
	return *o.StarkExSyntheticAssetId
}

// GetStarkExSyntheticAssetIdOk returns a tuple with the StarkExSyntheticAssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetStarkExSyntheticAssetIdOk() (*string, bool) {
	if o == nil || IsNil(o.StarkExSyntheticAssetId) {
		return nil, false
	}
	return o.StarkExSyntheticAssetId, true
}

// HasStarkExSyntheticAssetId returns a boolean if a field has been set.
func (o *Contract) HasStarkExSyntheticAssetId() bool {
	if o != nil && !IsNil(o.StarkExSyntheticAssetId) {
		return true
	}

	return false
}

// SetStarkExSyntheticAssetId gets a reference to the given string and assigns it to the StarkExSyntheticAssetId field.
func (o *Contract) SetStarkExSyntheticAssetId(v string) {
	o.StarkExSyntheticAssetId = &v
}

// GetStarkExResolution returns the StarkExResolution field value if set, zero value otherwise.
func (o *Contract) GetStarkExResolution() string {
	if o == nil || IsNil(o.StarkExResolution) {
		var ret string
		return ret
	}
	return *o.StarkExResolution
}

// GetStarkExResolutionOk returns a tuple with the StarkExResolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetStarkExResolutionOk() (*string, bool) {
	if o == nil || IsNil(o.StarkExResolution) {
		return nil, false
	}
	return o.StarkExResolution, true
}

// HasStarkExResolution returns a boolean if a field has been set.
func (o *Contract) HasStarkExResolution() bool {
	if o != nil && !IsNil(o.StarkExResolution) {
		return true
	}

	return false
}

// SetStarkExResolution gets a reference to the given string and assigns it to the StarkExResolution field.
func (o *Contract) SetStarkExResolution(v string) {
	o.StarkExResolution = &v
}

// GetStarkExOraclePriceQuorum returns the StarkExOraclePriceQuorum field value if set, zero value otherwise.
func (o *Contract) GetStarkExOraclePriceQuorum() string {
	if o == nil || IsNil(o.StarkExOraclePriceQuorum) {
		var ret string
		return ret
	}
	return *o.StarkExOraclePriceQuorum
}

// GetStarkExOraclePriceQuorumOk returns a tuple with the StarkExOraclePriceQuorum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetStarkExOraclePriceQuorumOk() (*string, bool) {
	if o == nil || IsNil(o.StarkExOraclePriceQuorum) {
		return nil, false
	}
	return o.StarkExOraclePriceQuorum, true
}

// HasStarkExOraclePriceQuorum returns a boolean if a field has been set.
func (o *Contract) HasStarkExOraclePriceQuorum() bool {
	if o != nil && !IsNil(o.StarkExOraclePriceQuorum) {
		return true
	}

	return false
}

// SetStarkExOraclePriceQuorum gets a reference to the given string and assigns it to the StarkExOraclePriceQuorum field.
func (o *Contract) SetStarkExOraclePriceQuorum(v string) {
	o.StarkExOraclePriceQuorum = &v
}

// GetStarkExOraclePriceSignedAssetId returns the StarkExOraclePriceSignedAssetId field value if set, zero value otherwise.
func (o *Contract) GetStarkExOraclePriceSignedAssetId() []string {
	if o == nil || IsNil(o.StarkExOraclePriceSignedAssetId) {
		var ret []string
		return ret
	}
	return o.StarkExOraclePriceSignedAssetId
}

// GetStarkExOraclePriceSignedAssetIdOk returns a tuple with the StarkExOraclePriceSignedAssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetStarkExOraclePriceSignedAssetIdOk() ([]string, bool) {
	if o == nil || IsNil(o.StarkExOraclePriceSignedAssetId) {
		return nil, false
	}
	return o.StarkExOraclePriceSignedAssetId, true
}

// HasStarkExOraclePriceSignedAssetId returns a boolean if a field has been set.
func (o *Contract) HasStarkExOraclePriceSignedAssetId() bool {
	if o != nil && !IsNil(o.StarkExOraclePriceSignedAssetId) {
		return true
	}

	return false
}

// SetStarkExOraclePriceSignedAssetId gets a reference to the given []string and assigns it to the StarkExOraclePriceSignedAssetId field.
func (o *Contract) SetStarkExOraclePriceSignedAssetId(v []string) {
	o.StarkExOraclePriceSignedAssetId = v
}

// GetStarkExOraclePriceSigner returns the StarkExOraclePriceSigner field value if set, zero value otherwise.
func (o *Contract) GetStarkExOraclePriceSigner() []string {
	if o == nil || IsNil(o.StarkExOraclePriceSigner) {
		var ret []string
		return ret
	}
	return o.StarkExOraclePriceSigner
}

// GetStarkExOraclePriceSignerOk returns a tuple with the StarkExOraclePriceSigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetStarkExOraclePriceSignerOk() ([]string, bool) {
	if o == nil || IsNil(o.StarkExOraclePriceSigner) {
		return nil, false
	}
	return o.StarkExOraclePriceSigner, true
}

// HasStarkExOraclePriceSigner returns a boolean if a field has been set.
func (o *Contract) HasStarkExOraclePriceSigner() bool {
	if o != nil && !IsNil(o.StarkExOraclePriceSigner) {
		return true
	}

	return false
}

// SetStarkExOraclePriceSigner gets a reference to the given []string and assigns it to the StarkExOraclePriceSigner field.
func (o *Contract) SetStarkExOraclePriceSigner(v []string) {
	o.StarkExOraclePriceSigner = v
}

func (o Contract) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Contract) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContractId) {
		toSerialize["contractId"] = o.ContractId
	}
	if !IsNil(o.ContractName) {
		toSerialize["contractName"] = o.ContractName
	}
	if !IsNil(o.BaseCoinId) {
		toSerialize["baseCoinId"] = o.BaseCoinId
	}
	if !IsNil(o.QuoteCoinId) {
		toSerialize["quoteCoinId"] = o.QuoteCoinId
	}
	if !IsNil(o.TickSize) {
		toSerialize["tickSize"] = o.TickSize
	}
	if !IsNil(o.StepSize) {
		toSerialize["stepSize"] = o.StepSize
	}
	if !IsNil(o.MinOrderSize) {
		toSerialize["minOrderSize"] = o.MinOrderSize
	}
	if !IsNil(o.MaxOrderSize) {
		toSerialize["maxOrderSize"] = o.MaxOrderSize
	}
	if !IsNil(o.MaxOrderBuyPriceRatio) {
		toSerialize["maxOrderBuyPriceRatio"] = o.MaxOrderBuyPriceRatio
	}
	if !IsNil(o.MinOrderSellPriceRatio) {
		toSerialize["minOrderSellPriceRatio"] = o.MinOrderSellPriceRatio
	}
	if !IsNil(o.MaxPositionSize) {
		toSerialize["maxPositionSize"] = o.MaxPositionSize
	}
	if !IsNil(o.RiskTierList) {
		toSerialize["riskTierList"] = o.RiskTierList
	}
	if !IsNil(o.DefaultTakerFeeRate) {
		toSerialize["defaultTakerFeeRate"] = o.DefaultTakerFeeRate
	}
	if !IsNil(o.DefaultMakerFeeRate) {
		toSerialize["defaultMakerFeeRate"] = o.DefaultMakerFeeRate
	}
	if !IsNil(o.DefaultLeverage) {
		toSerialize["defaultLeverage"] = o.DefaultLeverage
	}
	if !IsNil(o.LiquidateFeeRate) {
		toSerialize["liquidateFeeRate"] = o.LiquidateFeeRate
	}
	if !IsNil(o.EnableTrade) {
		toSerialize["enableTrade"] = o.EnableTrade
	}
	if !IsNil(o.EnableDisplay) {
		toSerialize["enableDisplay"] = o.EnableDisplay
	}
	if !IsNil(o.EnableOpenPosition) {
		toSerialize["enableOpenPosition"] = o.EnableOpenPosition
	}
	if !IsNil(o.FundingInterestRate) {
		toSerialize["fundingInterestRate"] = o.FundingInterestRate
	}
	if !IsNil(o.FundingImpactMarginNotional) {
		toSerialize["fundingImpactMarginNotional"] = o.FundingImpactMarginNotional
	}
	if !IsNil(o.FundingMaxRate) {
		toSerialize["fundingMaxRate"] = o.FundingMaxRate
	}
	if !IsNil(o.FundingMinRate) {
		toSerialize["fundingMinRate"] = o.FundingMinRate
	}
	if !IsNil(o.FundingRateIntervalMin) {
		toSerialize["fundingRateIntervalMin"] = o.FundingRateIntervalMin
	}
	if !IsNil(o.DisplayDigitMerge) {
		toSerialize["displayDigitMerge"] = o.DisplayDigitMerge
	}
	if !IsNil(o.DisplayMaxLeverage) {
		toSerialize["displayMaxLeverage"] = o.DisplayMaxLeverage
	}
	if !IsNil(o.DisplayMinLeverage) {
		toSerialize["displayMinLeverage"] = o.DisplayMinLeverage
	}
	if !IsNil(o.DisplayNewIcon) {
		toSerialize["displayNewIcon"] = o.DisplayNewIcon
	}
	if !IsNil(o.DisplayHotIcon) {
		toSerialize["displayHotIcon"] = o.DisplayHotIcon
	}
	if !IsNil(o.MatchServerName) {
		toSerialize["matchServerName"] = o.MatchServerName
	}
	if !IsNil(o.StarkExSyntheticAssetId) {
		toSerialize["starkExSyntheticAssetId"] = o.StarkExSyntheticAssetId
	}
	if !IsNil(o.StarkExResolution) {
		toSerialize["starkExResolution"] = o.StarkExResolution
	}
	if !IsNil(o.StarkExOraclePriceQuorum) {
		toSerialize["starkExOraclePriceQuorum"] = o.StarkExOraclePriceQuorum
	}
	if !IsNil(o.StarkExOraclePriceSignedAssetId) {
		toSerialize["starkExOraclePriceSignedAssetId"] = o.StarkExOraclePriceSignedAssetId
	}
	if !IsNil(o.StarkExOraclePriceSigner) {
		toSerialize["starkExOraclePriceSigner"] = o.StarkExOraclePriceSigner
	}
	return toSerialize, nil
}

type NullableContract struct {
	value *Contract
	isSet bool
}

func (v NullableContract) Get() *Contract {
	return v.value
}

func (v *NullableContract) Set(val *Contract) {
	v.value = val
	v.isSet = true
}

func (v NullableContract) IsSet() bool {
	return v.isSet
}

func (v *NullableContract) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContract(val *Contract) *NullableContract {
	return &NullableContract{value: val, isSet: true}
}

func (v NullableContract) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContract) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


