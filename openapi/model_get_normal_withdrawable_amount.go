/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetNormalWithdrawableAmount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNormalWithdrawableAmount{}

// GetNormalWithdrawableAmount 根据用户地址查询普通提现claim金额-响应
type GetNormalWithdrawableAmount struct {
	// 可提现金额
	Amount *string `json:"amount,omitempty"`
}

// NewGetNormalWithdrawableAmount instantiates a new GetNormalWithdrawableAmount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNormalWithdrawableAmount() *GetNormalWithdrawableAmount {
	this := GetNormalWithdrawableAmount{}
	return &this
}

// NewGetNormalWithdrawableAmountWithDefaults instantiates a new GetNormalWithdrawableAmount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNormalWithdrawableAmountWithDefaults() *GetNormalWithdrawableAmount {
	this := GetNormalWithdrawableAmount{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *GetNormalWithdrawableAmount) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNormalWithdrawableAmount) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *GetNormalWithdrawableAmount) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *GetNormalWithdrawableAmount) SetAmount(v string) {
	o.Amount = &v
}

func (o GetNormalWithdrawableAmount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNormalWithdrawableAmount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	return toSerialize, nil
}

type NullableGetNormalWithdrawableAmount struct {
	value *GetNormalWithdrawableAmount
	isSet bool
}

func (v NullableGetNormalWithdrawableAmount) Get() *GetNormalWithdrawableAmount {
	return v.value
}

func (v *NullableGetNormalWithdrawableAmount) Set(val *GetNormalWithdrawableAmount) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNormalWithdrawableAmount) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNormalWithdrawableAmount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNormalWithdrawableAmount(val *GetNormalWithdrawableAmount) *NullableGetNormalWithdrawableAmount {
	return &NullableGetNormalWithdrawableAmount{value: val, isSet: true}
}

func (v NullableGetNormalWithdrawableAmount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNormalWithdrawableAmount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


