/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CancelOrderByClientOrderIdParam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CancelOrderByClientOrderIdParam{}

// CancelOrderByClientOrderIdParam 根据clientId取消委托单请求参数
type CancelOrderByClientOrderIdParam struct {
	// 账户id
	AccountId *string `json:"accountId,omitempty"`
	// 委托单 client order id
	ClientOrderIdList []string `json:"clientOrderIdList"`
}

type _CancelOrderByClientOrderIdParam CancelOrderByClientOrderIdParam

// NewCancelOrderByClientOrderIdParam instantiates a new CancelOrderByClientOrderIdParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancelOrderByClientOrderIdParam(clientOrderIdList []string) *CancelOrderByClientOrderIdParam {
	this := CancelOrderByClientOrderIdParam{}
	this.ClientOrderIdList = clientOrderIdList
	return &this
}

// NewCancelOrderByClientOrderIdParamWithDefaults instantiates a new CancelOrderByClientOrderIdParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancelOrderByClientOrderIdParamWithDefaults() *CancelOrderByClientOrderIdParam {
	this := CancelOrderByClientOrderIdParam{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *CancelOrderByClientOrderIdParam) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelOrderByClientOrderIdParam) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *CancelOrderByClientOrderIdParam) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *CancelOrderByClientOrderIdParam) SetAccountId(v string) {
	o.AccountId = &v
}

// GetClientOrderIdList returns the ClientOrderIdList field value
func (o *CancelOrderByClientOrderIdParam) GetClientOrderIdList() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ClientOrderIdList
}

// GetClientOrderIdListOk returns a tuple with the ClientOrderIdList field value
// and a boolean to check if the value has been set.
func (o *CancelOrderByClientOrderIdParam) GetClientOrderIdListOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientOrderIdList, true
}

// SetClientOrderIdList sets field value
func (o *CancelOrderByClientOrderIdParam) SetClientOrderIdList(v []string) {
	o.ClientOrderIdList = v
}

func (o CancelOrderByClientOrderIdParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CancelOrderByClientOrderIdParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	toSerialize["clientOrderIdList"] = o.ClientOrderIdList
	return toSerialize, nil
}

func (o *CancelOrderByClientOrderIdParam) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"clientOrderIdList",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCancelOrderByClientOrderIdParam := _CancelOrderByClientOrderIdParam{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCancelOrderByClientOrderIdParam)

	if err != nil {
		return err
	}

	*o = CancelOrderByClientOrderIdParam(varCancelOrderByClientOrderIdParam)

	return err
}

type NullableCancelOrderByClientOrderIdParam struct {
	value *CancelOrderByClientOrderIdParam
	isSet bool
}

func (v NullableCancelOrderByClientOrderIdParam) Get() *CancelOrderByClientOrderIdParam {
	return v.value
}

func (v *NullableCancelOrderByClientOrderIdParam) Set(val *CancelOrderByClientOrderIdParam) {
	v.value = val
	v.isSet = true
}

func (v NullableCancelOrderByClientOrderIdParam) IsSet() bool {
	return v.isSet
}

func (v *NullableCancelOrderByClientOrderIdParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancelOrderByClientOrderIdParam(val *CancelOrderByClientOrderIdParam) *NullableCancelOrderByClientOrderIdParam {
	return &NullableCancelOrderByClientOrderIdParam{value: val, isSet: true}
}

func (v NullableCancelOrderByClientOrderIdParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancelOrderByClientOrderIdParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


