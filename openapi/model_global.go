/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Global type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Global{}

// Global 全局元信息
type Global struct {
	// xxx
	AppName *string `json:"appName,omitempty"`
	// dev/testnet/mainnet
	AppEnv *string `json:"appEnv,omitempty"`
	// https://xxx.exchange
	AppOnlySignOn *string `json:"appOnlySignOn,omitempty"`
	// 手续费账户id
	FeeAccountId *string `json:"feeAccountId,omitempty"`
	// 手续费账户l2Key，bigint for hex str
	FeeAccountL2Key *string `json:"feeAccountL2Key,omitempty"`
	// 资产池账户id
	PoolAccountId *string `json:"poolAccountId,omitempty"`
	// 资产池账户l2Key，bigint for hex str
	PoolAccountL2Key *string `json:"poolAccountL2Key,omitempty"`
	// 快速提币账户id
	FastWithdrawAccountId *string `json:"fastWithdrawAccountId,omitempty"`
	// 快速提币账户l2Key，bigint for hex str
	FastWithdrawAccountL2Key *string `json:"fastWithdrawAccountL2Key,omitempty"`
	// 快速提币最大金额
	FastWithdrawMaxAmount *string `json:"fastWithdrawMaxAmount,omitempty"`
	// 快速提币账户地址
	FastWithdrawRegistryAddress *string `json:"fastWithdrawRegistryAddress,omitempty"`
	// starkex 所属的 chain id. bigint for hex str
	StarkExChainId *string `json:"starkExChainId,omitempty"`
	// starkex合约地址。
	StarkExContractAddress *string `json:"starkExContractAddress,omitempty"`
	StarkExCollateralCoin *Coin `json:"starkExCollateralCoin,omitempty"`
	// starkex精度处理后的每秒最大资金费率。即 stark_ex_max_funding_rate * 2^32 为实际的每秒最大资金费率。例：1120
	StarkExMaxFundingRate *int32 `json:"starkExMaxFundingRate,omitempty"`
	// 订单merkle树高度。例：64
	StarkExOrdersTreeHeight *int32 `json:"starkExOrdersTreeHeight,omitempty"`
	// 账户merkle树高度。例：64
	StarkExPositionsTreeHeight *int32 `json:"starkExPositionsTreeHeight,omitempty"`
	// 资金费率提交有效期秒数。例：86400
	StarkExFundingValidityPeriod *int32 `json:"starkExFundingValidityPeriod,omitempty"`
	// 预言机价格提交有效期秒数。例：86400
	StarkExPriceValidityPeriod *int32 `json:"starkExPriceValidityPeriod,omitempty"`
	// 维护原因，如果没维护就为空
	MaintenanceReason *string `json:"maintenanceReason,omitempty"`
}

// NewGlobal instantiates a new Global object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobal() *Global {
	this := Global{}
	return &this
}

// NewGlobalWithDefaults instantiates a new Global object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalWithDefaults() *Global {
	this := Global{}
	return &this
}

// GetAppName returns the AppName field value if set, zero value otherwise.
func (o *Global) GetAppName() string {
	if o == nil || IsNil(o.AppName) {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetAppNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppName) {
		return nil, false
	}
	return o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *Global) HasAppName() bool {
	if o != nil && !IsNil(o.AppName) {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *Global) SetAppName(v string) {
	o.AppName = &v
}

// GetAppEnv returns the AppEnv field value if set, zero value otherwise.
func (o *Global) GetAppEnv() string {
	if o == nil || IsNil(o.AppEnv) {
		var ret string
		return ret
	}
	return *o.AppEnv
}

// GetAppEnvOk returns a tuple with the AppEnv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetAppEnvOk() (*string, bool) {
	if o == nil || IsNil(o.AppEnv) {
		return nil, false
	}
	return o.AppEnv, true
}

// HasAppEnv returns a boolean if a field has been set.
func (o *Global) HasAppEnv() bool {
	if o != nil && !IsNil(o.AppEnv) {
		return true
	}

	return false
}

// SetAppEnv gets a reference to the given string and assigns it to the AppEnv field.
func (o *Global) SetAppEnv(v string) {
	o.AppEnv = &v
}

// GetAppOnlySignOn returns the AppOnlySignOn field value if set, zero value otherwise.
func (o *Global) GetAppOnlySignOn() string {
	if o == nil || IsNil(o.AppOnlySignOn) {
		var ret string
		return ret
	}
	return *o.AppOnlySignOn
}

// GetAppOnlySignOnOk returns a tuple with the AppOnlySignOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetAppOnlySignOnOk() (*string, bool) {
	if o == nil || IsNil(o.AppOnlySignOn) {
		return nil, false
	}
	return o.AppOnlySignOn, true
}

// HasAppOnlySignOn returns a boolean if a field has been set.
func (o *Global) HasAppOnlySignOn() bool {
	if o != nil && !IsNil(o.AppOnlySignOn) {
		return true
	}

	return false
}

// SetAppOnlySignOn gets a reference to the given string and assigns it to the AppOnlySignOn field.
func (o *Global) SetAppOnlySignOn(v string) {
	o.AppOnlySignOn = &v
}

// GetFeeAccountId returns the FeeAccountId field value if set, zero value otherwise.
func (o *Global) GetFeeAccountId() string {
	if o == nil || IsNil(o.FeeAccountId) {
		var ret string
		return ret
	}
	return *o.FeeAccountId
}

// GetFeeAccountIdOk returns a tuple with the FeeAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetFeeAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.FeeAccountId) {
		return nil, false
	}
	return o.FeeAccountId, true
}

// HasFeeAccountId returns a boolean if a field has been set.
func (o *Global) HasFeeAccountId() bool {
	if o != nil && !IsNil(o.FeeAccountId) {
		return true
	}

	return false
}

// SetFeeAccountId gets a reference to the given string and assigns it to the FeeAccountId field.
func (o *Global) SetFeeAccountId(v string) {
	o.FeeAccountId = &v
}

// GetFeeAccountL2Key returns the FeeAccountL2Key field value if set, zero value otherwise.
func (o *Global) GetFeeAccountL2Key() string {
	if o == nil || IsNil(o.FeeAccountL2Key) {
		var ret string
		return ret
	}
	return *o.FeeAccountL2Key
}

// GetFeeAccountL2KeyOk returns a tuple with the FeeAccountL2Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetFeeAccountL2KeyOk() (*string, bool) {
	if o == nil || IsNil(o.FeeAccountL2Key) {
		return nil, false
	}
	return o.FeeAccountL2Key, true
}

// HasFeeAccountL2Key returns a boolean if a field has been set.
func (o *Global) HasFeeAccountL2Key() bool {
	if o != nil && !IsNil(o.FeeAccountL2Key) {
		return true
	}

	return false
}

// SetFeeAccountL2Key gets a reference to the given string and assigns it to the FeeAccountL2Key field.
func (o *Global) SetFeeAccountL2Key(v string) {
	o.FeeAccountL2Key = &v
}

// GetPoolAccountId returns the PoolAccountId field value if set, zero value otherwise.
func (o *Global) GetPoolAccountId() string {
	if o == nil || IsNil(o.PoolAccountId) {
		var ret string
		return ret
	}
	return *o.PoolAccountId
}

// GetPoolAccountIdOk returns a tuple with the PoolAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetPoolAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.PoolAccountId) {
		return nil, false
	}
	return o.PoolAccountId, true
}

// HasPoolAccountId returns a boolean if a field has been set.
func (o *Global) HasPoolAccountId() bool {
	if o != nil && !IsNil(o.PoolAccountId) {
		return true
	}

	return false
}

// SetPoolAccountId gets a reference to the given string and assigns it to the PoolAccountId field.
func (o *Global) SetPoolAccountId(v string) {
	o.PoolAccountId = &v
}

// GetPoolAccountL2Key returns the PoolAccountL2Key field value if set, zero value otherwise.
func (o *Global) GetPoolAccountL2Key() string {
	if o == nil || IsNil(o.PoolAccountL2Key) {
		var ret string
		return ret
	}
	return *o.PoolAccountL2Key
}

// GetPoolAccountL2KeyOk returns a tuple with the PoolAccountL2Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetPoolAccountL2KeyOk() (*string, bool) {
	if o == nil || IsNil(o.PoolAccountL2Key) {
		return nil, false
	}
	return o.PoolAccountL2Key, true
}

// HasPoolAccountL2Key returns a boolean if a field has been set.
func (o *Global) HasPoolAccountL2Key() bool {
	if o != nil && !IsNil(o.PoolAccountL2Key) {
		return true
	}

	return false
}

// SetPoolAccountL2Key gets a reference to the given string and assigns it to the PoolAccountL2Key field.
func (o *Global) SetPoolAccountL2Key(v string) {
	o.PoolAccountL2Key = &v
}

// GetFastWithdrawAccountId returns the FastWithdrawAccountId field value if set, zero value otherwise.
func (o *Global) GetFastWithdrawAccountId() string {
	if o == nil || IsNil(o.FastWithdrawAccountId) {
		var ret string
		return ret
	}
	return *o.FastWithdrawAccountId
}

// GetFastWithdrawAccountIdOk returns a tuple with the FastWithdrawAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetFastWithdrawAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.FastWithdrawAccountId) {
		return nil, false
	}
	return o.FastWithdrawAccountId, true
}

// HasFastWithdrawAccountId returns a boolean if a field has been set.
func (o *Global) HasFastWithdrawAccountId() bool {
	if o != nil && !IsNil(o.FastWithdrawAccountId) {
		return true
	}

	return false
}

// SetFastWithdrawAccountId gets a reference to the given string and assigns it to the FastWithdrawAccountId field.
func (o *Global) SetFastWithdrawAccountId(v string) {
	o.FastWithdrawAccountId = &v
}

// GetFastWithdrawAccountL2Key returns the FastWithdrawAccountL2Key field value if set, zero value otherwise.
func (o *Global) GetFastWithdrawAccountL2Key() string {
	if o == nil || IsNil(o.FastWithdrawAccountL2Key) {
		var ret string
		return ret
	}
	return *o.FastWithdrawAccountL2Key
}

// GetFastWithdrawAccountL2KeyOk returns a tuple with the FastWithdrawAccountL2Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetFastWithdrawAccountL2KeyOk() (*string, bool) {
	if o == nil || IsNil(o.FastWithdrawAccountL2Key) {
		return nil, false
	}
	return o.FastWithdrawAccountL2Key, true
}

// HasFastWithdrawAccountL2Key returns a boolean if a field has been set.
func (o *Global) HasFastWithdrawAccountL2Key() bool {
	if o != nil && !IsNil(o.FastWithdrawAccountL2Key) {
		return true
	}

	return false
}

// SetFastWithdrawAccountL2Key gets a reference to the given string and assigns it to the FastWithdrawAccountL2Key field.
func (o *Global) SetFastWithdrawAccountL2Key(v string) {
	o.FastWithdrawAccountL2Key = &v
}

// GetFastWithdrawMaxAmount returns the FastWithdrawMaxAmount field value if set, zero value otherwise.
func (o *Global) GetFastWithdrawMaxAmount() string {
	if o == nil || IsNil(o.FastWithdrawMaxAmount) {
		var ret string
		return ret
	}
	return *o.FastWithdrawMaxAmount
}

// GetFastWithdrawMaxAmountOk returns a tuple with the FastWithdrawMaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetFastWithdrawMaxAmountOk() (*string, bool) {
	if o == nil || IsNil(o.FastWithdrawMaxAmount) {
		return nil, false
	}
	return o.FastWithdrawMaxAmount, true
}

// HasFastWithdrawMaxAmount returns a boolean if a field has been set.
func (o *Global) HasFastWithdrawMaxAmount() bool {
	if o != nil && !IsNil(o.FastWithdrawMaxAmount) {
		return true
	}

	return false
}

// SetFastWithdrawMaxAmount gets a reference to the given string and assigns it to the FastWithdrawMaxAmount field.
func (o *Global) SetFastWithdrawMaxAmount(v string) {
	o.FastWithdrawMaxAmount = &v
}

// GetFastWithdrawRegistryAddress returns the FastWithdrawRegistryAddress field value if set, zero value otherwise.
func (o *Global) GetFastWithdrawRegistryAddress() string {
	if o == nil || IsNil(o.FastWithdrawRegistryAddress) {
		var ret string
		return ret
	}
	return *o.FastWithdrawRegistryAddress
}

// GetFastWithdrawRegistryAddressOk returns a tuple with the FastWithdrawRegistryAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetFastWithdrawRegistryAddressOk() (*string, bool) {
	if o == nil || IsNil(o.FastWithdrawRegistryAddress) {
		return nil, false
	}
	return o.FastWithdrawRegistryAddress, true
}

// HasFastWithdrawRegistryAddress returns a boolean if a field has been set.
func (o *Global) HasFastWithdrawRegistryAddress() bool {
	if o != nil && !IsNil(o.FastWithdrawRegistryAddress) {
		return true
	}

	return false
}

// SetFastWithdrawRegistryAddress gets a reference to the given string and assigns it to the FastWithdrawRegistryAddress field.
func (o *Global) SetFastWithdrawRegistryAddress(v string) {
	o.FastWithdrawRegistryAddress = &v
}

// GetStarkExChainId returns the StarkExChainId field value if set, zero value otherwise.
func (o *Global) GetStarkExChainId() string {
	if o == nil || IsNil(o.StarkExChainId) {
		var ret string
		return ret
	}
	return *o.StarkExChainId
}

// GetStarkExChainIdOk returns a tuple with the StarkExChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetStarkExChainIdOk() (*string, bool) {
	if o == nil || IsNil(o.StarkExChainId) {
		return nil, false
	}
	return o.StarkExChainId, true
}

// HasStarkExChainId returns a boolean if a field has been set.
func (o *Global) HasStarkExChainId() bool {
	if o != nil && !IsNil(o.StarkExChainId) {
		return true
	}

	return false
}

// SetStarkExChainId gets a reference to the given string and assigns it to the StarkExChainId field.
func (o *Global) SetStarkExChainId(v string) {
	o.StarkExChainId = &v
}

// GetStarkExContractAddress returns the StarkExContractAddress field value if set, zero value otherwise.
func (o *Global) GetStarkExContractAddress() string {
	if o == nil || IsNil(o.StarkExContractAddress) {
		var ret string
		return ret
	}
	return *o.StarkExContractAddress
}

// GetStarkExContractAddressOk returns a tuple with the StarkExContractAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetStarkExContractAddressOk() (*string, bool) {
	if o == nil || IsNil(o.StarkExContractAddress) {
		return nil, false
	}
	return o.StarkExContractAddress, true
}

// HasStarkExContractAddress returns a boolean if a field has been set.
func (o *Global) HasStarkExContractAddress() bool {
	if o != nil && !IsNil(o.StarkExContractAddress) {
		return true
	}

	return false
}

// SetStarkExContractAddress gets a reference to the given string and assigns it to the StarkExContractAddress field.
func (o *Global) SetStarkExContractAddress(v string) {
	o.StarkExContractAddress = &v
}

// GetStarkExCollateralCoin returns the StarkExCollateralCoin field value if set, zero value otherwise.
func (o *Global) GetStarkExCollateralCoin() Coin {
	if o == nil || IsNil(o.StarkExCollateralCoin) {
		var ret Coin
		return ret
	}
	return *o.StarkExCollateralCoin
}

// GetStarkExCollateralCoinOk returns a tuple with the StarkExCollateralCoin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetStarkExCollateralCoinOk() (*Coin, bool) {
	if o == nil || IsNil(o.StarkExCollateralCoin) {
		return nil, false
	}
	return o.StarkExCollateralCoin, true
}

// HasStarkExCollateralCoin returns a boolean if a field has been set.
func (o *Global) HasStarkExCollateralCoin() bool {
	if o != nil && !IsNil(o.StarkExCollateralCoin) {
		return true
	}

	return false
}

// SetStarkExCollateralCoin gets a reference to the given Coin and assigns it to the StarkExCollateralCoin field.
func (o *Global) SetStarkExCollateralCoin(v Coin) {
	o.StarkExCollateralCoin = &v
}

// GetStarkExMaxFundingRate returns the StarkExMaxFundingRate field value if set, zero value otherwise.
func (o *Global) GetStarkExMaxFundingRate() int32 {
	if o == nil || IsNil(o.StarkExMaxFundingRate) {
		var ret int32
		return ret
	}
	return *o.StarkExMaxFundingRate
}

// GetStarkExMaxFundingRateOk returns a tuple with the StarkExMaxFundingRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetStarkExMaxFundingRateOk() (*int32, bool) {
	if o == nil || IsNil(o.StarkExMaxFundingRate) {
		return nil, false
	}
	return o.StarkExMaxFundingRate, true
}

// HasStarkExMaxFundingRate returns a boolean if a field has been set.
func (o *Global) HasStarkExMaxFundingRate() bool {
	if o != nil && !IsNil(o.StarkExMaxFundingRate) {
		return true
	}

	return false
}

// SetStarkExMaxFundingRate gets a reference to the given int32 and assigns it to the StarkExMaxFundingRate field.
func (o *Global) SetStarkExMaxFundingRate(v int32) {
	o.StarkExMaxFundingRate = &v
}

// GetStarkExOrdersTreeHeight returns the StarkExOrdersTreeHeight field value if set, zero value otherwise.
func (o *Global) GetStarkExOrdersTreeHeight() int32 {
	if o == nil || IsNil(o.StarkExOrdersTreeHeight) {
		var ret int32
		return ret
	}
	return *o.StarkExOrdersTreeHeight
}

// GetStarkExOrdersTreeHeightOk returns a tuple with the StarkExOrdersTreeHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetStarkExOrdersTreeHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.StarkExOrdersTreeHeight) {
		return nil, false
	}
	return o.StarkExOrdersTreeHeight, true
}

// HasStarkExOrdersTreeHeight returns a boolean if a field has been set.
func (o *Global) HasStarkExOrdersTreeHeight() bool {
	if o != nil && !IsNil(o.StarkExOrdersTreeHeight) {
		return true
	}

	return false
}

// SetStarkExOrdersTreeHeight gets a reference to the given int32 and assigns it to the StarkExOrdersTreeHeight field.
func (o *Global) SetStarkExOrdersTreeHeight(v int32) {
	o.StarkExOrdersTreeHeight = &v
}

// GetStarkExPositionsTreeHeight returns the StarkExPositionsTreeHeight field value if set, zero value otherwise.
func (o *Global) GetStarkExPositionsTreeHeight() int32 {
	if o == nil || IsNil(o.StarkExPositionsTreeHeight) {
		var ret int32
		return ret
	}
	return *o.StarkExPositionsTreeHeight
}

// GetStarkExPositionsTreeHeightOk returns a tuple with the StarkExPositionsTreeHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetStarkExPositionsTreeHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.StarkExPositionsTreeHeight) {
		return nil, false
	}
	return o.StarkExPositionsTreeHeight, true
}

// HasStarkExPositionsTreeHeight returns a boolean if a field has been set.
func (o *Global) HasStarkExPositionsTreeHeight() bool {
	if o != nil && !IsNil(o.StarkExPositionsTreeHeight) {
		return true
	}

	return false
}

// SetStarkExPositionsTreeHeight gets a reference to the given int32 and assigns it to the StarkExPositionsTreeHeight field.
func (o *Global) SetStarkExPositionsTreeHeight(v int32) {
	o.StarkExPositionsTreeHeight = &v
}

// GetStarkExFundingValidityPeriod returns the StarkExFundingValidityPeriod field value if set, zero value otherwise.
func (o *Global) GetStarkExFundingValidityPeriod() int32 {
	if o == nil || IsNil(o.StarkExFundingValidityPeriod) {
		var ret int32
		return ret
	}
	return *o.StarkExFundingValidityPeriod
}

// GetStarkExFundingValidityPeriodOk returns a tuple with the StarkExFundingValidityPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetStarkExFundingValidityPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.StarkExFundingValidityPeriod) {
		return nil, false
	}
	return o.StarkExFundingValidityPeriod, true
}

// HasStarkExFundingValidityPeriod returns a boolean if a field has been set.
func (o *Global) HasStarkExFundingValidityPeriod() bool {
	if o != nil && !IsNil(o.StarkExFundingValidityPeriod) {
		return true
	}

	return false
}

// SetStarkExFundingValidityPeriod gets a reference to the given int32 and assigns it to the StarkExFundingValidityPeriod field.
func (o *Global) SetStarkExFundingValidityPeriod(v int32) {
	o.StarkExFundingValidityPeriod = &v
}

// GetStarkExPriceValidityPeriod returns the StarkExPriceValidityPeriod field value if set, zero value otherwise.
func (o *Global) GetStarkExPriceValidityPeriod() int32 {
	if o == nil || IsNil(o.StarkExPriceValidityPeriod) {
		var ret int32
		return ret
	}
	return *o.StarkExPriceValidityPeriod
}

// GetStarkExPriceValidityPeriodOk returns a tuple with the StarkExPriceValidityPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetStarkExPriceValidityPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.StarkExPriceValidityPeriod) {
		return nil, false
	}
	return o.StarkExPriceValidityPeriod, true
}

// HasStarkExPriceValidityPeriod returns a boolean if a field has been set.
func (o *Global) HasStarkExPriceValidityPeriod() bool {
	if o != nil && !IsNil(o.StarkExPriceValidityPeriod) {
		return true
	}

	return false
}

// SetStarkExPriceValidityPeriod gets a reference to the given int32 and assigns it to the StarkExPriceValidityPeriod field.
func (o *Global) SetStarkExPriceValidityPeriod(v int32) {
	o.StarkExPriceValidityPeriod = &v
}

// GetMaintenanceReason returns the MaintenanceReason field value if set, zero value otherwise.
func (o *Global) GetMaintenanceReason() string {
	if o == nil || IsNil(o.MaintenanceReason) {
		var ret string
		return ret
	}
	return *o.MaintenanceReason
}

// GetMaintenanceReasonOk returns a tuple with the MaintenanceReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetMaintenanceReasonOk() (*string, bool) {
	if o == nil || IsNil(o.MaintenanceReason) {
		return nil, false
	}
	return o.MaintenanceReason, true
}

// HasMaintenanceReason returns a boolean if a field has been set.
func (o *Global) HasMaintenanceReason() bool {
	if o != nil && !IsNil(o.MaintenanceReason) {
		return true
	}

	return false
}

// SetMaintenanceReason gets a reference to the given string and assigns it to the MaintenanceReason field.
func (o *Global) SetMaintenanceReason(v string) {
	o.MaintenanceReason = &v
}

func (o Global) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Global) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppName) {
		toSerialize["appName"] = o.AppName
	}
	if !IsNil(o.AppEnv) {
		toSerialize["appEnv"] = o.AppEnv
	}
	if !IsNil(o.AppOnlySignOn) {
		toSerialize["appOnlySignOn"] = o.AppOnlySignOn
	}
	if !IsNil(o.FeeAccountId) {
		toSerialize["feeAccountId"] = o.FeeAccountId
	}
	if !IsNil(o.FeeAccountL2Key) {
		toSerialize["feeAccountL2Key"] = o.FeeAccountL2Key
	}
	if !IsNil(o.PoolAccountId) {
		toSerialize["poolAccountId"] = o.PoolAccountId
	}
	if !IsNil(o.PoolAccountL2Key) {
		toSerialize["poolAccountL2Key"] = o.PoolAccountL2Key
	}
	if !IsNil(o.FastWithdrawAccountId) {
		toSerialize["fastWithdrawAccountId"] = o.FastWithdrawAccountId
	}
	if !IsNil(o.FastWithdrawAccountL2Key) {
		toSerialize["fastWithdrawAccountL2Key"] = o.FastWithdrawAccountL2Key
	}
	if !IsNil(o.FastWithdrawMaxAmount) {
		toSerialize["fastWithdrawMaxAmount"] = o.FastWithdrawMaxAmount
	}
	if !IsNil(o.FastWithdrawRegistryAddress) {
		toSerialize["fastWithdrawRegistryAddress"] = o.FastWithdrawRegistryAddress
	}
	if !IsNil(o.StarkExChainId) {
		toSerialize["starkExChainId"] = o.StarkExChainId
	}
	if !IsNil(o.StarkExContractAddress) {
		toSerialize["starkExContractAddress"] = o.StarkExContractAddress
	}
	if !IsNil(o.StarkExCollateralCoin) {
		toSerialize["starkExCollateralCoin"] = o.StarkExCollateralCoin
	}
	if !IsNil(o.StarkExMaxFundingRate) {
		toSerialize["starkExMaxFundingRate"] = o.StarkExMaxFundingRate
	}
	if !IsNil(o.StarkExOrdersTreeHeight) {
		toSerialize["starkExOrdersTreeHeight"] = o.StarkExOrdersTreeHeight
	}
	if !IsNil(o.StarkExPositionsTreeHeight) {
		toSerialize["starkExPositionsTreeHeight"] = o.StarkExPositionsTreeHeight
	}
	if !IsNil(o.StarkExFundingValidityPeriod) {
		toSerialize["starkExFundingValidityPeriod"] = o.StarkExFundingValidityPeriod
	}
	if !IsNil(o.StarkExPriceValidityPeriod) {
		toSerialize["starkExPriceValidityPeriod"] = o.StarkExPriceValidityPeriod
	}
	if !IsNil(o.MaintenanceReason) {
		toSerialize["maintenanceReason"] = o.MaintenanceReason
	}
	return toSerialize, nil
}

type NullableGlobal struct {
	value *Global
	isSet bool
}

func (v NullableGlobal) Get() *Global {
	return v.value
}

func (v *NullableGlobal) Set(val *Global) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobal) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobal(val *Global) *NullableGlobal {
	return &NullableGlobal{value: val, isSet: true}
}

func (v NullableGlobal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


