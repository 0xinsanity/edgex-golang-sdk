/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SiteMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SiteMessage{}

// SiteMessage 站内信详情
type SiteMessage struct {
	// 站内信Id
	Id *string `json:"id,omitempty"`
	// 用户Id
	UserId *string `json:"userId,omitempty"`
	// 站内信消息业务类型(小类)
	BusinessType *string `json:"businessType,omitempty"`
	// 站内信消息类型(大类)
	NotifyCategory *int32 `json:"notifyCategory,omitempty"`
	// 站内信标题
	Title *string `json:"title,omitempty"`
	// 站内信内容
	Content *string `json:"content,omitempty"`
	// Web跳转链接
	WebJumpUrl *string `json:"webJumpUrl,omitempty"`
	// Android跳转链接
	AndroidJumpUrl *string `json:"androidJumpUrl,omitempty"`
	// iOS跳转链接
	IosJumpUrl *string `json:"iosJumpUrl,omitempty"`
	// 是否已读
	IsRead *bool `json:"isRead,omitempty"`
	// 创建时间
	CreatedTime *string `json:"createdTime,omitempty"`
	// 更新时间
	UpdatedTime *string `json:"updatedTime,omitempty"`
}

// NewSiteMessage instantiates a new SiteMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSiteMessage() *SiteMessage {
	this := SiteMessage{}
	return &this
}

// NewSiteMessageWithDefaults instantiates a new SiteMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSiteMessageWithDefaults() *SiteMessage {
	this := SiteMessage{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SiteMessage) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteMessage) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SiteMessage) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SiteMessage) SetId(v string) {
	o.Id = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *SiteMessage) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteMessage) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *SiteMessage) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *SiteMessage) SetUserId(v string) {
	o.UserId = &v
}

// GetBusinessType returns the BusinessType field value if set, zero value otherwise.
func (o *SiteMessage) GetBusinessType() string {
	if o == nil || IsNil(o.BusinessType) {
		var ret string
		return ret
	}
	return *o.BusinessType
}

// GetBusinessTypeOk returns a tuple with the BusinessType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteMessage) GetBusinessTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessType) {
		return nil, false
	}
	return o.BusinessType, true
}

// HasBusinessType returns a boolean if a field has been set.
func (o *SiteMessage) HasBusinessType() bool {
	if o != nil && !IsNil(o.BusinessType) {
		return true
	}

	return false
}

// SetBusinessType gets a reference to the given string and assigns it to the BusinessType field.
func (o *SiteMessage) SetBusinessType(v string) {
	o.BusinessType = &v
}

// GetNotifyCategory returns the NotifyCategory field value if set, zero value otherwise.
func (o *SiteMessage) GetNotifyCategory() int32 {
	if o == nil || IsNil(o.NotifyCategory) {
		var ret int32
		return ret
	}
	return *o.NotifyCategory
}

// GetNotifyCategoryOk returns a tuple with the NotifyCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteMessage) GetNotifyCategoryOk() (*int32, bool) {
	if o == nil || IsNil(o.NotifyCategory) {
		return nil, false
	}
	return o.NotifyCategory, true
}

// HasNotifyCategory returns a boolean if a field has been set.
func (o *SiteMessage) HasNotifyCategory() bool {
	if o != nil && !IsNil(o.NotifyCategory) {
		return true
	}

	return false
}

// SetNotifyCategory gets a reference to the given int32 and assigns it to the NotifyCategory field.
func (o *SiteMessage) SetNotifyCategory(v int32) {
	o.NotifyCategory = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *SiteMessage) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteMessage) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *SiteMessage) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *SiteMessage) SetTitle(v string) {
	o.Title = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *SiteMessage) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteMessage) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *SiteMessage) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *SiteMessage) SetContent(v string) {
	o.Content = &v
}

// GetWebJumpUrl returns the WebJumpUrl field value if set, zero value otherwise.
func (o *SiteMessage) GetWebJumpUrl() string {
	if o == nil || IsNil(o.WebJumpUrl) {
		var ret string
		return ret
	}
	return *o.WebJumpUrl
}

// GetWebJumpUrlOk returns a tuple with the WebJumpUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteMessage) GetWebJumpUrlOk() (*string, bool) {
	if o == nil || IsNil(o.WebJumpUrl) {
		return nil, false
	}
	return o.WebJumpUrl, true
}

// HasWebJumpUrl returns a boolean if a field has been set.
func (o *SiteMessage) HasWebJumpUrl() bool {
	if o != nil && !IsNil(o.WebJumpUrl) {
		return true
	}

	return false
}

// SetWebJumpUrl gets a reference to the given string and assigns it to the WebJumpUrl field.
func (o *SiteMessage) SetWebJumpUrl(v string) {
	o.WebJumpUrl = &v
}

// GetAndroidJumpUrl returns the AndroidJumpUrl field value if set, zero value otherwise.
func (o *SiteMessage) GetAndroidJumpUrl() string {
	if o == nil || IsNil(o.AndroidJumpUrl) {
		var ret string
		return ret
	}
	return *o.AndroidJumpUrl
}

// GetAndroidJumpUrlOk returns a tuple with the AndroidJumpUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteMessage) GetAndroidJumpUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AndroidJumpUrl) {
		return nil, false
	}
	return o.AndroidJumpUrl, true
}

// HasAndroidJumpUrl returns a boolean if a field has been set.
func (o *SiteMessage) HasAndroidJumpUrl() bool {
	if o != nil && !IsNil(o.AndroidJumpUrl) {
		return true
	}

	return false
}

// SetAndroidJumpUrl gets a reference to the given string and assigns it to the AndroidJumpUrl field.
func (o *SiteMessage) SetAndroidJumpUrl(v string) {
	o.AndroidJumpUrl = &v
}

// GetIosJumpUrl returns the IosJumpUrl field value if set, zero value otherwise.
func (o *SiteMessage) GetIosJumpUrl() string {
	if o == nil || IsNil(o.IosJumpUrl) {
		var ret string
		return ret
	}
	return *o.IosJumpUrl
}

// GetIosJumpUrlOk returns a tuple with the IosJumpUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteMessage) GetIosJumpUrlOk() (*string, bool) {
	if o == nil || IsNil(o.IosJumpUrl) {
		return nil, false
	}
	return o.IosJumpUrl, true
}

// HasIosJumpUrl returns a boolean if a field has been set.
func (o *SiteMessage) HasIosJumpUrl() bool {
	if o != nil && !IsNil(o.IosJumpUrl) {
		return true
	}

	return false
}

// SetIosJumpUrl gets a reference to the given string and assigns it to the IosJumpUrl field.
func (o *SiteMessage) SetIosJumpUrl(v string) {
	o.IosJumpUrl = &v
}

// GetIsRead returns the IsRead field value if set, zero value otherwise.
func (o *SiteMessage) GetIsRead() bool {
	if o == nil || IsNil(o.IsRead) {
		var ret bool
		return ret
	}
	return *o.IsRead
}

// GetIsReadOk returns a tuple with the IsRead field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteMessage) GetIsReadOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRead) {
		return nil, false
	}
	return o.IsRead, true
}

// HasIsRead returns a boolean if a field has been set.
func (o *SiteMessage) HasIsRead() bool {
	if o != nil && !IsNil(o.IsRead) {
		return true
	}

	return false
}

// SetIsRead gets a reference to the given bool and assigns it to the IsRead field.
func (o *SiteMessage) SetIsRead(v bool) {
	o.IsRead = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *SiteMessage) GetCreatedTime() string {
	if o == nil || IsNil(o.CreatedTime) {
		var ret string
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteMessage) GetCreatedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *SiteMessage) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given string and assigns it to the CreatedTime field.
func (o *SiteMessage) SetCreatedTime(v string) {
	o.CreatedTime = &v
}

// GetUpdatedTime returns the UpdatedTime field value if set, zero value otherwise.
func (o *SiteMessage) GetUpdatedTime() string {
	if o == nil || IsNil(o.UpdatedTime) {
		var ret string
		return ret
	}
	return *o.UpdatedTime
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteMessage) GetUpdatedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedTime) {
		return nil, false
	}
	return o.UpdatedTime, true
}

// HasUpdatedTime returns a boolean if a field has been set.
func (o *SiteMessage) HasUpdatedTime() bool {
	if o != nil && !IsNil(o.UpdatedTime) {
		return true
	}

	return false
}

// SetUpdatedTime gets a reference to the given string and assigns it to the UpdatedTime field.
func (o *SiteMessage) SetUpdatedTime(v string) {
	o.UpdatedTime = &v
}

func (o SiteMessage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SiteMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.BusinessType) {
		toSerialize["businessType"] = o.BusinessType
	}
	if !IsNil(o.NotifyCategory) {
		toSerialize["notifyCategory"] = o.NotifyCategory
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.WebJumpUrl) {
		toSerialize["webJumpUrl"] = o.WebJumpUrl
	}
	if !IsNil(o.AndroidJumpUrl) {
		toSerialize["androidJumpUrl"] = o.AndroidJumpUrl
	}
	if !IsNil(o.IosJumpUrl) {
		toSerialize["iosJumpUrl"] = o.IosJumpUrl
	}
	if !IsNil(o.IsRead) {
		toSerialize["isRead"] = o.IsRead
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["createdTime"] = o.CreatedTime
	}
	if !IsNil(o.UpdatedTime) {
		toSerialize["updatedTime"] = o.UpdatedTime
	}
	return toSerialize, nil
}

type NullableSiteMessage struct {
	value *SiteMessage
	isSet bool
}

func (v NullableSiteMessage) Get() *SiteMessage {
	return v.value
}

func (v *NullableSiteMessage) Set(val *SiteMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableSiteMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableSiteMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSiteMessage(val *SiteMessage) *NullableSiteMessage {
	return &NullableSiteMessage{value: val, isSet: true}
}

func (v NullableSiteMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSiteMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


