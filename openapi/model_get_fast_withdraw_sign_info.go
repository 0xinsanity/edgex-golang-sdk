/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetFastWithdrawSignInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetFastWithdrawSignInfo{}

// GetFastWithdrawSignInfo 查询快速提现签名需要的信息-响应
type GetFastWithdrawSignInfo struct {
	// l2接收用户转账的lp账户id
	LpAccountId *string `json:"lpAccountId,omitempty"`
	// 快速提现账户l2Key
	FastWithdrawL2Key *string `json:"fastWithdrawL2Key,omitempty"`
	// L1 Fact合约地址
	FastWithdrawFactRegisterAddress *string `json:"fastWithdrawFactRegisterAddress,omitempty"`
	// 快速提现最大额度
	FastWithdrawMaxAmount *string `json:"fastWithdrawMaxAmount,omitempty"`
	// 快速提现手续费
	Fee *string `json:"fee,omitempty"`
}

// NewGetFastWithdrawSignInfo instantiates a new GetFastWithdrawSignInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetFastWithdrawSignInfo() *GetFastWithdrawSignInfo {
	this := GetFastWithdrawSignInfo{}
	return &this
}

// NewGetFastWithdrawSignInfoWithDefaults instantiates a new GetFastWithdrawSignInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetFastWithdrawSignInfoWithDefaults() *GetFastWithdrawSignInfo {
	this := GetFastWithdrawSignInfo{}
	return &this
}

// GetLpAccountId returns the LpAccountId field value if set, zero value otherwise.
func (o *GetFastWithdrawSignInfo) GetLpAccountId() string {
	if o == nil || IsNil(o.LpAccountId) {
		var ret string
		return ret
	}
	return *o.LpAccountId
}

// GetLpAccountIdOk returns a tuple with the LpAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFastWithdrawSignInfo) GetLpAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.LpAccountId) {
		return nil, false
	}
	return o.LpAccountId, true
}

// HasLpAccountId returns a boolean if a field has been set.
func (o *GetFastWithdrawSignInfo) HasLpAccountId() bool {
	if o != nil && !IsNil(o.LpAccountId) {
		return true
	}

	return false
}

// SetLpAccountId gets a reference to the given string and assigns it to the LpAccountId field.
func (o *GetFastWithdrawSignInfo) SetLpAccountId(v string) {
	o.LpAccountId = &v
}

// GetFastWithdrawL2Key returns the FastWithdrawL2Key field value if set, zero value otherwise.
func (o *GetFastWithdrawSignInfo) GetFastWithdrawL2Key() string {
	if o == nil || IsNil(o.FastWithdrawL2Key) {
		var ret string
		return ret
	}
	return *o.FastWithdrawL2Key
}

// GetFastWithdrawL2KeyOk returns a tuple with the FastWithdrawL2Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFastWithdrawSignInfo) GetFastWithdrawL2KeyOk() (*string, bool) {
	if o == nil || IsNil(o.FastWithdrawL2Key) {
		return nil, false
	}
	return o.FastWithdrawL2Key, true
}

// HasFastWithdrawL2Key returns a boolean if a field has been set.
func (o *GetFastWithdrawSignInfo) HasFastWithdrawL2Key() bool {
	if o != nil && !IsNil(o.FastWithdrawL2Key) {
		return true
	}

	return false
}

// SetFastWithdrawL2Key gets a reference to the given string and assigns it to the FastWithdrawL2Key field.
func (o *GetFastWithdrawSignInfo) SetFastWithdrawL2Key(v string) {
	o.FastWithdrawL2Key = &v
}

// GetFastWithdrawFactRegisterAddress returns the FastWithdrawFactRegisterAddress field value if set, zero value otherwise.
func (o *GetFastWithdrawSignInfo) GetFastWithdrawFactRegisterAddress() string {
	if o == nil || IsNil(o.FastWithdrawFactRegisterAddress) {
		var ret string
		return ret
	}
	return *o.FastWithdrawFactRegisterAddress
}

// GetFastWithdrawFactRegisterAddressOk returns a tuple with the FastWithdrawFactRegisterAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFastWithdrawSignInfo) GetFastWithdrawFactRegisterAddressOk() (*string, bool) {
	if o == nil || IsNil(o.FastWithdrawFactRegisterAddress) {
		return nil, false
	}
	return o.FastWithdrawFactRegisterAddress, true
}

// HasFastWithdrawFactRegisterAddress returns a boolean if a field has been set.
func (o *GetFastWithdrawSignInfo) HasFastWithdrawFactRegisterAddress() bool {
	if o != nil && !IsNil(o.FastWithdrawFactRegisterAddress) {
		return true
	}

	return false
}

// SetFastWithdrawFactRegisterAddress gets a reference to the given string and assigns it to the FastWithdrawFactRegisterAddress field.
func (o *GetFastWithdrawSignInfo) SetFastWithdrawFactRegisterAddress(v string) {
	o.FastWithdrawFactRegisterAddress = &v
}

// GetFastWithdrawMaxAmount returns the FastWithdrawMaxAmount field value if set, zero value otherwise.
func (o *GetFastWithdrawSignInfo) GetFastWithdrawMaxAmount() string {
	if o == nil || IsNil(o.FastWithdrawMaxAmount) {
		var ret string
		return ret
	}
	return *o.FastWithdrawMaxAmount
}

// GetFastWithdrawMaxAmountOk returns a tuple with the FastWithdrawMaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFastWithdrawSignInfo) GetFastWithdrawMaxAmountOk() (*string, bool) {
	if o == nil || IsNil(o.FastWithdrawMaxAmount) {
		return nil, false
	}
	return o.FastWithdrawMaxAmount, true
}

// HasFastWithdrawMaxAmount returns a boolean if a field has been set.
func (o *GetFastWithdrawSignInfo) HasFastWithdrawMaxAmount() bool {
	if o != nil && !IsNil(o.FastWithdrawMaxAmount) {
		return true
	}

	return false
}

// SetFastWithdrawMaxAmount gets a reference to the given string and assigns it to the FastWithdrawMaxAmount field.
func (o *GetFastWithdrawSignInfo) SetFastWithdrawMaxAmount(v string) {
	o.FastWithdrawMaxAmount = &v
}

// GetFee returns the Fee field value if set, zero value otherwise.
func (o *GetFastWithdrawSignInfo) GetFee() string {
	if o == nil || IsNil(o.Fee) {
		var ret string
		return ret
	}
	return *o.Fee
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFastWithdrawSignInfo) GetFeeOk() (*string, bool) {
	if o == nil || IsNil(o.Fee) {
		return nil, false
	}
	return o.Fee, true
}

// HasFee returns a boolean if a field has been set.
func (o *GetFastWithdrawSignInfo) HasFee() bool {
	if o != nil && !IsNil(o.Fee) {
		return true
	}

	return false
}

// SetFee gets a reference to the given string and assigns it to the Fee field.
func (o *GetFastWithdrawSignInfo) SetFee(v string) {
	o.Fee = &v
}

func (o GetFastWithdrawSignInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetFastWithdrawSignInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LpAccountId) {
		toSerialize["lpAccountId"] = o.LpAccountId
	}
	if !IsNil(o.FastWithdrawL2Key) {
		toSerialize["fastWithdrawL2Key"] = o.FastWithdrawL2Key
	}
	if !IsNil(o.FastWithdrawFactRegisterAddress) {
		toSerialize["fastWithdrawFactRegisterAddress"] = o.FastWithdrawFactRegisterAddress
	}
	if !IsNil(o.FastWithdrawMaxAmount) {
		toSerialize["fastWithdrawMaxAmount"] = o.FastWithdrawMaxAmount
	}
	if !IsNil(o.Fee) {
		toSerialize["fee"] = o.Fee
	}
	return toSerialize, nil
}

type NullableGetFastWithdrawSignInfo struct {
	value *GetFastWithdrawSignInfo
	isSet bool
}

func (v NullableGetFastWithdrawSignInfo) Get() *GetFastWithdrawSignInfo {
	return v.value
}

func (v *NullableGetFastWithdrawSignInfo) Set(val *GetFastWithdrawSignInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFastWithdrawSignInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFastWithdrawSignInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFastWithdrawSignInfo(val *GetFastWithdrawSignInfo) *NullableGetFastWithdrawSignInfo {
	return &NullableGetFastWithdrawSignInfo{value: val, isSet: true}
}

func (v NullableGetFastWithdrawSignInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFastWithdrawSignInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


