/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StatDayTrade type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatDayTrade{}

// StatDayTrade 日交易信息
type StatDayTrade struct {
	// 日期
	DayTime *string `json:"dayTime,omitempty"`
	// 总交易笔数
	TotalTrades *string `json:"totalTrades,omitempty"`
	// 总交易额
	TotalValue *string `json:"totalValue,omitempty"`
	// 创建时间
	CreateTime *string `json:"createTime,omitempty"`
}

// NewStatDayTrade instantiates a new StatDayTrade object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatDayTrade() *StatDayTrade {
	this := StatDayTrade{}
	return &this
}

// NewStatDayTradeWithDefaults instantiates a new StatDayTrade object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatDayTradeWithDefaults() *StatDayTrade {
	this := StatDayTrade{}
	return &this
}

// GetDayTime returns the DayTime field value if set, zero value otherwise.
func (o *StatDayTrade) GetDayTime() string {
	if o == nil || IsNil(o.DayTime) {
		var ret string
		return ret
	}
	return *o.DayTime
}

// GetDayTimeOk returns a tuple with the DayTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatDayTrade) GetDayTimeOk() (*string, bool) {
	if o == nil || IsNil(o.DayTime) {
		return nil, false
	}
	return o.DayTime, true
}

// HasDayTime returns a boolean if a field has been set.
func (o *StatDayTrade) HasDayTime() bool {
	if o != nil && !IsNil(o.DayTime) {
		return true
	}

	return false
}

// SetDayTime gets a reference to the given string and assigns it to the DayTime field.
func (o *StatDayTrade) SetDayTime(v string) {
	o.DayTime = &v
}

// GetTotalTrades returns the TotalTrades field value if set, zero value otherwise.
func (o *StatDayTrade) GetTotalTrades() string {
	if o == nil || IsNil(o.TotalTrades) {
		var ret string
		return ret
	}
	return *o.TotalTrades
}

// GetTotalTradesOk returns a tuple with the TotalTrades field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatDayTrade) GetTotalTradesOk() (*string, bool) {
	if o == nil || IsNil(o.TotalTrades) {
		return nil, false
	}
	return o.TotalTrades, true
}

// HasTotalTrades returns a boolean if a field has been set.
func (o *StatDayTrade) HasTotalTrades() bool {
	if o != nil && !IsNil(o.TotalTrades) {
		return true
	}

	return false
}

// SetTotalTrades gets a reference to the given string and assigns it to the TotalTrades field.
func (o *StatDayTrade) SetTotalTrades(v string) {
	o.TotalTrades = &v
}

// GetTotalValue returns the TotalValue field value if set, zero value otherwise.
func (o *StatDayTrade) GetTotalValue() string {
	if o == nil || IsNil(o.TotalValue) {
		var ret string
		return ret
	}
	return *o.TotalValue
}

// GetTotalValueOk returns a tuple with the TotalValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatDayTrade) GetTotalValueOk() (*string, bool) {
	if o == nil || IsNil(o.TotalValue) {
		return nil, false
	}
	return o.TotalValue, true
}

// HasTotalValue returns a boolean if a field has been set.
func (o *StatDayTrade) HasTotalValue() bool {
	if o != nil && !IsNil(o.TotalValue) {
		return true
	}

	return false
}

// SetTotalValue gets a reference to the given string and assigns it to the TotalValue field.
func (o *StatDayTrade) SetTotalValue(v string) {
	o.TotalValue = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *StatDayTrade) GetCreateTime() string {
	if o == nil || IsNil(o.CreateTime) {
		var ret string
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatDayTrade) GetCreateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *StatDayTrade) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given string and assigns it to the CreateTime field.
func (o *StatDayTrade) SetCreateTime(v string) {
	o.CreateTime = &v
}

func (o StatDayTrade) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatDayTrade) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DayTime) {
		toSerialize["dayTime"] = o.DayTime
	}
	if !IsNil(o.TotalTrades) {
		toSerialize["totalTrades"] = o.TotalTrades
	}
	if !IsNil(o.TotalValue) {
		toSerialize["totalValue"] = o.TotalValue
	}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	return toSerialize, nil
}

type NullableStatDayTrade struct {
	value *StatDayTrade
	isSet bool
}

func (v NullableStatDayTrade) Get() *StatDayTrade {
	return v.value
}

func (v *NullableStatDayTrade) Set(val *StatDayTrade) {
	v.value = val
	v.isSet = true
}

func (v NullableStatDayTrade) IsSet() bool {
	return v.isSet
}

func (v *NullableStatDayTrade) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatDayTrade(val *StatDayTrade) *NullableStatDayTrade {
	return &NullableStatDayTrade{value: val, isSet: true}
}

func (v NullableStatDayTrade) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatDayTrade) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


