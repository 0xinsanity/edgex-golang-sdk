/*
Http Gateway

Contains interface documents such as accounts, assets, transactions, etc.

API version: v1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BookOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BookOrder{}

// BookOrder 订单簿信息
type BookOrder struct {
	// 价格
	Price *string `json:"price,omitempty"`
	// 数量
	Size *string `json:"size,omitempty"`
}

// NewBookOrder instantiates a new BookOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookOrder() *BookOrder {
	this := BookOrder{}
	return &this
}

// NewBookOrderWithDefaults instantiates a new BookOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookOrderWithDefaults() *BookOrder {
	this := BookOrder{}
	return &this
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *BookOrder) GetPrice() string {
	if o == nil || IsNil(o.Price) {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookOrder) GetPriceOk() (*string, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *BookOrder) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *BookOrder) SetPrice(v string) {
	o.Price = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *BookOrder) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookOrder) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *BookOrder) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *BookOrder) SetSize(v string) {
	o.Size = &v
}

func (o BookOrder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BookOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	return toSerialize, nil
}

type NullableBookOrder struct {
	value *BookOrder
	isSet bool
}

func (v NullableBookOrder) Get() *BookOrder {
	return v.value
}

func (v *NullableBookOrder) Set(val *BookOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableBookOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableBookOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookOrder(val *BookOrder) *NullableBookOrder {
	return &NullableBookOrder{value: val, isSet: true}
}

func (v NullableBookOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


